{
  "$schema" : "https://json-schema.org/draft/2020-12/schema",
  "$id" : "https://dss-extensions.org/altdss-schema/2023-12-13.schema.json",
  "$defs" : {
    "Complex" : {
      "type" : "array",
      "items" : {
        "type" : "number"
      },
      "minItems" : 2,
      "maxItems" : 2,
      "$comment" : "A **rectangular** complex number represented as an array of two floating-point numbers, real and imaginary parts."
    },
    "PComplex" : {
      "type" : "array",
      "items" : {
        "type" : "number"
      },
      "minItems" : 2,
      "maxItems" : 2,
      "$comment" : "A **polar** complex number represented as an array of two floating-point numbers, magnitude and angle parts. Angle in degrees."
    },
    "SymmetricMatrix" : {
      "title" : "SymmetricMatrix",
      "type" : "array",
      "items" : {
        "type" : "array",
        "items" : {
          "type" : "number"
        }
      }
    },
    "ArrayOrFilePath" : {
      "oneOf" : [
        {
          "title" : "FloatArray",
          "type" : "array",
          "items" : {
            "type" : "number"
          }
        },
        {
          "title" : "FloatArrayFromCSV",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "format" : "file-path"
            },
            "Column" : {
              "type" : "integer",
              "default" : 1,
              "exclusiveMinimum" : 0
            },
            "Header" : {
              "type" : "boolean",
              "default" : false
            }
          },
          "required" : [
            "CSVFile"
          ]
        },
        {
          "title" : "FloatArrayFromDbl",
          "type" : "object",
          "properties" : {
            "DblFile" : {
              "type" : "string",
              "format" : "file-path"
            }
          },
          "required" : [
            "DblFile"
          ]
        },
        {
          "title" : "FloatArrayFromSng",
          "type" : "object",
          "properties" : {
            "SngFile" : {
              "type" : "string",
              "format" : "file-path"
            }
          },
          "required" : [
            "SngFile"
          ]
        }
      ]
    },
    "StringArrayOrFilePath" : {
      "oneOf" : [
        {
          "title" : "StringArray",
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 1
          }
        },
        {
          "title" : "StringArrayFromFile",
          "type" : "object",
          "properties" : {
            "File" : {
              "type" : "string",
              "format" : "file-path"
            }
          },
          "required" : [
            "File"
          ]
        }
      ]
    },
    "JSONFilePath" : {
      "title" : "JSONFilePath",
      "type" : "object",
      "properties" : {
        "JSONFile" : {
          "type" : "string",
          "format" : "file-path"
        }
      },
      "required" : [
        "JSONFile"
      ]
    },
    "JSONLinesFilePath" : {
      "title" : "JSONLinesFilePath",
      "type" : "object",
      "properties" : {
        "JSONLinesFile" : {
          "type" : "string",
          "format" : "file-path"
        }
      },
      "required" : [
        "JSONLinesFile"
      ]
    },
    "Bus" : {
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255
        },
        "X" : {
          "title" : "X",
          "type" : "number"
        },
        "Y" : {
          "title" : "Y",
          "type" : "number"
        },
        "kVLN" : {
          "title" : "kVLN",
          "type" : "number",
          "exclusiveMinimum" : 0
        },
        "kVLL" : {
          "title" : "kVLL",
          "type" : "number",
          "exclusiveMinimum" : 0
        },
        "Keep" : {
          "title" : "Keep",
          "type" : "boolean",
          "default" : false
        }
      },
      "anyOf" : [
        {
          "required" : [
            "kVLN"
          ],
          "not" : {
            "required" : [
              "kVLL"
            ]
          }
        },
        {
          "required" : [
            "kVLL"
          ],
          "not" : {
            "required" : [
              "kVLN"
            ]
          }
        },
        {
          "not" : {
            "required" : [
              "kVLN",
              "kVLL"
            ]
          }
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "BusConnection" : {
      "type" : "string",
      "pattern" : "[^.]+(\\.[0-9]+)*"
    },
    "DynInitType" : {
      "title" : "DynInitType",
      "type" : "object",
      "additionalProperties" : {
        "anyOf" : [
          {
            "type" : "string"
          },
          {
            "type" : "number"
          }
        ]
      }
    },
    "VisualizeQuantity" : {
      "title" : "Visualize: Quantity",
      "type" : "string",
      "enum" : [
        "Currents",
        "Voltages",
        "Powers"
      ],
      "$dssFullEnum" : [
        [
          "Currents",
          "Currents",
          1
        ],
        [
          "Voltages",
          "Voltages",
          2
        ],
        [
          "Powers",
          "Powers",
          3
        ]
      ]
    },
    "ReductionStrategy" : {
      "title" : "Reduction Strategy",
      "type" : "string",
      "enum" : [
        "Default",
        "ShortLines",
        "MergeParallel",
        "BreakLoop",
        "Dangling",
        "Switches",
        "Laterals"
      ],
      "$dssFullEnum" : [
        [
          "Default",
          "Default",
          0
        ],
        [
          "ShortLines",
          "ShortLines",
          1
        ],
        [
          "MergeParallel",
          "MergeParallel",
          2
        ],
        [
          "BreakLoop",
          "BreakLoop",
          3
        ],
        [
          "Dangling",
          "Dangling",
          4
        ],
        [
          "Switches",
          "Switches",
          5
        ],
        [
          "Laterals",
          "Laterals",
          6
        ]
      ]
    },
    "EarthModel" : {
      "title" : "Earth Model",
      "type" : "string",
      "enum" : [
        "Carson",
        "FullCarson",
        "Deri"
      ],
      "$dssFullEnum" : [
        [
          "Carson",
          "Carson",
          1
        ],
        [
          "FullCarson",
          "FullCarson",
          2
        ],
        [
          "Deri",
          "Deri",
          3
        ]
      ]
    },
    "LineType" : {
      "title" : "Line Type",
      "type" : "string",
      "enum" : [
        "oh",
        "ug",
        "ug_ts",
        "ug_cn",
        "swt_ldbrk",
        "swt_fuse",
        "swt_sect",
        "swt_rec",
        "swt_disc",
        "swt_brk",
        "swt_elbow",
        "busbar"
      ],
      "$dssFullEnum" : [
        [
          "oh",
          "oh",
          1
        ],
        [
          "ug",
          "ug",
          2
        ],
        [
          "ug_ts",
          "ug_ts",
          3
        ],
        [
          "ug_cn",
          "ug_cn",
          4
        ],
        [
          "swt_ldbrk",
          "swt_ldbrk",
          5
        ],
        [
          "swt_fuse",
          "swt_fuse",
          6
        ],
        [
          "swt_sect",
          "swt_sect",
          7
        ],
        [
          "swt_rec",
          "swt_rec",
          8
        ],
        [
          "swt_disc",
          "swt_disc",
          9
        ],
        [
          "swt_brk",
          "swt_brk",
          10
        ],
        [
          "swt_elbow",
          "swt_elbow",
          11
        ],
        [
          "busbar",
          "busbar",
          12
        ]
      ]
    },
    "LengthUnit" : {
      "title" : "Length Unit",
      "type" : "string",
      "enum" : [
        "none",
        "mi",
        "kft",
        "km",
        "m",
        "ft",
        "in",
        "cm",
        "mm"
      ],
      "$dssFullEnum" : [
        [
          "none",
          "none",
          0
        ],
        [
          "mi",
          "mi",
          1
        ],
        [
          "kft",
          "kft",
          2
        ],
        [
          "km",
          "km",
          3
        ],
        [
          "m",
          "m",
          4
        ],
        [
          "ft",
          "ft",
          5
        ],
        [
          "in",
          "in",
          6
        ],
        [
          "cm",
          "cm",
          7
        ],
        [
          "mm",
          "mm",
          8
        ]
      ]
    },
    "ScanType" : {
      "title" : "Scan Type",
      "type" : "string",
      "enum" : [
        "None",
        "Zero",
        "Positive"
      ],
      "$dssFullEnum" : [
        [
          "None",
          "None",
          -1
        ],
        [
          "Zero",
          "Zero",
          0
        ],
        [
          "Positive",
          "Positive",
          1
        ]
      ]
    },
    "SequenceType" : {
      "title" : "Sequence Type",
      "type" : "string",
      "enum" : [
        "Negative",
        "Zero",
        "Positive"
      ],
      "$dssFullEnum" : [
        [
          "Negative",
          "Negative",
          -1
        ],
        [
          "Zero",
          "Zero",
          0
        ],
        [
          "Positive",
          "Positive",
          1
        ]
      ]
    },
    "Connection" : {
      "title" : "Connection",
      "type" : "string",
      "enum" : [
        "Wye",
        "Delta"
      ],
      "$dssFullEnum" : [
        [
          "Wye",
          "wye",
          0
        ],
        [
          "Delta",
          "delta",
          1
        ]
      ]
    },
    "CoreType" : {
      "title" : "Core Type",
      "type" : "string",
      "enum" : [
        "shell",
        "1-phase",
        "3-leg",
        "4-leg",
        "5-leg",
        "core-1-phase"
      ],
      "$dssFullEnum" : [
        [
          "Shell",
          "shell",
          0
        ],
        [
          "OnePhase",
          "1-phase",
          1
        ],
        [
          "ThreeLeg",
          "3-leg",
          3
        ],
        [
          "FourLeg",
          "4-leg",
          4
        ],
        [
          "FiveLeg",
          "5-leg",
          5
        ],
        [
          "CoreOnePhase",
          "core-1-phase",
          9
        ]
      ]
    },
    "PhaseSequence" : {
      "title" : "Phase Sequence",
      "type" : "string",
      "enum" : [
        "Lag",
        "Lead"
      ],
      "$dssFullEnum" : [
        [
          "Lag",
          "Lag",
          0
        ],
        [
          "Lead",
          "Lead",
          1
        ]
      ]
    },
    "LoadSolutionModel" : {
      "title" : "Load Solution Model",
      "type" : "string",
      "enum" : [
        "PowerFlow",
        "Admittance"
      ],
      "$dssFullEnum" : [
        [
          "PowerFlow",
          "PowerFlow",
          1
        ],
        [
          "Admittance",
          "Admittance",
          2
        ]
      ]
    },
    "RandomType" : {
      "title" : "Random Type",
      "type" : "string",
      "enum" : [
        "None",
        "Gaussian",
        "Uniform",
        "LogNormal"
      ],
      "$dssFullEnum" : [
        [
          "None",
          "None",
          0
        ],
        [
          "Gaussian",
          "Gaussian",
          1
        ],
        [
          "Uniform",
          "Uniform",
          2
        ],
        [
          "LogNormal",
          "LogNormal",
          3
        ]
      ]
    },
    "ControlMode" : {
      "title" : "Control Mode",
      "type" : "string",
      "enum" : [
        "Off",
        "Static",
        "Event",
        "Time",
        "MultiRate"
      ],
      "$dssFullEnum" : [
        [
          "Off",
          "Off",
          -1
        ],
        [
          "Static",
          "Static",
          0
        ],
        [
          "Event",
          "Event",
          1
        ],
        [
          "Time",
          "Time",
          2
        ],
        [
          "MultiRate",
          "MultiRate",
          3
        ]
      ]
    },
    "InverterControlMode" : {
      "title" : "Inverter Control Mode",
      "type" : "string",
      "enum" : [
        "GFL",
        "GFM"
      ],
      "$dssFullEnum" : [
        [
          "GFL",
          "GFL",
          0
        ],
        [
          "GFM",
          "GFM",
          1
        ]
      ]
    },
    "SolutionMode" : {
      "title" : "Solution Mode",
      "type" : "string",
      "enum" : [
        "Snapshot",
        "Daily",
        "Yearly",
        "M1",
        "LD1",
        "PeakDay",
        "DutyCycle",
        "Direct",
        "MF",
        "FaultStudy",
        "M2",
        "M3",
        "LD2",
        "AutoAdd",
        "Dynamic",
        "Harmonic",
        "Time",
        "HarmonicT"
      ],
      "$dssFullEnum" : [
        [
          "Snapshot",
          "Snap",
          0
        ],
        [
          "Daily",
          "Daily",
          1
        ],
        [
          "Yearly",
          "Yearly",
          2
        ],
        [
          "M1",
          "M1",
          3
        ],
        [
          "LD1",
          "LD1",
          4
        ],
        [
          "PeakDay",
          "PeakDay",
          5
        ],
        [
          "DutyCycle",
          "DutyCycle",
          6
        ],
        [
          "Direct",
          "Direct",
          7
        ],
        [
          "MF",
          "MF",
          8
        ],
        [
          "FaultStudy",
          "FaultStudy",
          9
        ],
        [
          "M2",
          "M2",
          10
        ],
        [
          "M3",
          "M3",
          11
        ],
        [
          "LD2",
          "LD2",
          12
        ],
        [
          "AutoAdd",
          "AutoAdd",
          13
        ],
        [
          "Dynamic",
          "Dynamic",
          14
        ],
        [
          "Harmonic",
          "Harmonic",
          15
        ],
        [
          "Time",
          "Time",
          16
        ],
        [
          "HarmonicT",
          "HarmonicT",
          17
        ]
      ]
    },
    "SolutionAlgorithm" : {
      "title" : "Solution Algorithm",
      "type" : "string",
      "enum" : [
        "Normal",
        "Newton"
      ],
      "$dssFullEnum" : [
        [
          "Normal",
          "Normal",
          0
        ],
        [
          "Newton",
          "Newton",
          1
        ]
      ]
    },
    "CircuitModel" : {
      "title" : "Circuit Model",
      "type" : "string",
      "enum" : [
        "Multiphase",
        "Positive"
      ],
      "$dssFullEnum" : [
        [
          "Multiphase",
          "Multiphase",
          0
        ],
        [
          "Positive",
          "Positive",
          1
        ]
      ]
    },
    "AutoAddDeviceType" : {
      "title" : "AutoAdd Device Type",
      "type" : "string",
      "enum" : [
        "Generator",
        "Capacitor"
      ],
      "$dssFullEnum" : [
        [
          "Generator",
          "Generator",
          1
        ],
        [
          "Capacitor",
          "Capacitor",
          2
        ]
      ]
    },
    "LoadShapeClass" : {
      "title" : "Load Shape Class",
      "type" : "string",
      "enum" : [
        "None",
        "Daily",
        "Yearly",
        "Duty"
      ],
      "$dssFullEnum" : [
        [
          "None",
          "None",
          -1
        ],
        [
          "Daily",
          "Daily",
          0
        ],
        [
          "Yearly",
          "Yearly",
          1
        ],
        [
          "Duty",
          "Duty",
          2
        ]
      ]
    },
    "MonitoredPhase" : {
      "title" : "Monitored Phase",
      "oneOf" : [
        {
          "type" : "string",
          "enum" : [
            "min",
            "max",
            "avg"
          ]
        },
        {
          "type" : "integer",
          "minimum" : 1
        }
      ],
      "$dssFullEnum" : [
        [
          "min",
          "min",
          -3
        ],
        [
          "max",
          "max",
          -2
        ],
        [
          "avg",
          "avg",
          -1
        ]
      ]
    },
    "PlotProfilePhases" : {
      "title" : "Plot: Profile Phases",
      "oneOf" : [
        {
          "type" : "string",
          "enum" : [
            "Default",
            "All",
            "Primary",
            "LL3Ph",
            "LLAll",
            "LLPrimary"
          ]
        },
        {
          "type" : "integer",
          "minimum" : 1
        }
      ],
      "$dssFullEnum" : [
        [
          "Default",
          "Default",
          -1
        ],
        [
          "All",
          "All",
          -2
        ],
        [
          "Primary",
          "Primary",
          -3
        ],
        [
          "LL3Ph",
          "LL3Ph",
          -4
        ],
        [
          "LLAll",
          "LLAll",
          -5
        ],
        [
          "LLPrimary",
          "LLPrimary",
          -6
        ]
      ]
    },
    "LineCode" : {
      "title" : "LineCode",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "NPhases" : {
          "type" : "integer",
          "default" : 3,
          "description" : "Number of phases in the line this line code data represents.  Setting this property reinitializes the line code.  Impedance matrix is reset for default symmetrical component.",
          "title" : "NPhases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Units" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "One of (ohms per ...) {none|mi|km|kft|m|me|ft|in|cm}.  Default is none; assumes units agree with length units given in Line object",
          "title" : "Units",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Frequency at which impedances are specified.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "NormAmps" : {
          "type" : "number",
          "default" : 4.0000000000000000E+002,
          "description" : "Normal ampere limit on line.  This is the so-called Planning Limit. It may also be the value above which load will have to be dropped in a contingency.  Usually about 75% - 80% of the emergency (one-hour) rating.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "EmergAmps" : {
          "type" : "number",
          "default" : 6.0000000000000000E+002,
          "description" : "Emergency ampere limit on line (usually one-hour rating).",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Number of faults per unit length per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "PctPerm" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Percentage of the faults that become permanent.",
          "title" : "PctPerm",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Repair" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "Kron" : {
          "type" : "boolean",
          "default" : false,
          "description" : "Kron = Y/N. Default=N.  Perform Kron reduction on the impedance matrix after it is formed, reducing order by 1. Eliminates the conductor designated by the \"Neutral=\" property. Do this after the R, X, and C matrices are defined. Ignored for symmetrical components. May be issued more than once to eliminate more than one conductor by resetting the Neutral property after the previous invoking of this property. Generally, you do not want to do a Kron reduction on the matrix if you intend to solve at a frequency other than the base frequency and exploit the Rg and Xg values.",
          "writeOnly" : true,
          "title" : "Kron",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 25
        },
        "Rg" : {
          "type" : "number",
          "default" : 1.8050000000000000E-002,
          "description" : "Carson earth return resistance per unit length used to compute impedance values at base frequency.  For making better frequency adjustments. Default is 0.01805 = 60 Hz value in ohms per kft (matches default line impedances). This value is required for harmonic solutions if you wish to adjust the earth return impedances for frequency. If not, set both Rg and Xg = 0.",
          "units" : "Ω/[length_unit]",
          "title" : "Rg",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 19
        },
        "Xg" : {
          "type" : "number",
          "default" : 1.5508100000000000E-001,
          "description" : "Carson earth return reactance per unit length used to compute impedance values at base frequency.  For making better frequency adjustments. Default value is 0.155081 = 60 Hz value in ohms per kft (matches default line impedances). This value is required for harmonic solutions if you wish to adjust the earth return impedances for frequency. If not, set both Rg and Xg = 0.",
          "units" : "Ω/[length_unit]",
          "title" : "Xg",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 20
        },
        "rho" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Default=100 meter ohms.  Earth resitivity used to compute earth correction factor.",
          "units" : "Ωm",
          "title" : "rho",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 21
        },
        "Neutral" : {
          "type" : "integer",
          "default" : 3,
          "description" : "Designates which conductor is the \"neutral\" conductor that will be eliminated by Kron reduction. Default is the last conductor (nphases value). After Kron reduction is set to 0. Subsequent issuing of Kron=Yes will not do anything until this property is set to a legal value. Applies only to LineCodes defined by R, X, and C matrix.",
          "title" : "Neutral",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 22
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            4.0000000000000000E+002
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in lines.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 23
        },
        "LineType" : {
          "$ref" : "#/$defs/LineType",
          "default" : "oh",
          "description" : "Code designating the type of line. \nOne of: OH, UG, UG_TS, UG_CN, SWT_LDBRK, SWT_FUSE, SWT_SECT, SWT_REC, SWT_DISC, SWT_BRK, SWT_ELBOW, BUSBAR\n\nOpenDSS currently does not use this internally. For whatever purpose the user defines. Default is OH.",
          "title" : "LineType",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 24
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Z0, Z1, C0, C1",
          "type" : "object",
          "properties" : {
            "R1" : {
              "type" : "number",
              "default" : 5.8000000000000003E-002,
              "description" : "Positive-sequence Resistance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition. See also Rmatrix.",
              "units" : "Ω/[length_unit]",
              "title" : "R1",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 3
            },
            "X1" : {
              "type" : "number",
              "default" : 1.2060000000000000E-001,
              "description" : "Positive-sequence Reactance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition. See also Xmatrix",
              "units" : "Ω/[length_unit]",
              "title" : "X1",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 4
            },
            "R0" : {
              "type" : "number",
              "default" : 1.7840000000000000E-001,
              "description" : "Zero-sequence Resistance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition.",
              "units" : "Ω/[length_unit]",
              "title" : "R0",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "X0" : {
              "type" : "number",
              "default" : 4.0470000000000000E-001,
              "description" : "Zero-sequence Reactance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition.",
              "units" : "Ω/[length_unit]",
              "title" : "X0",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            },
            "C1" : {
              "type" : "number",
              "default" : 3.3999999999999995E+000,
              "description" : "Positive-sequence capacitance, nf per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition. See also Cmatrix and B1.",
              "units" : "nF/[length_unit]",
              "title" : "C1",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 7
            },
            "C0" : {
              "type" : "number",
              "default" : 1.5999999999999999E+000,
              "description" : "Zero-sequence capacitance, nf per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition. See also B0.",
              "units" : "nF/[length_unit]",
              "title" : "C0",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "R1",
            "X1",
            "C1"
          ]
        },
        {
          "title" : "ZMatrix, CMatrix",
          "type" : "object",
          "properties" : {
            "RMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "default" : [
                [
                  9.8133333333333322E-002,
                  4.0133333333333333E-002,
                  4.0133333333333333E-002
                ],
                [
                  4.0133333333333333E-002,
                  9.8133333333333322E-002,
                  4.0133333333333333E-002
                ],
                [
                  4.0133333333333333E-002,
                  4.0133333333333333E-002,
                  9.8133333333333322E-002
                ]
              ],
              "$dssShape" : [
                "NPhases",
                "NPhases"
              ],
              "description" : "Resistance matrix, lower triangle, ohms per unit length. Order of the matrix is the number of phases. May be used to specify the impedance of any line configuration.  For balanced line models, you may use the standard symmetrical component data definition instead.",
              "units" : "Ω/[length_unit]",
              "title" : "RMatrix",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 10
            },
            "XMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "default" : [
                [
                  2.1529999999999999E-001,
                  9.4700000000000006E-002,
                  9.4700000000000006E-002
                ],
                [
                  9.4700000000000006E-002,
                  2.1529999999999999E-001,
                  9.4700000000000006E-002
                ],
                [
                  9.4700000000000006E-002,
                  9.4700000000000006E-002,
                  2.1529999999999999E-001
                ]
              ],
              "$dssShape" : [
                "NPhases",
                "NPhases"
              ],
              "description" : "Reactance matrix, lower triangle, ohms per unit length. Order of the matrix is the number of phases. May be used to specify the impedance of any line configuration.  For balanced line models, you may use the standard symmetrical component data definition instead.",
              "units" : "Ω/[length_unit]",
              "title" : "XMatrix",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 11
            },
            "CMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "default" : [
                [
                  2.7999999999999998E+000,
                  -5.9999999999999987E-001,
                  -5.9999999999999987E-001
                ],
                [
                  -5.9999999999999987E-001,
                  2.7999999999999998E+000,
                  -5.9999999999999987E-001
                ],
                [
                  -5.9999999999999987E-001,
                  -5.9999999999999987E-001,
                  2.7999999999999998E+000
                ]
              ],
              "$dssShape" : [
                "NPhases",
                "NPhases"
              ],
              "description" : "Nodal Capacitance matrix, lower triangle, nf per unit length.Order of the matrix is the number of phases. May be used to specify the shunt capacitance of any line configuration.  For balanced line models, you may use the standard symmetrical component data definition instead.",
              "units" : "nF/[length_unit]",
              "title" : "CMatrix",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 12
            }
          },
          "required" : [
            "RMatrix",
            "XMatrix"
          ]
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "LineCodeList" : {
      "title" : "LineCodeList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/LineCode"
      }
    },
    "LineCodeContainer" : {
      "default" : [
      ],
      "title" : "LineCodeContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/LineCodeList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "LoadShape" : {
      "title" : "LoadShape",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Mean" : {
          "type" : "number",
          "description" : "Mean of the active power multipliers.  This is computed on demand the first time a value is needed.  However, you may set it to another value independently. Used for Monte Carlo load simulations.",
          "title" : "Mean",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "StdDev" : {
          "type" : "number",
          "description" : "Standard deviation of active power multipliers.  This is computed on demand the first time a value is needed.  However, you may set it to another value independently.Is overwritten if you subsequently read in a curve\n\nUsed for Monte Carlo load simulations.",
          "title" : "StdDev",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 6
        },
        "Action" : {
          "$ref" : "#/$defs/LoadShape/$defs/LoadShapeAction",
          "description" : "{NORMALIZE | DblSave | SngSave} After defining load curve data, setting action=normalize will modify the multipliers so that the peak is 1.0. The mean and std deviation are recomputed.\n\nSetting action=DblSave or SngSave will cause the present mult and qmult values to be written to either a packed file of double or single. The filename is the loadshape name. The mult array will have a \"_P\" appended on the file name and the qmult array, if it exists, will have \"_Q\" appended.",
          "writeOnly" : true,
          "title" : "Action",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 19
        },
        "UseActual" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No* | True | False*} If true, signifies to Load, Generator, Vsource, or other objects to use the return value as the actual kW, kvar, kV, or other value rather than a multiplier. Nominally for AMI Load data but may be used for other functions.",
          "title" : "UseActual",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 11
        },
        "PMax" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "kW value at the time of max power. Is automatically set upon reading in a loadshape. Use this property to override the value automatically computed or to retrieve the value computed.",
          "units" : "kW",
          "title" : "PMax",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 12
        },
        "QMax" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "kvar value at the time of max kW power. Is automatically set upon reading in a loadshape. Use this property to override the value automatically computed or to retrieve the value computed.",
          "units" : "kvar",
          "title" : "QMax",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 13
        },
        "PBase" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Base P value for normalization. Default is zero, meaning the peak will be used.",
          "units" : "kW",
          "title" : "PBase",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 14
        },
        "QBase" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Base Q value for normalization. Default is zero, meaning the peak will be used.",
          "units" : "kvar",
          "title" : "QBase",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 15
        },
        "MemoryMapping" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No* | True | False*} Enables the memory mapping functionality for dealing with large amounts of load shapes. \nBy default is False. Use it to accelerate the model loading when the containing a large number of load shapes.",
          "title" : "MemoryMapping",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 2
        },
        "Interpolation" : {
          "$ref" : "#/$defs/LoadShape/$defs/LoadShapeInterpolation",
          "default" : "Avg",
          "description" : "{AVG* | EDGE} Defines the interpolation method used for connecting distant dots within the load shape.\n\nBy default is AVG (average), which will return a multiplier for missing intervals based on the closest multiplier in time.\nEDGE interpolation keeps the last known value for missing intervals until the next defined multiplier arrives.",
          "title" : "Interpolation",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 18
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "PMult, QMult, Hour",
          "type" : "object",
          "properties" : {
            "PMult" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Synonym for \"mult\".",
              "title" : "PMult",
              "$dssPropertyIndex" : 19,
              "$dssPropertyOrder" : 16
            },
            "QMult" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of multiplier values for reactive power (Q).  You can also use the syntax: \nqmult = (file=filename)     !for text file one value per line\nqmult = (dblfile=filename)  !for packed file of doubles\nqmult = (sngfile=filename)  !for packed file of singles \nqmult = (file=MyCSVFile.csv, col=4, header=yes)  !for multicolumn CSV files ",
              "title" : "QMult",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 10
            },
            "Hour" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of hour values. Only necessary to define for variable interval data (Interval=0). If you set Interval>0 to denote fixed interval data, DO NOT USE THIS PROPERTY. You can also use the syntax: \nhour = (file=filename)     !for text file one value per line\nhour = (dblfile=filename)  !for packed file of doubles\nhour = (sngfile=filename)  !for packed file of singles ",
              "title" : "Hour",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 4
            }
          },
          "required" : [
            "PMult",
            "Hour"
          ]
        },
        {
          "title" : "PMult, QMult, Interval",
          "type" : "object",
          "properties" : {
            "PMult" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Synonym for \"mult\".",
              "title" : "PMult",
              "$dssPropertyIndex" : 19,
              "$dssPropertyOrder" : 16
            },
            "QMult" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of multiplier values for reactive power (Q).  You can also use the syntax: \nqmult = (file=filename)     !for text file one value per line\nqmult = (dblfile=filename)  !for packed file of doubles\nqmult = (sngfile=filename)  !for packed file of singles \nqmult = (file=MyCSVFile.csv, col=4, header=yes)  !for multicolumn CSV files ",
              "title" : "QMult",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 10
            },
            "Interval" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "minimum" : 0,
              "description" : "Time interval for fixed interval data, hrs. Default = 1. If Interval = 0 then time data (in hours) may be at either regular or  irregular intervals and time value must be specified using either the Hour property or input files. Then values are interpolated when Interval=0, but not for fixed interval data.  \n\nSee also \"sinterval\" and \"minterval\".",
              "units" : "hour",
              "title" : "Interval",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 3
            }
          },
          "required" : [
            "PMult",
            "Interval"
          ]
        },
        {
          "title" : "PQCSVFile",
          "type" : "object",
          "properties" : {
            "PQCSVFile" : {
              "type" : "string",
              "description" : "Switch input to a CSV text file containing (active, reactive) power (P, Q) multiplier pairs, one per row. \nIf the interval=0, there should be 3 items on each line: (hour, Pmult, Qmult)",
              "title" : "PQCSVFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 20,
              "$dssPropertyOrder" : 17
            }
          },
          "required" : [
            "PQCSVFile"
          ]
        },
        {
          "title" : "CSVFile",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "description" : "Switch input of active power load curve data to a CSV text file containing (hour, mult) points, or simply (mult) values for fixed time interval data, one per line. NOTE: This action may reset the number of points to a lower value.",
              "title" : "CSVFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 7
            }
          },
          "required" : [
            "CSVFile"
          ]
        },
        {
          "title" : "SngFile",
          "type" : "object",
          "properties" : {
            "SngFile" : {
              "type" : "string",
              "description" : "Switch input of active power load curve data to a binary file of singles containing (hour, mult) points, or simply (mult) values for fixed time interval data, packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "SngFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "SngFile"
          ]
        },
        {
          "title" : "DblFile",
          "type" : "object",
          "properties" : {
            "DblFile" : {
              "type" : "string",
              "description" : "Switch input of active power load curve data to a binary file of doubles containing (hour, mult) points, or simply (mult) values for fixed time interval data, packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "DblFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 9
            }
          },
          "required" : [
            "DblFile"
          ]
        }
      ],
      "required" : [
        "Name"
      ],
      "$defs" : {
        "LoadShapeAction" : {
          "title" : "LoadShape: Action",
          "type" : "string",
          "enum" : [
            "Normalize",
            "DblSave",
            "SngSave"
          ],
          "$dssFullEnum" : [
            [
              "Normalize",
              "Normalize",
              0
            ],
            [
              "DblSave",
              "DblSave",
              1
            ],
            [
              "SngSave",
              "SngSave",
              2
            ]
          ]
        },
        "LoadShapeInterpolation" : {
          "title" : "LoadShape: Interpolation",
          "type" : "string",
          "enum" : [
            "Avg",
            "Edge"
          ],
          "$dssFullEnum" : [
            [
              "Avg",
              "Avg",
              0
            ],
            [
              "Edge",
              "Edge",
              1
            ]
          ]
        }
      }
    },
    "LoadShapeList" : {
      "title" : "LoadShapeList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/LoadShape"
      }
    },
    "LoadShapeContainer" : {
      "default" : [
      ],
      "title" : "LoadShapeContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/LoadShapeList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "TShape" : {
      "title" : "TShape",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Mean" : {
          "type" : "number",
          "description" : "Mean of the temperature curve values.  This is computed on demand the first time a value is needed.  However, you may set it to another value independently. Used for Monte Carlo load simulations.",
          "title" : "Mean",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "StdDev" : {
          "type" : "number",
          "description" : "Standard deviation of the temperatures.  This is computed on demand the first time a value is needed.  However, you may set it to another value independently.Is overwritten if you subsequently read in a curve\n\nUsed for Monte Carlo load simulations.",
          "title" : "StdDev",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 6
        },
        "Action" : {
          "$ref" : "#/$defs/TShape/$defs/TShapeAction",
          "description" : "{DblSave | SngSave} After defining temperature curve data... Setting action=DblSave or SngSave will cause the present \"Temp\" values to be written to either a packed file of double or single. The filename is the Tshape name. ",
          "writeOnly" : true,
          "title" : "Action",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 10
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Temp, Hour",
          "type" : "object",
          "properties" : {
            "Temp" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of temperature values.  Units should be compatible with the object using the data. You can also use the syntax: \nTemp = (file=filename)     !for text file one value per line\nTemp = (dblfile=filename)  !for packed file of doubles\nTemp = (sngfile=filename)  !for packed file of singles \n\nNote: this property will reset Npts if the  number of values in the files are fewer.",
              "title" : "Temp",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 3
            },
            "Hour" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of hour values. Only necessary to define this property for variable interval data. If the data are fixed interval, do not use this property. You can also use the syntax: \nhour = (file=filename)     !for text file one value per line\nhour = (dblfile=filename)  !for packed file of doubles\nhour = (sngfile=filename)  !for packed file of singles ",
              "title" : "Hour",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 4
            }
          },
          "required" : [
            "Temp",
            "Hour"
          ]
        },
        {
          "title" : "Temp, Interval",
          "type" : "object",
          "properties" : {
            "Temp" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of temperature values.  Units should be compatible with the object using the data. You can also use the syntax: \nTemp = (file=filename)     !for text file one value per line\nTemp = (dblfile=filename)  !for packed file of doubles\nTemp = (sngfile=filename)  !for packed file of singles \n\nNote: this property will reset Npts if the  number of values in the files are fewer.",
              "title" : "Temp",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 3
            },
            "Interval" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "minimum" : 0,
              "description" : "Time interval for fixed interval data, hrs. Default = 1. If Interval = 0 then time data (in hours) may be at irregular intervals and time value must be specified using either the Hour property or input files. Then values are interpolated when Interval=0, but not for fixed interval data.  \n\nSee also \"sinterval\" and \"minterval\".",
              "title" : "Interval",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 2
            }
          },
          "required" : [
            "Temp",
            "Interval"
          ]
        },
        {
          "title" : "CSVFile",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "description" : "Switch input of  temperature curve data to a csv file containing (hour, Temp) points, or simply (Temp) values for fixed time interval data, one per line. NOTE: This action may reset the number of points to a lower value.",
              "title" : "CSVFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 7
            }
          },
          "required" : [
            "CSVFile"
          ]
        },
        {
          "title" : "SngFile",
          "type" : "object",
          "properties" : {
            "SngFile" : {
              "type" : "string",
              "description" : "Switch input of  temperature curve data to a binary file of singles containing (hour, Temp) points, or simply (Temp) values for fixed time interval data, packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "SngFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "SngFile"
          ]
        },
        {
          "title" : "DblFile",
          "type" : "object",
          "properties" : {
            "DblFile" : {
              "type" : "string",
              "description" : "Switch input of  temperature curve data to a binary file of doubles containing (hour, Temp) points, or simply (Temp) values for fixed time interval data, packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "DblFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 9
            }
          },
          "required" : [
            "DblFile"
          ]
        }
      ],
      "required" : [
        "Name"
      ],
      "$defs" : {
        "TShapeAction" : {
          "title" : "TShape: Action",
          "type" : "string",
          "enum" : [
            "DblSave",
            "SngSave"
          ],
          "$dssFullEnum" : [
            [
              "DblSave",
              "DblSave",
              0
            ],
            [
              "SngSave",
              "SngSave",
              1
            ]
          ]
        }
      }
    },
    "TShapeList" : {
      "title" : "TShapeList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/TShape"
      }
    },
    "TShapeContainer" : {
      "default" : [
      ],
      "title" : "TShapeContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/TShapeList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "PriceShape" : {
      "title" : "PriceShape",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Mean" : {
          "type" : "number",
          "description" : "Mean of the Price curve values.  This is computed on demand the first time a value is needed.  However, you may set it to another value independently. Used for Monte Carlo load simulations.",
          "title" : "Mean",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "StdDev" : {
          "type" : "number",
          "description" : "Standard deviation of the Prices.  This is computed on demand the first time a value is needed.  However, you may set it to another value independently.Is overwritten if you subsequently read in a curve\n\nUsed for Monte Carlo load simulations.",
          "title" : "StdDev",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 6
        },
        "Action" : {
          "$ref" : "#/$defs/PriceShape/$defs/PriceShapeAction",
          "description" : "{DblSave | SngSave} After defining Price curve data... Setting action=DblSave or SngSave will cause the present \"Price\" values to be written to either a packed file of double or single. The filename is the PriceShape name. ",
          "writeOnly" : true,
          "title" : "Action",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 10
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Price, Hour",
          "type" : "object",
          "properties" : {
            "Price" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of Price values.  Units should be compatible with the object using the data. You can also use the syntax: \nPrice = (file=filename)     !for text file one value per line\nPrice = (dblfile=filename)  !for packed file of doubles\nPrice = (sngfile=filename)  !for packed file of singles \n\nNote: this property will reset Npts if the  number of values in the files are fewer.",
              "title" : "Price",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 3
            },
            "Hour" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of hour values. Only necessary to define this property for variable interval data. If the data are fixed interval, do not use this property. You can also use the syntax: \nhour = (file=filename)     !for text file one value per line\nhour = (dblfile=filename)  !for packed file of doubles\nhour = (sngfile=filename)  !for packed file of singles ",
              "title" : "Hour",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 4
            }
          },
          "required" : [
            "Price",
            "Hour"
          ]
        },
        {
          "title" : "Price, Interval",
          "type" : "object",
          "properties" : {
            "Price" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of Price values.  Units should be compatible with the object using the data. You can also use the syntax: \nPrice = (file=filename)     !for text file one value per line\nPrice = (dblfile=filename)  !for packed file of doubles\nPrice = (sngfile=filename)  !for packed file of singles \n\nNote: this property will reset Npts if the  number of values in the files are fewer.",
              "title" : "Price",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 3
            },
            "Interval" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "description" : "Time interval for fixed interval data, hrs. Default = 1. If Interval = 0 then time data (in hours) may be at irregular intervals and time value must be specified using either the Hour property or input files. Then values are interpolated when Interval=0, but not for fixed interval data.  \n\nSee also \"sinterval\" and \"minterval\".",
              "title" : "Interval",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 2
            }
          },
          "required" : [
            "Price",
            "Interval"
          ]
        },
        {
          "title" : "CSVFile",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "description" : "Switch input of  Price curve data to a csv file containing (hour, Price) points, or simply (Price) values for fixed time interval data, one per line. NOTE: This action may reset the number of points to a lower value.",
              "title" : "CSVFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 7
            }
          },
          "required" : [
            "CSVFile"
          ]
        },
        {
          "title" : "SngFile",
          "type" : "object",
          "properties" : {
            "SngFile" : {
              "type" : "string",
              "description" : "Switch input of  Price curve data to a binary file of singles containing (hour, Price) points, or simply (Price) values for fixed time interval data, packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "SngFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "SngFile"
          ]
        },
        {
          "title" : "DblFile",
          "type" : "object",
          "properties" : {
            "DblFile" : {
              "type" : "string",
              "description" : "Switch input of  Price curve data to a binary file of doubles containing (hour, Price) points, or simply (Price) values for fixed time interval data, packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "DblFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 9
            }
          },
          "required" : [
            "DblFile"
          ]
        }
      ],
      "required" : [
        "Name"
      ],
      "$defs" : {
        "PriceShapeAction" : {
          "title" : "PriceShape: Action",
          "type" : "string",
          "enum" : [
            "DblSave",
            "SngSave"
          ],
          "$dssFullEnum" : [
            [
              "DblSave",
              "DblSave",
              0
            ],
            [
              "SngSave",
              "SngSave",
              1
            ]
          ]
        }
      }
    },
    "PriceShapeList" : {
      "title" : "PriceShapeList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/PriceShape"
      }
    },
    "PriceShapeContainer" : {
      "default" : [
      ],
      "title" : "PriceShapeContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/PriceShapeList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "XYcurve" : {
      "title" : "XYcurve",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "XShift" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Shift X property values (in/out) by this amount of offset. Default = 0. Does not change original definition of arrays.",
          "title" : "XShift",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 7
        },
        "YShift" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Shift Y property values (in/out) by this amount of offset. Default = 0. Does not change original definition of arrays.",
          "title" : "YShift",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 8
        },
        "XScale" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Scale X property values (in/out) by this factor. Default = 1.0. Does not change original definition of arrays.",
          "title" : "XScale",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 9
        },
        "YScale" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Scale Y property values (in/out) by this factor. Default = 1.0. Does not change original definition of arrays.",
          "title" : "YScale",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 10
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Xarray, Yarray",
          "type" : "object",
          "properties" : {
            "XArray" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Alternate way to enter X values. Enter an array of X values corresponding to the Y values.  You can also use the syntax: \nXarray = (file=filename)     !for text file one value per line\nXarray = (dblfile=filename)  !for packed file of doubles\nXarray = (sngfile=filename)  !for packed file of singles \n\nNote: this property will reset Npts to a smaller value if the  number of values in the files are fewer.",
              "title" : "XArray",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 3
            },
            "YArray" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Alternate way to enter Y values. Enter an array of Y values corresponding to the X values.  You can also use the syntax: \nYarray = (file=filename)     !for text file one value per line\nYarray = (dblfile=filename)  !for packed file of doubles\nYarray = (sngfile=filename)  !for packed file of singles \n\nNote: this property will reset Npts to a smaller value if the  number of values in the files are fewer.",
              "title" : "YArray",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 2
            }
          },
          "required" : [
            "XArray",
            "YArray"
          ]
        },
        {
          "title" : "CSVFile",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "description" : "Switch input of  X-Y curve data to a CSV file containing X, Y points one per line. NOTE: This action may reset the number of points to a lower value.",
              "title" : "CSVFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 4
            }
          },
          "required" : [
            "CSVFile"
          ]
        },
        {
          "title" : "SngFile",
          "type" : "object",
          "properties" : {
            "SngFile" : {
              "type" : "string",
              "description" : "Switch input of  X-Y curve data to a binary file of SINGLES containing X, Y points packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "SngFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "SngFile"
          ]
        },
        {
          "title" : "DblFile",
          "type" : "object",
          "properties" : {
            "DblFile" : {
              "type" : "string",
              "description" : "Switch input of  X-Y  curve data to a binary file of DOUBLES containing X, Y points packed one after another. NOTE: This action may reset the number of points to a lower value.",
              "title" : "DblFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "DblFile"
          ]
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "XYcurveList" : {
      "title" : "XYcurveList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/XYcurve"
      }
    },
    "XYcurveContainer" : {
      "default" : [
      ],
      "title" : "XYcurveContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/XYcurveList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "GrowthShape" : {
      "title" : "GrowthShape",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Year, Mult",
          "type" : "object",
          "properties" : {
            "Year" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of year values, or a text file spec, corresponding to the multipliers. Enter only those years where the growth changes. May be any integer sequence -- just so it is consistent. See help on Mult.",
              "title" : "Year",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 2
            },
            "Mult" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NPts",
              "description" : "Array of growth multiplier values, or a text file spec, corresponding to the year values. Enter the multiplier by which you would multiply the previous year's load to get the present year's.\n\nExamples:\n\n  Year = [1, 2, 5]   Mult=[1.05, 1.025, 1.02].\n  Year= (File=years.txt) Mult= (file=mults.txt).\n\nText files contain one value per line.",
              "title" : "Mult",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 3
            }
          },
          "required" : [
            "Year",
            "Mult"
          ]
        },
        {
          "title" : "CSVFile",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "description" : "Switch input of growth curve data to a csv file containing (year, mult) points, one per line.",
              "title" : "CSVFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 4
            }
          },
          "required" : [
            "CSVFile"
          ]
        },
        {
          "title" : "SngFile",
          "type" : "object",
          "properties" : {
            "SngFile" : {
              "type" : "string",
              "description" : "Switch input of growth curve data to a binary file of singles containing (year, mult) points, packed one after another.",
              "title" : "SngFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "SngFile"
          ]
        },
        {
          "title" : "DblFile",
          "type" : "object",
          "properties" : {
            "DblFile" : {
              "type" : "string",
              "description" : "Switch input of growth curve data to a binary file of doubles containing (year, mult) points, packed one after another.",
              "title" : "DblFile",
              "format" : "file-path",
              "$dssLength" : "NPts",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "DblFile"
          ]
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "GrowthShapeList" : {
      "title" : "GrowthShapeList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/GrowthShape"
      }
    },
    "GrowthShapeContainer" : {
      "default" : [
      ],
      "title" : "GrowthShapeContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/GrowthShapeList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "TCC_Curve" : {
      "title" : "TCC_Curve",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "C_Array" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "NPts",
          "description" : "Array of current (or voltage) values corresponding to time values (see help on T_Array).",
          "title" : "C_Array",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 2
        },
        "T_Array" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "NPts",
          "description" : "Array of time values in sec. Typical array syntax: \nt_array = (1, 2, 3, 4, ...)\n\nCan also substitute a file designation: \nt_array =  (file=filename)\n\nThe specified file has one value per line.",
          "title" : "T_Array",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 3
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "TCC_CurveList" : {
      "title" : "TCC_CurveList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/TCC_Curve"
      }
    },
    "TCC_CurveContainer" : {
      "default" : [
      ],
      "title" : "TCC_CurveContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/TCC_CurveList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Spectrum" : {
      "title" : "Spectrum",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Harmonic, Angle, pctMag",
          "type" : "object",
          "properties" : {
            "Harmonic" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NumHarm",
              "description" : "Array of harmonic values. You can also use the syntax\nharmonic = (file=filename)     !for text file one value per line\nharmonic = (dblfile=filename)  !for packed file of doubles\nharmonic = (sngfile=filename)  !for packed file of singles ",
              "title" : "Harmonic",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 2
            },
            "Angle" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NumHarm",
              "description" : "Array of phase angle values, degrees.You can also use the syntax\nangle = (file=filename)     !for text file one value per line\nangle = (dblfile=filename)  !for packed file of doubles\nangle = (sngfile=filename)  !for packed file of singles ",
              "title" : "Angle",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 4
            },
            "pctMag" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NumHarm",
              "description" : "Array of magnitude values, assumed to be in PERCENT. You can also use the syntax\n%mag = (file=filename)     !for text file one value per line\n%mag = (dblfile=filename)  !for packed file of doubles\n%mag = (sngfile=filename)  !for packed file of singles ",
              "title" : "%Mag",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 3
            }
          },
          "required" : [
            "Harmonic",
            "Angle",
            "pctMag"
          ]
        },
        {
          "title" : "CSVFile",
          "type" : "object",
          "properties" : {
            "CSVFile" : {
              "type" : "string",
              "description" : "File of spectrum points with (harmonic, magnitude-percent, angle-degrees) values, one set of 3 per line, in CSV format. If fewer than NUMHARM frequencies found in the file, NUMHARM is set to the smaller value.",
              "title" : "CSVFile",
              "format" : "file-path",
              "$dssLength" : "NumHarm",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "CSVFile"
          ]
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "SpectrumList" : {
      "title" : "SpectrumList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Spectrum"
      }
    },
    "SpectrumContainer" : {
      "default" : [
      ],
      "title" : "SpectrumContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/SpectrumList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "WireData" : {
      "title" : "WireData",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "RDC" : {
          "type" : "number",
          "description" : "dc Resistance, ohms per unit length (see Runits). Defaults to Rac/1.02 if not specified.",
          "units" : "Ω/[length_unit]",
          "title" : "RDC",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "RAC" : {
          "type" : "number",
          "description" : "Resistance at 60 Hz per unit length. Defaults to 1.02*Rdc if not specified.",
          "title" : "RAC",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "RUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Length units for resistance: ohms per {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "RUnits",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "GMRAC" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "GMR at 60 Hz. Defaults to .7788*radius if not specified.",
          "title" : "GMRAC",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "GMRUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Units for GMR: {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "GMRUnits",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Radius" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Outside radius of conductor. Defaults to GMR/0.7788 if not specified.",
          "title" : "Radius",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "RadUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Units for outside radius: {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "RadUnits",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "NormAmps" : {
          "type" : "number",
          "description" : "Normal ampacity, amperes. Defaults to Emergency amps/1.5 if not specified.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "EmergAmps" : {
          "type" : "number",
          "description" : "Emergency ampacity, amperes. Defaults to 1.5 * Normal Amps if not specified.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            -1.0000000000000000E+000
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in lines.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 11
        },
        "CapRadius" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Equivalent conductor radius for capacitance calcs. Specify this for bundled conductors. Defaults to same value as radius. Define Diam or Radius property first.",
          "title" : "CapRadius",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 12
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "WireDataList" : {
      "title" : "WireDataList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/WireData"
      }
    },
    "WireDataContainer" : {
      "default" : [
      ],
      "title" : "WireDataContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/WireDataList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "CNData" : {
      "title" : "CNData",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "k" : {
          "type" : "integer",
          "default" : 2,
          "description" : "Number of concentric neutral strands; default is 2",
          "title" : "k",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "DiaStrand" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Diameter of a concentric neutral strand; same units as core conductor radius; no default.",
          "title" : "DiaStrand",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "GMRStrand" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Geometric mean radius of a concentric neutral strand; same units as core conductor GMR; defaults to 0.7788 * CN strand radius.",
          "title" : "GMRStrand",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "RStrand" : {
          "type" : "number",
          "description" : "AC resistance of a concentric neutral strand; same units as core conductor resistance; no default.",
          "units" : "Ω/[length_unit]",
          "title" : "RStrand",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "EpsR" : {
          "type" : "number",
          "default" : 2.2999999999999998E+000,
          "description" : "Insulation layer relative permittivity; default is 2.3.",
          "title" : "EpsR",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "InsLayer" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Insulation layer thickness; same units as radius; no default. With DiaIns, establishes inner radius for capacitance calculation.",
          "title" : "InsLayer",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "DiaIns" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Diameter over insulation layer; same units as radius; no default. Establishes outer radius for capacitance calculation.",
          "title" : "DiaIns",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "DiaCable" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Diameter over cable; same units as radius; no default.",
          "title" : "DiaCable",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "RDC" : {
          "type" : "number",
          "description" : "dc Resistance, ohms per unit length (see Runits). Defaults to Rac/1.02 if not specified.",
          "units" : "Ω/[length_unit]",
          "title" : "RDC",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "RAC" : {
          "type" : "number",
          "description" : "Resistance at 60 Hz per unit length. Defaults to 1.02*Rdc if not specified.",
          "title" : "RAC",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "RUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Length units for resistance: ohms per {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "RUnits",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "GMRAC" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "GMR at 60 Hz. Defaults to .7788*radius if not specified.",
          "title" : "GMRAC",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "GMRUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Units for GMR: {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "GMRUnits",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Radius" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Outside radius of conductor. Defaults to GMR/0.7788 if not specified.",
          "title" : "Radius",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "RadUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Units for outside radius: {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "RadUnits",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "NormAmps" : {
          "type" : "number",
          "description" : "Normal ampacity, amperes. Defaults to Emergency amps/1.5 if not specified.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "EmergAmps" : {
          "type" : "number",
          "description" : "Emergency ampacity, amperes. Defaults to 1.5 * Normal Amps if not specified.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            -1.0000000000000000E+000
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in lines.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 19
        },
        "CapRadius" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Equivalent conductor radius for capacitance calcs. Specify this for bundled conductors. Defaults to same value as radius. Define Diam or Radius property first.",
          "title" : "CapRadius",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 20
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "CNDataList" : {
      "title" : "CNDataList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/CNData"
      }
    },
    "CNDataContainer" : {
      "default" : [
      ],
      "title" : "CNDataContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/CNDataList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "TSData" : {
      "title" : "TSData",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "DiaShield" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Diameter over tape shield; same units as radius; no default.",
          "title" : "DiaShield",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "TapeLayer" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Tape shield thickness; same units as radius; no default.",
          "title" : "TapeLayer",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "TapeLap" : {
          "type" : "number",
          "minimum" : 0,
          "description" : "Tape Lap in percent; default 20.0",
          "title" : "TapeLap",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "EpsR" : {
          "type" : "number",
          "default" : 2.2999999999999998E+000,
          "description" : "Insulation layer relative permittivity; default is 2.3.",
          "title" : "EpsR",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "InsLayer" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Insulation layer thickness; same units as radius; no default. With DiaIns, establishes inner radius for capacitance calculation.",
          "title" : "InsLayer",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "DiaIns" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Diameter over insulation layer; same units as radius; no default. Establishes outer radius for capacitance calculation.",
          "title" : "DiaIns",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "DiaCable" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Diameter over cable; same units as radius; no default.",
          "title" : "DiaCable",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "RDC" : {
          "type" : "number",
          "description" : "dc Resistance, ohms per unit length (see Runits). Defaults to Rac/1.02 if not specified.",
          "units" : "Ω/[length_unit]",
          "title" : "RDC",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "RAC" : {
          "type" : "number",
          "description" : "Resistance at 60 Hz per unit length. Defaults to 1.02*Rdc if not specified.",
          "title" : "RAC",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "RUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Length units for resistance: ohms per {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "RUnits",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "GMRAC" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "GMR at 60 Hz. Defaults to .7788*radius if not specified.",
          "title" : "GMRAC",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "GMRUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Units for GMR: {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "GMRUnits",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "Radius" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Outside radius of conductor. Defaults to GMR/0.7788 if not specified.",
          "title" : "Radius",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "RadUnits" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Units for outside radius: {mi|kft|km|m|Ft|in|cm|mm} Default=none.",
          "title" : "RadUnits",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "NormAmps" : {
          "type" : "number",
          "description" : "Normal ampacity, amperes. Defaults to Emergency amps/1.5 if not specified.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "EmergAmps" : {
          "type" : "number",
          "description" : "Emergency ampacity, amperes. Defaults to 1.5 * Normal Amps if not specified.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            -1.0000000000000000E+000
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in lines.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 18
        },
        "CapRadius" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Equivalent conductor radius for capacitance calcs. Specify this for bundled conductors. Defaults to same value as radius. Define Diam or Radius property first.",
          "title" : "CapRadius",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 19
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "TSDataList" : {
      "title" : "TSDataList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/TSData"
      }
    },
    "TSDataContainer" : {
      "default" : [
      ],
      "title" : "TSDataContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/TSDataList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "LineSpacing" : {
      "title" : "LineSpacing",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "NPhases" : {
          "type" : "integer",
          "default" : 3,
          "description" : "Number of retained phase conductors. If less than the number of wires, list the retained phase coordinates first.",
          "title" : "NPhases",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 2
        },
        "X" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            0.0000000000000000E+000,
            0.0000000000000000E+000,
            0.0000000000000000E+000
          ],
          "$dssLength" : "NConds",
          "description" : "Array of wire X coordinates.",
          "title" : "X",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 3
        },
        "H" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            0.0000000000000000E+000,
            0.0000000000000000E+000,
            0.0000000000000000E+000
          ],
          "$dssLength" : "NConds",
          "description" : "Array of wire Heights.",
          "title" : "H",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 4
        },
        "Units" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "ft",
          "description" : "Units for x and h: {mi|kft|km|m|Ft|in|cm } Initial default is \"ft\", but defaults to last unit defined",
          "title" : "Units",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "LineSpacingList" : {
      "title" : "LineSpacingList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/LineSpacing"
      }
    },
    "LineSpacingContainer" : {
      "default" : [
      ],
      "title" : "LineSpacingContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/LineSpacingList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "LineGeometry" : {
      "title" : "LineGeometry",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "NConds" : {
          "type" : "integer",
          "default" : 0,
          "exclusiveMinimum" : 0,
          "description" : "Number of conductors in this geometry. Default is 3. Triggers memory allocations. Define first!",
          "title" : "NConds",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "NPhases" : {
          "type" : "integer",
          "default" : 0,
          "minimum" : 0,
          "description" : "Number of phases. Default =3; All other conductors are considered neutrals and might be reduced out.",
          "title" : "NPhases",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Units" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/LengthUnit"
          },
          "$dssLength" : "NConds",
          "$dssIterator" : "Cond",
          "description" : "Units for x and h: {mi|kft|km|m|Ft|in|cm } Initial default is \"ft\", but defaults to last unit defined",
          "title" : "Units",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 6
        },
        "NormAmps" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Normal ampacity, amperes for the line. Defaults to first conductor if not specified.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 7
        },
        "EmergAmps" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Emergency ampacity, amperes. Defaults to first conductor if not specified.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 8
        },
        "Reduce" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No} Default = no. Reduce to Nphases (Kron Reduction). Reduce out neutrals.",
          "title" : "Reduce",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 9
        },
        "Conductors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "$dssLength" : "NConds",
          "description" : "Array of WireData names for use in a line constants calculation.\nAlternative to individual wire inputs. ALL MUST BE PREVIOUSLY DEFINED.\nMust match \"nconds\" as previously defined for this geometry,\nunless TSData or CNData were previously assigned to phases, and these wires are neutrals.\nMust be used in conjunction with the Spacing property.",
          "title" : "Wires",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 11
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            0.0000000000000000E+000
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in lines.Defaults to first conductor if not specified.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 12
        },
        "LineType" : {
          "$ref" : "#/$defs/LineType",
          "default" : "oh",
          "description" : "Code designating the type of line. \nOne of: OH, UG, UG_TS, UG_CN, SWT_LDBRK, SWT_FUSE, SWT_SECT, SWT_REC, SWT_DISC, SWT_BRK, SWT_ELBOW, BUSBAR\n\nOpenDSS currently does not use this internally. For whatever purpose the user defines. Default is OH.",
          "title" : "LineType",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 13
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "LineSpacing",
          "type" : "object",
          "properties" : {
            "Spacing" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Reference to a LineSpacing for use in a line constants calculation.\nAlternative to x, h, and units. MUST BE PREVIOUSLY DEFINED.\nMust match \"nconds\" as previously defined for this geometry.\nMust be used in conjunction with the Wires property.",
              "title" : "Spacing",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 10
            }
          },
          "required" : [
            "Spacing"
          ]
        },
        {
          "title" : "x, h",
          "type" : "object",
          "properties" : {
            "X" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "$dssLength" : "NConds",
              "$dssIterator" : "Cond",
              "description" : "x coordinate.",
              "title" : "X",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 4
            },
            "H" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "$dssLength" : "NConds",
              "$dssIterator" : "Cond",
              "description" : "Height of conductor.",
              "title" : "H",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "X",
            "H"
          ]
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "LineGeometryList" : {
      "title" : "LineGeometryList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/LineGeometry"
      }
    },
    "LineGeometryContainer" : {
      "default" : [
      ],
      "title" : "LineGeometryContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/LineGeometryList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "XfmrCode" : {
      "title" : "XfmrCode",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases this transformer. Default is 3.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Conn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/Connection"
          },
          "default" : [
            "Wye",
            "Wye"
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Conn",
          "$dssArrayProperty" : "Conns",
          "description" : "Use this to specify all the Winding connections at once using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\"\n~ conns=(delta, wye)",
          "title" : "Conn",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 3
        },
        "kV" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.2470000000000001E+001,
            1.2470000000000001E+001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "kV",
          "$dssArrayProperty" : "kVs",
          "description" : "Use this to specify the kV ratings of all windings at once using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\" \n~ conns=(delta, wye)\n~ kvs=(115, 12.47)\n\nSee kV= property for voltage rules.",
          "title" : "kV",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 4
        },
        "kVA" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+003,
            1.0000000000000000E+003
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "kVA",
          "$dssArrayProperty" : "kVAs",
          "description" : "Use this to specify the kVA ratings of all windings at once using an array.",
          "title" : "kVA",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 5
        },
        "Tap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+000,
            1.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Tap",
          "$dssArrayProperty" : "Taps",
          "description" : "Use this to specify the normal p.u. tap of all windings at once using an array.",
          "title" : "Tap",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 6
        },
        "pctR" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            2.0000000000000001E-001,
            2.0000000000000001E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "%R",
          "$dssArrayProperty" : "%Rs",
          "description" : "Use this property to specify all the winding %resistances using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\" ~ %Rs=(0.2  0.3)",
          "title" : "%R",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 7
        },
        "RNeut" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            -1.0000000000000000E+000,
            -1.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Default = -1. Neutral resistance of wye (star)-connected winding in actual ohms.If entered as a negative value, the neutral is assumed to be open, or floating.",
          "units" : "Ω",
          "title" : "RNeut",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 8
        },
        "XNeut" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            0.0000000000000000E+000,
            0.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Neutral reactance of wye(star)-connected winding in actual ohms.  May be + or -.",
          "units" : "Ω",
          "title" : "XNeut",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 9
        },
        "Thermal" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Thermal time constant of the transformer in hours.  Typically about 2.",
          "units" : "hour",
          "title" : "Thermal",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 11
        },
        "n" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "n Exponent for thermal properties in IEEE C57.  Typically 0.8.",
          "title" : "n",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 12
        },
        "m" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "m Exponent for thermal properties in IEEE C57.  Typically 0.9 - 1.0",
          "title" : "m",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 13
        },
        "FLRise" : {
          "type" : "number",
          "default" : 6.5000000000000000E+001,
          "description" : "Temperature rise, deg C, for full load.  Default is 65.",
          "units" : "°C",
          "title" : "FLRise",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 14
        },
        "HSRise" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Hot spot temperature rise, deg C.  Default is 15.",
          "units" : "°C",
          "title" : "HSRise",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 15
        },
        "pctLoadLoss" : {
          "type" : "number",
          "default" : 4.0000000000000002E-001,
          "description" : "Percent load loss at full load. The %R of the High and Low windings (1 and 2) are adjusted to agree at rated kVA loading.",
          "title" : "%LoadLoss",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 16
        },
        "pctNoLoadLoss" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent no load losses at rated excitation voltage. Default is 0. Converts to a resistance in parallel with the magnetizing impedance in each winding.",
          "title" : "%NoLoadLoss",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 17
        },
        "NormHkVA" : {
          "type" : "number",
          "description" : "Normal maximum kVA rating of H winding (winding 1).  Usually 100% - 110% of maximum nameplate rating, depending on load shape. Defaults to 110% of kVA rating of Winding 1.",
          "units" : "kVA",
          "title" : "NormHkVA",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 18
        },
        "EmergHkVA" : {
          "type" : "number",
          "description" : "Emergency (contingency)  kVA rating of H winding (winding 1).  Usually 140% - 150% of maximum nameplate rating, depending on load shape. Defaults to 150% of kVA rating of Winding 1.",
          "units" : "kVA",
          "title" : "EmergHkVA",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 19
        },
        "MaxTap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.1000000000000001E+000,
            1.1000000000000001E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Max per unit tap for the active winding.  Default is 1.10",
          "title" : "MaxTap",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 20
        },
        "MinTap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            9.0000000000000002E-001,
            9.0000000000000002E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Min per unit tap for the active winding.  Default is 0.90",
          "title" : "MinTap",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 21
        },
        "NumTaps" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          },
          "default" : [
            32,
            32
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Total number of taps between min and max tap.  Default is 32.",
          "title" : "NumTaps",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 22
        },
        "pctIMag" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent magnetizing current. Default=0.0. Magnetizing branch is in parallel with windings in each phase. Also, see \"ppm_antifloat\".",
          "title" : "%IMag",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 23
        },
        "ppm_Antifloat" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Default=1 ppm.  Parts per million of transformer winding VA rating connected to ground to protect against accidentally floating a winding without a reference. If positive then the effect is adding a very large reactance to ground.  If negative, then a capacitor.",
          "title" : "ppm_Antifloat",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 24
        },
        "RDCOhms" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            2.6435153000000006E-001,
            2.6435153000000006E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Winding dc resistance in OHMS. Useful for GIC analysis. From transformer test report. Defaults to 85% of %R property",
          "title" : "RDCOhms",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 28
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            6.0000000000000000E+002
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in transformers.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 29
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "X12, X13, X23",
          "type" : "object",
          "properties" : {
            "X12" : {
              "type" : "number",
              "default" : 7.0000000000000009E+000,
              "description" : "Alternative to XHL for specifying the percent reactance from winding 1 to winding 2.  Use for 2- or 3-winding transformers. Percent on the kVA base of winding 1. ",
              "title" : "X12",
              "$dssPropertyIndex" : 34,
              "$dssPropertyOrder" : 25
            },
            "X13" : {
              "type" : "number",
              "default" : 3.5000000000000000E+001,
              "description" : "Alternative to XHT for specifying the percent reactance from winding 1 to winding 3.  Use for 3-winding transformers only. Percent on the kVA base of winding 1. ",
              "title" : "X13",
              "$dssPropertyIndex" : 35,
              "$dssPropertyOrder" : 26
            },
            "X23" : {
              "type" : "number",
              "default" : 3.0000000000000000E+001,
              "description" : "Alternative to XLT for specifying the percent reactance from winding 2 to winding 3.Use for 3-winding transformers only. Percent on the kVA base of winding 1.  ",
              "title" : "X23",
              "$dssPropertyIndex" : 36,
              "$dssPropertyOrder" : 27
            }
          },
          "required" : [
            "X12"
          ]
        },
        {
          "title" : "XscArray",
          "type" : "object",
          "properties" : {
            "XSCArray" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "description" : "Use this to specify the percent reactance between all pairs of windings as an array. All values are on the kVA base of winding 1.  The order of the values is as follows:\n\n(x12 13 14... 23 24.. 34 ..)  \n\nThere will be n(n-1)/2 values, where n=number of windings.",
              "title" : "XSCArray",
              "$dssPropertyIndex" : 18,
              "$dssPropertyOrder" : 10
            }
          },
          "required" : [
            "XSCArray"
          ]
        }
      ],
      "required" : [
        "Name",
        "kV"
      ]
    },
    "XfmrCodeList" : {
      "title" : "XfmrCodeList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/XfmrCode"
      }
    },
    "XfmrCodeContainer" : {
      "default" : [
      ],
      "title" : "XfmrCodeContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/XfmrCodeList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Line" : {
      "title" : "Line",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which first terminal is connected.\nExample:\nbus1=busname   (assumes all terminals connected in normal phase order)\nbus1=busname.3.1.2.0 (specify terminal to node connections explicitly)",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 3
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which 2nd terminal is connected.",
          "title" : "Bus2",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 4
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases, this line.",
          "title" : "Phases",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 7
        },
        "Switch" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{y/n | T/F}  Default= no/false.  Designates this line as a switch for graphics and algorithmic purposes. \nSIDE EFFECT: Sets r1 = 1.0; x1 = 1.0; r0 = 1.0; x0 = 1.0; c1 = 1.1 ; c0 = 1.0;  length = 0.001; You must reset if you want something different.",
          "title" : "Switch",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 2
        },
        "Rg" : {
          "type" : "number",
          "default" : 1.8050000000000000E-002,
          "description" : "Carson earth return resistance per unit length used to compute impedance values at base frequency. Default is 0.01805 = 60 Hz value in ohms per kft (matches default line impedances). This value is required for harmonic solutions if you wish to adjust the earth return impedances for frequency. If not, set both Rg and Xg = 0.",
          "units" : "Ω/[length_unit]",
          "title" : "Rg",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Xg" : {
          "type" : "number",
          "default" : 1.5508100000000000E-001,
          "description" : "Carson earth return reactance per unit length used to compute impedance values at base frequency.  For making better frequency adjustments. Default is 0.155081 = 60 Hz value in ohms per kft (matches default line impedances). This value is required for harmonic solutions if you wish to adjust the earth return impedances for frequency. If not, set both Rg and Xg = 0.",
          "units" : "Ω/[length_unit]",
          "title" : "Xg",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "rho" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Default=100 meter ohms.  Earth resistivity used to compute earth correction factor. Overrides Line geometry definition if specified.",
          "units" : "Ωm",
          "title" : "rho",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "Units" : {
          "$ref" : "#/$defs/LengthUnit",
          "default" : "none",
          "description" : "Length Units = {none | mi|kft|km|m|Ft|in|cm } Default is None - assumes length units match impedance units.",
          "title" : "Units",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "EarthModel" : {
          "$ref" : "#/$defs/EarthModel",
          "default" : "Deri",
          "description" : "One of {Carson | FullCarson | Deri}. Default is the global value established with the Set EarthModel command. See the Options Help on EarthModel option. This is used to override the global value for this line. This option applies only when the \"geometry\" property is used.",
          "title" : "EarthModel",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            4.0000000000000000E+002
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in lines.",
          "title" : "Ratings",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 25
        },
        "LineType" : {
          "$ref" : "#/$defs/LineType",
          "default" : "oh",
          "description" : "Code designating the type of line. \nOne of: OH, UG, UG_TS, UG_CN, SWT_LDBRK, SWT_FUSE, SWT_SECT, SWT_REC, SWT_DISC, SWT_BRK, SWT_ELBOW, BUSBAR\n\nOpenDSS currently does not use this internally. For whatever purpose the user defines. Default is OH.",
          "title" : "LineType",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 26
        },
        "NormAmps" : {
          "type" : "number",
          "default" : 4.0000000000000000E+002,
          "description" : "Normal rated current.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 27
        },
        "EmergAmps" : {
          "type" : "number",
          "default" : 6.0000000000000000E+002,
          "description" : "Maximum or emerg current.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 28
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Failure rate PER UNIT LENGTH per year. Length must be same units as LENGTH property. Default is 0.1 fault per unit length per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 29
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Percent of failures that become permanent. Default is 20.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 30
        },
        "Repair" : {
          "type" : "number",
          "default" : 3.0000000000000000E+000,
          "description" : "Hours to repair. Default is 3 hr.",
          "title" : "Repair",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 31
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 32
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 33
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "LineCode",
          "type" : "object",
          "properties" : {
            "LineCode" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Name of linecode object describing line impedances.\nIf you use a line code, you do not need to specify the impedances here. The line code must have been PREVIOUSLY defined. The values specified last will prevail over those specified earlier (left-to-right sequence of properties).  You can subsequently change the number of phases if symmetrical component quantities are specified.If no line code or impedance data are specified, the line object defaults to 336 MCM ACSR on 4 ft spacing.",
              "title" : "LineCode",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 5
            },
            "Length" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "description" : "Length of line. Default is 1.0. If units do not match the impedance data, specify \"units\" property. ",
              "title" : "Length",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "LineCode"
          ]
        },
        {
          "title" : "LineGeometry",
          "type" : "object",
          "properties" : {
            "Geometry" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Geometry code for LineGeometry Object. Supersedes any previous definition of line impedance. Line constants are computed for each frequency change or rho change. CAUTION: may alter number of phases. You cannot subsequently change the number of phases unless you change how the line impedance is defined.",
              "title" : "Geometry",
              "$dssPropertyIndex" : 19,
              "$dssPropertyOrder" : 20
            },
            "Length" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "description" : "Length of line. Default is 1.0. If units do not match the impedance data, specify \"units\" property. ",
              "title" : "Length",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "Geometry"
          ]
        },
        {
          "title" : "Spacing, Wires",
          "type" : "object",
          "properties" : {
            "Spacing" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Reference to a LineSpacing for use in a line constants calculation.\nMust be used in conjunction with the Wires property.\nSpecify this before the wires property.",
              "title" : "Spacing",
              "$dssPropertyIndex" : 21,
              "$dssPropertyOrder" : 22
            },
            "Conductors" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "description" : "Array of WireData names for use in an overhead line constants calculation.\nMust be used in conjunction with the Spacing property.\nSpecify the Spacing first, and \"ncond\" wires.\nMay also be used to specify bare neutrals with cables, using \"ncond-nphase\" wires.",
              "title" : "Wires",
              "$dssPropertyIndex" : 22,
              "$dssPropertyOrder" : 23
            },
            "Length" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "description" : "Length of line. Default is 1.0. If units do not match the impedance data, specify \"units\" property. ",
              "title" : "Length",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "Spacing",
            "Conductors"
          ]
        },
        {
          "title" : "Z0, Z1, C0, C1",
          "type" : "object",
          "properties" : {
            "R1" : {
              "type" : "number",
              "default" : 5.8000000000000003E-002,
              "description" : "Positive-sequence Resistance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition. See also Rmatrix.",
              "units" : "Ω/[length_unit]",
              "title" : "R1",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 8
            },
            "X1" : {
              "type" : "number",
              "default" : 1.2060000000000000E-001,
              "description" : "Positive-sequence Reactance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition.  See also Xmatrix",
              "units" : "Ω/[length_unit]",
              "title" : "X1",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 9
            },
            "R0" : {
              "type" : "number",
              "default" : 1.7840000000000000E-001,
              "description" : "Zero-sequence Resistance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition.",
              "units" : "Ω/[length_unit]",
              "title" : "R0",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 10
            },
            "X0" : {
              "type" : "number",
              "default" : 4.0470000000000000E-001,
              "description" : "Zero-sequence Reactance, ohms per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition.",
              "units" : "Ω/[length_unit]",
              "title" : "X0",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 11
            },
            "C1" : {
              "type" : "number",
              "default" : 3.3999999999999995E+000,
              "description" : "Positive-sequence capacitance, nf per unit length.  Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition. See also Cmatrix and B1.",
              "units" : "nF/[length_unit]",
              "title" : "C1",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 12
            },
            "C0" : {
              "type" : "number",
              "default" : 1.5999999999999999E+000,
              "description" : "Zero-sequence capacitance, nf per unit length. Setting any of R1, R0, X1, X0, C1, C0 forces the program to use the symmetrical component line definition.See also B0.",
              "units" : "nF/[length_unit]",
              "title" : "C0",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 13
            }
          },
          "required" : [
            "R1",
            "X1",
            "C1"
          ]
        },
        {
          "title" : "ZMatrix, CMatrix",
          "type" : "object",
          "properties" : {
            "RMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Resistance matrix, lower triangle, ohms per unit length. Order of the matrix is the number of phases. May be used to specify the impedance of any line configuration. Using any of Rmatrix, Xmatrix, Cmatrix forces program to use the matrix values for line impedance definition. For balanced line models, you may use the standard symmetrical component data definition instead.",
              "units" : "Ω/[length_unit]",
              "title" : "RMatrix",
              "$dssPropertyIndex" : 12,
              "$dssPropertyOrder" : 14
            },
            "XMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Reactance matrix, lower triangle, ohms per unit length. Order of the matrix is the number of phases. May be used to specify the impedance of any line configuration. Using any of Rmatrix, Xmatrix, Cmatrix forces program to use the matrix values for line impedance definition.  For balanced line models, you may use the standard symmetrical component data definition instead.",
              "units" : "Ω/[length_unit]",
              "title" : "XMatrix",
              "$dssPropertyIndex" : 13,
              "$dssPropertyOrder" : 15
            },
            "CMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "default" : [
                [
                  2.7999999999999998E+000,
                  -5.9999999999999987E-001,
                  -5.9999999999999987E-001
                ],
                [
                  -5.9999999999999987E-001,
                  2.7999999999999998E+000,
                  -5.9999999999999987E-001
                ],
                [
                  -5.9999999999999987E-001,
                  -5.9999999999999987E-001,
                  2.7999999999999998E+000
                ]
              ],
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Nodal Capacitance matrix, lower triangle, nf per unit length.Order of the matrix is the number of phases. May be used to specify the shunt capacitance of any line configuration. Using any of Rmatrix, Xmatrix, Cmatrix forces program to use the matrix values for line impedance definition.  For balanced line models, you may use the standard symmetrical component data definition instead.",
              "units" : "nF/[length_unit]",
              "title" : "CMatrix",
              "$dssPropertyIndex" : 14,
              "$dssPropertyOrder" : 16
            }
          },
          "required" : [
            "RMatrix",
            "XMatrix"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1",
        "Bus2"
      ]
    },
    "LineList" : {
      "title" : "LineList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Line"
      }
    },
    "LineContainer" : {
      "default" : [
      ],
      "title" : "LineContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/LineList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Vsource" : {
      "title" : "Vsource",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which the main terminal (1) is connected.\nbus1=busname\nbus1=busname.1.2.3\n\nThe VSOURCE object is a two-terminal voltage source (thevenin equivalent). Bus2 defaults to Bus1 with all phases connected to ground (node 0) unless previously specified. This is a Yg connection. If you want something different, define the Bus2 property explicitly.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "BasekV" : {
          "type" : "number",
          "default" : 1.1500000000000000E+002,
          "description" : "Base Source kV, usually phase-phase (L-L) unless you are making a positive-sequence model or 1-phase modelin which case, it will be phase-neutral (L-N) kV.",
          "title" : "BasekV",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "pu" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Per unit of the base voltage that the source is actually operating at.\n\"pu=1.05\"",
          "title" : "pu",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Angle" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Phase angle in degrees of first phase: e.g.,Angle=10.3",
          "title" : "Angle",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Frequency" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Source frequency.  Defaults to system default base frequency.",
          "units" : "Hz",
          "title" : "Frequency",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.  Defaults to 3.",
          "title" : "Phases",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "ScanType" : {
          "$ref" : "#/$defs/ScanType",
          "default" : "Positive",
          "description" : "{pos*| zero | none} Maintain specified sequence for harmonic solution. Default is positive sequence. Otherwise, angle between phases rotates with harmonic.",
          "title" : "ScanType",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 14
        },
        "Sequence" : {
          "$ref" : "#/$defs/SequenceType",
          "default" : "Positive",
          "description" : "{pos*| neg | zero} Set the phase angles for the specified symmetrical component sequence for non-harmonic solution modes. Default is positive sequence. ",
          "title" : "Sequence",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 15
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which 2nd terminal is connected.\nbus2=busname\nbus2=busname.1.2.3\n\nDefault is Bus1.0.0.0 (grounded wye connection)",
          "title" : "Bus2",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 16
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for the per-unit voltage for YEARLY-mode simulations. Set the Mult property of the LOADSHAPE to the pu curve. Qmult is not used. If UseActual=Yes then the Mult curve should be actual L-N kV.\n\nMust be previously defined as a LOADSHAPE object. \n\nIs set to the Daily load shape when Daily is defined.  The daily load shape is repeated in this case. Set to NONE to reset to no loadshape for Yearly mode. The default is no variation.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 24
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for the per-unit voltage for DAILY-mode simulations. Set the Mult property of the LOADSHAPE to the pu curve. Qmult is not used. If UseActual=Yes then the Mult curve should be actual L-N kV.\n\nMust be previously defined as a LOADSHAPE object. \n\nSets Yearly curve if it is not already defined.   Set to NONE to reset to no loadshape for Yearly mode. The default is no variation.",
          "title" : "Daily",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 25
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for the per-unit voltage for DUTYCYCLE-mode simulations. Set the Mult property of the LOADSHAPE to the pu curve. Qmult is not used. If UseActual=Yes then the Mult curve should be actual L-N kV.\n\nMust be previously defined as a LOADSHAPE object. \n\nDefaults to Daily load shape when Daily is defined.   Set to NONE to reset to no loadshape for Yearly mode. The default is no variation.",
          "title" : "Duty",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 26
        },
        "Model" : {
          "$ref" : "#/$defs/Vsource/$defs/VSourceModel",
          "default" : "Thevenin",
          "description" : "{Thevenin* | Ideal}  Specifies whether the Vsource is to be considered a Thevenin short circuit model or a quasi-ideal voltage source. If Thevenin, the Vsource uses the impedances defined for all calculations. If \"Ideal\", the model uses a small impedance on the diagonal of the impedance matrix for the fundamental base frequency power flow only. Then switches to actual Thevenin model for other frequencies. ",
          "title" : "Model",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 27
        },
        "puZIdeal" : {
          "$ref" : "#/$defs/Complex",
          "default" : [
            9.9999999999999995E-007,
            1.0000000000000000E-003
          ],
          "description" : "2-element array: e.g., [1  2]. The pu impedance to use for the quasi-ideal voltage source model. Should be a very small impedances. Default is [1e-6, 0.001]. Per-unit impedance on base of Vsource BasekV and BaseMVA. If too small, solution may not work. Be sure to check the voltage values and powers.",
          "title" : "puZIdeal",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 28
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "defaultvsource",
          "description" : "Name of harmonic spectrum for this source.  Default is \"defaultvsource\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 29
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 30
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 31
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "MVAsc3, MVAsc1, x1r1, x0r0",
          "type" : "object",
          "properties" : {
            "MVASC3" : {
              "type" : "number",
              "default" : 2.0000000000000000E+003,
              "description" : "MVA Short circuit, 3-phase fault. Default = 2000. Z1 is determined by squaring the base kv and dividing by this value. For single-phase source, this value is not used.",
              "units" : "MVA",
              "title" : "MVASC3",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            },
            "MVASC1" : {
              "type" : "number",
              "default" : 2.1000000000000000E+003,
              "description" : "MVA Short Circuit, 1-phase fault. Default = 2100. The \"single-phase impedance\", Zs, is determined by squaring the base kV and dividing by this value. Then Z0 is determined by Z0 = 3Zs - 2Z1.  For 1-phase sources, Zs is used directly. Use X0R0 to define X/R ratio for 1-phase source.",
              "units" : "MVA",
              "title" : "MVASC1",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 9
            },
            "X1R1" : {
              "type" : "number",
              "default" : 4.0000000000000000E+000,
              "description" : "Positive-sequence  X/R ratio. Default = 4.",
              "title" : "X1R1",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 10
            },
            "X0R0" : {
              "type" : "number",
              "default" : 3.0000000000000000E+000,
              "description" : "Zero-sequence X/R ratio.Default = 3.",
              "title" : "X0R0",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 11
            }
          },
          "required" : [
            "MVASC3"
          ]
        },
        {
          "title" : "Isc3, Isc1, x1r1, x0r0",
          "type" : "object",
          "properties" : {
            "Isc3" : {
              "type" : "number",
              "description" : "Alternate method of defining the source impedance. \n3-phase short circuit current, amps.  Default is 10000.",
              "units" : "A",
              "title" : "Isc3",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 12
            },
            "Isc1" : {
              "type" : "number",
              "description" : "Alternate method of defining the source impedance. \nsingle-phase short circuit current, amps.  Default is 10500.",
              "units" : "A",
              "title" : "Isc1",
              "$dssPropertyIndex" : 12,
              "$dssPropertyOrder" : 13
            },
            "X1R1" : {
              "type" : "number",
              "default" : 4.0000000000000000E+000,
              "description" : "Positive-sequence  X/R ratio. Default = 4.",
              "title" : "X1R1",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 10
            },
            "X0R0" : {
              "type" : "number",
              "default" : 3.0000000000000000E+000,
              "description" : "Zero-sequence X/R ratio.Default = 3.",
              "title" : "X0R0",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 11
            }
          },
          "required" : [
            "Isc3"
          ]
        },
        {
          "title" : "BaseMVA, puZ0, puZ1, puZ2",
          "type" : "object",
          "properties" : {
            "BaseMVA" : {
              "type" : "number",
              "default" : 1.0000000000000000E+002,
              "description" : "Default value is 100. Base used to convert values specified with puZ1, puZ0, and puZ2 properties to ohms on kV base specified by BasekV property.",
              "title" : "BaseMVA",
              "$dssPropertyIndex" : 26,
              "$dssPropertyOrder" : 23
            },
            "puZ0" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                1.3580611191859016E-002,
                4.0741833575577042E-002
              ],
              "description" : "2-element array: e.g., [1  2]. An alternate way to specify Z0. See Z0 property. Per-unit zero-sequence impedance on base of Vsource BasekV and BaseMVA.",
              "title" : "puZ0",
              "$dssPropertyIndex" : 24,
              "$dssPropertyOrder" : 21
            },
            "puZ1" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                1.2126781251816649E-002,
                4.8507125007266595E-002
              ],
              "description" : "2-element array: e.g., [1  2]. An alternate way to specify Z1. See Z1 property. Per-unit positive-sequence impedance on base of Vsource BasekV and BaseMVA.",
              "title" : "puZ1",
              "$dssPropertyIndex" : 23,
              "$dssPropertyOrder" : 20
            },
            "puZ2" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                1.2126781251816649E-002,
                4.8507125007266595E-002
              ],
              "description" : "2-element array: e.g., [1  2]. An alternate way to specify Z2. See Z2 property. Per-unit negative-sequence impedance on base of Vsource BasekV and BaseMVA.",
              "title" : "puZ2",
              "$dssPropertyIndex" : 25,
              "$dssPropertyOrder" : 22
            }
          },
          "required" : [
            "BaseMVA",
            "puZ1"
          ]
        },
        {
          "title" : "Z0, Z1, Z2",
          "type" : "object",
          "properties" : {
            "Z0" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                1.7960358301233548E+000,
                5.3881074903700643E+000
              ],
              "description" : "Zero-sequence equivalent source impedance, ohms, as a 2-element array representing a complex number. Example: \n\nZ0=[3, 4]  ! represents 3 + j4 \n\nUsed to define the impedance matrix of the VSOURCE if Z1 is also specified. \n\nNote: Z0 defaults to Z1 if it is not specifically defined. ",
              "units" : "Ω",
              "title" : "Z0",
              "$dssPropertyIndex" : 21,
              "$dssPropertyOrder" : 18
            },
            "Z1" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                1.6037668205527518E+000,
                6.4150672822110071E+000
              ],
              "description" : "Positive-sequence equivalent source impedance, ohms, as a 2-element array representing a complex number. Example: \n\nZ1=[1, 2]  ! represents 1 + j2 \n\nIf defined, Z1, Z2, and Z0 are used to define the impedance matrix of the VSOURCE. Z1 MUST BE DEFINED TO USE THIS OPTION FOR DEFINING THE MATRIX.\n\nSide Effect: Sets Z2 and Z0 to same values unless they were previously defined.",
              "units" : "Ω",
              "title" : "Z1",
              "$dssPropertyIndex" : 20,
              "$dssPropertyOrder" : 17
            },
            "Z2" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                1.6037668205527518E+000,
                6.4150672822110071E+000
              ],
              "description" : "Negative-sequence equivalent source impedance, ohms, as a 2-element array representing a complex number. Example: \n\nZ2=[1, 2]  ! represents 1 + j2 \n\nUsed to define the impedance matrix of the VSOURCE if Z1 is also specified. \n\nNote: Z2 defaults to Z1 if it is not specifically defined. If Z2 is not equal to Z1, the impedance matrix is asymmetrical.",
              "units" : "Ω",
              "title" : "Z2",
              "$dssPropertyIndex" : 22,
              "$dssPropertyOrder" : 19
            }
          },
          "required" : [
            "Z1"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1",
        "BasekV"
      ],
      "$defs" : {
        "VSourceModel" : {
          "title" : "VSource: Model",
          "type" : "string",
          "enum" : [
            "Thevenin",
            "Ideal"
          ],
          "$dssFullEnum" : [
            [
              "Thevenin",
              "Thevenin",
              0
            ],
            [
              "Ideal",
              "Ideal",
              1
            ]
          ]
        }
      }
    },
    "VsourceList" : {
      "title" : "VsourceList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Vsource"
      },
      "minLength" : 1
    },
    "VsourceContainer" : {
      "default" : [
      ],
      "title" : "VsourceContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/VsourceList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Isource" : {
      "title" : "Isource",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which source is connected.\nbus1=busname\nbus1=busname.1.2.3",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Amps" : {
          "type" : "number",
          "description" : "Magnitude of current source, each phase, in Amps.",
          "units" : "A",
          "title" : "Amps",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Angle" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Phase angle in degrees of first phase: e.g.,Angle=10.3.\nPhase shift between phases is assumed 120 degrees when number of phases <= 3",
          "units" : "°",
          "title" : "Angle",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Frequency" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Source frequency.  Defaults to  circuit fundamental frequency.",
          "units" : "Hz",
          "title" : "Frequency",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.  Defaults to 3. For 3 or less, phase shift is 120 degrees.",
          "title" : "Phases",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "ScanType" : {
          "$ref" : "#/$defs/ScanType",
          "default" : "Positive",
          "description" : "{pos*| zero | none} Maintain specified sequence for harmonic solution. Default is positive sequence. Otherwise, angle between phases rotates with harmonic.",
          "title" : "ScanType",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Sequence" : {
          "$ref" : "#/$defs/SequenceType",
          "default" : "Positive",
          "description" : "{pos*| neg | zero} Set the phase angles for the specified symmetrical component sequence for non-harmonic solution modes. Default is positive sequence. ",
          "title" : "Sequence",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for the per-unit current for YEARLY-mode simulations. Set the Mult property of the LOADSHAPE to the pu curve. Qmult is not used. If UseActual=Yes then the Mult curve should be actual Amp.\n\nMust be previously defined as a LOADSHAPE object. \n\nIs set to the Daily load shape when Daily is defined.  The daily load shape is repeated in this case. Set to NONE to reset to no loadshape for Yearly mode. The default is no variation.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for the per-unit current for DAILY-mode simulations. Set the Mult property of the LOADSHAPE to the pu curve. Qmult is not used. If UseActual=Yes then the Mult curve should be actual A.\n\nMust be previously defined as a LOADSHAPE object. \n\nSets Yearly curve if it is not already defined.   Set to NONE to reset to no loadshape for Yearly mode. The default is no variation.",
          "title" : "Daily",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for the per-unit current for DUTYCYCLE-mode simulations. Set the Mult property of the LOADSHAPE to the pu curve. Qmult is not used. If UseActual=Yes then the Mult curve should be actual A.\n\nMust be previously defined as a LOADSHAPE object. \n\nDefaults to Daily load shape when Daily is defined.   Set to NONE to reset to no loadshape for Yearly mode. The default is no variation.",
          "title" : "Duty",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which 2nd terminal is connected.\nbus2=busname\nbus2=busname.1.2.3\n\nDefault is Bus1.0.0.0 (grounded-wye connection)",
          "title" : "Bus2",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "default",
          "description" : "Harmonic spectrum assumed for this source.  Default is \"default\".",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Bus1"
      ]
    },
    "IsourceList" : {
      "title" : "IsourceList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Isource"
      }
    },
    "IsourceContainer" : {
      "default" : [
      ],
      "title" : "IsourceContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/IsourceList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "VCCS" : {
      "title" : "VCCS",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which source is connected.\nbus1=busname\nbus1=busname.1.2.3",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Phases" : {
          "type" : "integer",
          "default" : 1,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.  Defaults to 1.",
          "title" : "Phases",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "PRated" : {
          "type" : "number",
          "default" : 2.5000000000000000E+002,
          "description" : "Total rated power, in Watts.",
          "units" : "kW",
          "title" : "PRated",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "VRated" : {
          "type" : "number",
          "default" : 2.0800000000000000E+002,
          "exclusiveMinimum" : 0,
          "description" : "Rated line-to-line voltage, in Volts",
          "units" : "V",
          "title" : "VRated",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Ppct" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Steady-state operating output, in percent of rated.",
          "title" : "Ppct",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "BP1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "XYCurve defining the input piece-wise linear block.",
          "title" : "BP1",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "BP2" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "XYCurve defining the output piece-wise linear block.",
          "title" : "BP2",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Filter" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "XYCurve defining the digital filter coefficients (x numerator, y denominator).",
          "title" : "Filter",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "FSample" : {
          "type" : "number",
          "default" : 5.0000000000000000E+003,
          "exclusiveMinimum" : 0,
          "description" : "Sample frequency [Hz} for the digital filter.",
          "units" : "Hz",
          "title" : "FSample",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "RMSMode" : {
          "type" : "boolean",
          "default" : false,
          "description" : "True if only Hz is used to represent a phase-locked loop (PLL), ignoring the BP1, BP2 and time-domain transformations. Default is no.",
          "title" : "RMSMode",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "IMaxpu" : {
          "type" : "number",
          "default" : 1.1000000000000001E+000,
          "description" : "Maximum output current in per-unit of rated; defaults to 1.1",
          "title" : "IMaxpu",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "VRMSTau" : {
          "type" : "number",
          "default" : 1.5000000000000000E-003,
          "description" : "Time constant in sensing Vrms for the PLL; defaults to 0.0015",
          "title" : "VRMSTau",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "IRMSTau" : {
          "type" : "number",
          "default" : 1.5000000000000000E-003,
          "description" : "Time constant in producing Irms from the PLL; defaults to 0.0015",
          "title" : "IRMSTau",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "default",
          "description" : "Harmonic spectrum assumed for this source.  Default is \"default\".",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Bus1"
      ]
    },
    "VCCSList" : {
      "title" : "VCCSList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/VCCS"
      }
    },
    "VCCSContainer" : {
      "default" : [
      ],
      "title" : "VCCSContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/VCCSList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Load" : {
      "title" : "Load",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases, this load.  Load is evenly divided among phases.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Bus to which the load is connected.  May include specific node specification.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kV" : {
          "type" : "number",
          "default" : 1.2470000000000001E+001,
          "minimum" : 0,
          "description" : "Nominal rated (1.0 per unit) voltage, kV, for load. For 2- and 3-phase loads, specify phase-phase kV. Otherwise, specify actual kV across each branch of the load. If wye (star), specify phase-neutral kV. If delta or phase-phase connected, specify phase-phase kV.",
          "units" : "kV",
          "title" : "kV",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Model" : {
          "$ref" : "#/$defs/Load/$defs/LoadModel",
          "default" : 1,
          "description" : "Integer code for the model to use for load variation with voltage. Valid values are:\n\n1:Standard constant P+jQ load. (Default)\n2:Constant impedance load. \n3:Const P, Quadratic Q (like a motor).\n4:Nominal Linear P, Quadratic Q (feeder mix). Use this with CVRfactor.\n5:Constant Current Magnitude\n6:Const P, Fixed Q\n7:Const P, Fixed Impedance Q\n8:ZIPV (7 values)\n\nFor Types 6 and 7, only the P is modified by load multipliers.",
          "title" : "Model",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for yearly simulations.  Must be previously defined as a Loadshape object. Is set to the Daily load shape  when Daily is defined.  The daily load shape is repeated in this case. Set Status=Fixed to ignore Loadshape designation. Set to NONE to reset to no loadshape. The default is no variation.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for daily simulations.  Must be previously defined as a Loadshape object of 24 hrs, typically. Set Status=Fixed to ignore Loadshape designation. Set to NONE to reset to no loadshape. Default is no variation (constant) if not defined. Side effect: Sets Yearly load shape if not already defined.",
          "title" : "Daily",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for duty cycle simulations.  Must be previously defined as a Loadshape object.  Typically would have time intervals less than 1 hr. Designate the number of points to solve using the Set Number=xxxx command. If there are fewer points in the actual shape, the shape is assumed to repeat.Set to NONE to reset to no loadshape. Set Status=Fixed to ignore Loadshape designation.  Defaults to Daily curve If not specified.",
          "title" : "Duty",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Growth" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Characteristic  to use for growth factors by years.  Must be previously defined as a Growthshape object. Defaults to circuit default growth factor (see Set Growth command).",
          "title" : "Growth",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "={wye or LN | delta or LL}.  Default is wye.",
          "title" : "Conn",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "RNeut" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Default is -1. Neutral resistance of wye (star)-connected load in actual ohms. If entered as a negative value, the neutral can be open, or floating, or it can be connected to node 0 (ground), which is the usual default. If >=0 be sure to explicitly specify the node connection for the neutral, or last, conductor. Otherwise, the neutral impedance will be shorted to ground.",
          "units" : "Ω",
          "title" : "RNeut",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "XNeut" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Neutral reactance of wye(star)-connected load in actual ohms.  May be + or -.",
          "units" : "Ω",
          "title" : "XNeut",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "Status" : {
          "$ref" : "#/$defs/Load/$defs/LoadStatus",
          "default" : "Variable",
          "description" : "={Variable | Fixed | Exempt}.  Default is variable. If Fixed, no load multipliers apply;  however, growth multipliers do apply.  All multipliers apply to Variable loads.  Exempt loads are not modified by the global load multiplier, such as in load duration curves, etc.  Daily multipliers do apply, so setting this property to Exempt is a good way to represent industrial load that stays the same day-after-day for the period study.",
          "title" : "Status",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "Class" : {
          "type" : "integer",
          "default" : 1,
          "description" : "An arbitrary integer number representing the class of load so that load values may be segregated by load value. Default is 1; not used internally.",
          "title" : "Class",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "VMinpu" : {
          "type" : "number",
          "default" : 9.4999999999999996E-001,
          "description" : "Default = 0.95.  Minimum per unit voltage for which the MODEL is assumed to apply. Lower end of normal voltage range.Below this value, the load model reverts to a constant impedance model that matches the model at the transition voltage. See also \"Vlowpu\" which causes the model to match Model=2 below the transition voltage.",
          "title" : "VMinpu",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "VMaxpu" : {
          "type" : "number",
          "default" : 1.0500000000000000E+000,
          "description" : "Default = 1.05.  Maximum per unit voltage for which the MODEL is assumed to apply. Above this value, the load model reverts to a constant impedance model.",
          "title" : "VMaxpu",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "VMinNorm" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Minimum per unit voltage for load EEN evaluations, Normal limit.  Default = 0, which defaults to system \"vminnorm\" property (see Set Command under Executive).  If this property is specified, it ALWAYS overrides the system specification. This allows you to have different criteria for different loads. Set to zero to revert to the default system value.",
          "title" : "VMinNorm",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "VMinEmerg" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Minimum per unit voltage for load UE evaluations, Emergency limit.  Default = 0, which defaults to system \"vminemerg\" property (see Set Command under Executive).  If this property is specified, it ALWAYS overrides the system specification. This allows you to have different criteria for different loads. Set to zero to revert to the default system value.",
          "title" : "VMinEmerg",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "pctMean" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "description" : "Percent mean value for load to use for monte carlo studies if no loadshape is assigned to this load. Default is 50.",
          "title" : "%Mean",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "pctStdDev" : {
          "type" : "number",
          "default" : 1.0000000000000000E+001,
          "description" : "Percent Std deviation value for load to use for monte carlo studies if no loadshape is assigned to this load. Default is 10.",
          "title" : "%StdDev",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 26
        },
        "CVRWatts" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Percent reduction in active power (watts) per 1% reduction in voltage from 100% rated. Default=1. \n Typical values range from 0.4 to 0.8. Applies to Model=4 only.\n Intended to represent conservation voltage reduction or voltage optimization measures.",
          "title" : "CVRWatts",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 27
        },
        "CVRVars" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Percent reduction in reactive power (vars) per 1% reduction in voltage from 100% rated. Default=2. \n Typical values range from 2 to 3. Applies to Model=4 only.\n Intended to represent conservation voltage reduction or voltage optimization measures.",
          "title" : "CVRVars",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 28
        },
        "CVRCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Default is NONE. Curve describing both watt and var factors as a function of time. Refers to a LoadShape object with both Mult and Qmult defined. Define a Loadshape to agree with yearly or daily curve according to the type of analysis being done. If NONE, the CVRwatts and CVRvars factors are used and assumed constant.",
          "title" : "CVRCurve",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 32
        },
        "NumCust" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of customers, this load. Default is 1.",
          "title" : "NumCust",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 33
        },
        "ZIPV" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "minItems" : 7,
          "maxItems" : 7,
          "description" : "Array of 7 coefficients:\n\n First 3 are ZIP weighting factors for real power (should sum to 1)\n Next 3 are ZIP weighting factors for reactive power (should sum to 1)\n Last 1 is cut-off voltage in p.u. of base kV; load is 0 below this cut-off\n No defaults; all coefficients must be specified if using model=8.",
          "title" : "ZIPV",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 34
        },
        "pctSeriesRL" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "description" : "Percent of load that is series R-L for Harmonic studies. Default is 50. Remainder is assumed to be parallel R and L. This can have a significant impact on the amount of damping observed in Harmonics solutions.",
          "title" : "%SeriesRL",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 35
        },
        "RelWeight" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Relative weighting factor for reliability calcs. Default = 1. Used to designate high priority loads such as hospitals, etc. \n\nIs multiplied by number of customers and load kW during reliability calcs.",
          "title" : "RelWeight",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 36
        },
        "VLowpu" : {
          "type" : "number",
          "default" : 5.0000000000000000E-001,
          "description" : "Default = 0.50.  Per unit voltage at which the model switches to same as constant Z model (model=2). This allows more consistent convergence at very low voltaes due to opening switches or solving for fault situations.",
          "title" : "VLowpu",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 37
        },
        "puXHarm" : {
          "type" : "number",
          "description" : "Special reactance, pu (based on kVA, kV properties), for the series impedance branch in the load model for HARMONICS analysis. Generally used to represent motor load blocked rotor reactance. If not specified (that is, set =0, the default value), the series branch is computed from the percentage of the nominal load at fundamental frequency specified by the %SERIESRL property. \n\nApplies to load model in HARMONICS mode only.\n\nA typical value would be approximately 0.20 pu based on kVA * %SeriesRL / 100.0.",
          "title" : "puXHarm",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 38
        },
        "XRHarm" : {
          "type" : "number",
          "default" : 6.0000000000000000E+000,
          "description" : "X/R ratio of the special harmonics mode reactance specified by the puXHARM property at fundamental frequency. Default is 6. ",
          "title" : "XRHarm",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 39
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "defaultload",
          "description" : "Name of harmonic current spectrum for this load.  Default is \"defaultload\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 40
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 41
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 41,
          "$dssPropertyOrder" : 42
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 42,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "kW, PF",
          "type" : "object",
          "properties" : {
            "kW" : {
              "type" : "number",
              "default" : 1.0000000000000000E+001,
              "description" : "Total base kW for the load.  Normally, you would enter the maximum kW for the load for the first year and allow it to be adjusted by the load shapes, growth shapes, and global load multiplier.\n\nLegal ways to define base load:\nkW, PF\nkW, kvar\nkVA, PF\nXFKVA * Allocationfactor, PF\nkWh/(kWhdays*24) * Cfactor, PF",
              "title" : "kW",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "PF" : {
              "type" : "number",
              "default" : 8.8000000000000000E-001,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Load power factor.  Enter negative for leading powerfactor (when kW and kvar have opposite signs.)",
              "title" : "PF",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "kW",
            "PF"
          ]
        },
        {
          "title" : "kW, kvar",
          "type" : "object",
          "properties" : {
            "kW" : {
              "type" : "number",
              "default" : 1.0000000000000000E+001,
              "description" : "Total base kW for the load.  Normally, you would enter the maximum kW for the load for the first year and allow it to be adjusted by the load shapes, growth shapes, and global load multiplier.\n\nLegal ways to define base load:\nkW, PF\nkW, kvar\nkVA, PF\nXFKVA * Allocationfactor, PF\nkWh/(kWhdays*24) * Cfactor, PF",
              "title" : "kW",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "kvar" : {
              "type" : "number",
              "description" : "Specify the base kvar for specifying load as kW & kvar.  Assumes kW has been already defined.  Alternative to specifying the power factor.  Side effect:  the power factor and kVA is altered to agree.",
              "title" : "kvar",
              "$dssPropertyIndex" : 12,
              "$dssPropertyOrder" : 13
            }
          },
          "required" : [
            "kW",
            "kvar"
          ]
        },
        {
          "title" : "kVA, PF",
          "type" : "object",
          "properties" : {
            "kVA" : {
              "type" : "number",
              "description" : "Specify base Load in kVA (and power factor)\n\nLegal ways to define base load:\nkW, PF\nkW, kvar\nkVA, PF\nXFKVA * Allocationfactor, PF\nkWh/(kWhdays*24) * Cfactor, PF",
              "title" : "kVA",
              "$dssPropertyIndex" : 23,
              "$dssPropertyOrder" : 24
            },
            "PF" : {
              "type" : "number",
              "default" : 8.8000000000000000E-001,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Load power factor.  Enter negative for leading powerfactor (when kW and kvar have opposite signs.)",
              "title" : "PF",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "kVA",
            "PF"
          ]
        },
        {
          "title" : "xfkVA, AllocationFactor, PF",
          "type" : "object",
          "properties" : {
            "XfkVA" : {
              "type" : "number",
              "default" : 0.0000000000000000E+000,
              "description" : "Default = 0.0.  Rated kVA of service transformer for allocating loads based on connected kVA at a bus. Side effect:  kW, PF, and kvar are modified. See help on kVA.",
              "units" : "kVA",
              "title" : "XfkVA",
              "$dssPropertyIndex" : 21,
              "$dssPropertyOrder" : 22
            },
            "AllocationFactor" : {
              "type" : "number",
              "default" : 5.0000000000000000E-001,
              "description" : "Default = 0.5.  Allocation factor for allocating loads based on connected kVA at a bus. Side effect:  kW, PF, and kvar are modified by multiplying this factor times the XFKVA (if > 0).",
              "title" : "AllocationFactor",
              "$dssPropertyIndex" : 22,
              "$dssPropertyOrder" : 23
            },
            "PF" : {
              "type" : "number",
              "default" : 8.8000000000000000E-001,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Load power factor.  Enter negative for leading powerfactor (when kW and kvar have opposite signs.)",
              "title" : "PF",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "XfkVA",
            "PF"
          ]
        },
        {
          "title" : "kWh, kWhDays, CFactor, PF",
          "type" : "object",
          "properties" : {
            "kWh" : {
              "type" : "number",
              "default" : 0.0000000000000000E+000,
              "description" : "kWh billed for this period. Default is 0. See help on kVA and Cfactor and kWhDays.",
              "units" : "kWh",
              "title" : "kWh",
              "$dssPropertyIndex" : 28,
              "$dssPropertyOrder" : 29
            },
            "PF" : {
              "type" : "number",
              "default" : 8.8000000000000000E-001,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Load power factor.  Enter negative for leading powerfactor (when kW and kvar have opposite signs.)",
              "title" : "PF",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            },
            "kWhDays" : {
              "type" : "number",
              "default" : 3.0000000000000000E+001,
              "description" : "Length of kWh billing period in days (24 hr days). Default is 30. Average demand is computed using this value.",
              "title" : "kWhDays",
              "$dssPropertyIndex" : 29,
              "$dssPropertyOrder" : 30
            },
            "CFactor" : {
              "type" : "number",
              "default" : 4.0000000000000000E+000,
              "description" : "Factor relating average kW to peak kW. Default is 4.0. See kWh and kWhdays. See kVA.",
              "title" : "CFactor",
              "$dssPropertyIndex" : 30,
              "$dssPropertyOrder" : 31
            }
          },
          "required" : [
            "kWh",
            "PF"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1",
        "kV"
      ],
      "$defs" : {
        "LoadModel" : {
          "title" : "Load: Model",
          "type" : "integer",
          "enum" : [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "$dssFullEnum" : [
            [
              "ConstantPQ",
              "Constant PQ",
              1
            ],
            [
              "ConstantZ",
              "Constant Z",
              2
            ],
            [
              "Motor",
              "Motor (constant P, quadratic Q)",
              3
            ],
            [
              "CVR",
              "CVR (linear P, quadratic Q)",
              4
            ],
            [
              "ConstantI",
              "Constant I",
              5
            ],
            [
              "ConstantP_FixedQ",
              "Constant P, fixed Q",
              6
            ],
            [
              "ConstantP_FixedX",
              "Constant P, fixed X",
              7
            ],
            [
              "ZIPV",
              "ZIPV",
              8
            ]
          ]
        },
        "LoadStatus" : {
          "title" : "Load: Status",
          "type" : "string",
          "enum" : [
            "Variable",
            "Fixed",
            "Exempt"
          ],
          "$dssFullEnum" : [
            [
              "Variable",
              "Variable",
              0
            ],
            [
              "Fixed",
              "Fixed",
              1
            ],
            [
              "Exempt",
              "Exempt",
              2
            ]
          ]
        }
      }
    },
    "LoadList" : {
      "title" : "LoadList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Load"
      }
    },
    "LoadContainer" : {
      "default" : [
      ],
      "title" : "LoadContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/LoadList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Transformer" : {
      "title" : "Transformer",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases this transformer. Default is 3.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/BusConnection"
          },
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Bus",
          "$dssArrayProperty" : "Buses",
          "description" : "Use this to specify all the bus connections at once using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\"",
          "title" : "Bus",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 3
        },
        "Conn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/Connection"
          },
          "default" : [
            "Wye",
            "Wye"
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Conn",
          "$dssArrayProperty" : "Conns",
          "description" : "Use this to specify all the Winding connections at once using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\" ~ conns=(delta, wye)",
          "title" : "Conn",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 4
        },
        "kVA" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+003,
            1.0000000000000000E+003
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "kVA",
          "$dssArrayProperty" : "kVAs",
          "description" : "Use this to specify the kVA ratings of all windings at once using an array.",
          "title" : "kVA",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 6
        },
        "Tap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+000,
            1.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Tap",
          "$dssArrayProperty" : "Taps",
          "description" : "Use this to specify the p.u. tap of all windings at once using an array.",
          "title" : "Tap",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 7
        },
        "pctR" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            2.0000000000000001E-001,
            2.0000000000000001E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "%R",
          "$dssArrayProperty" : "%Rs",
          "description" : "Use this property to specify all the winding %resistances using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\" ~ %Rs=(0.2  0.3)",
          "title" : "%R",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 8
        },
        "RNeut" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            -1.0000000000000000E+000,
            -1.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Default = -1. Neutral resistance of wye (star)-connected winding in actual ohms. If entered as a negative value, the neutral is assumed to be open, or floating. To solidly ground the neutral, connect the neutral conductor to Node 0 in the Bus property spec for this winding. For example: Bus=MyBusName.1.2.3.0, which is generally the default connection.",
          "units" : "Ω",
          "title" : "RNeut",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 9
        },
        "XNeut" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            0.0000000000000000E+000,
            0.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Neutral reactance of wye(star)-connected winding in actual ohms.  May be + or -.",
          "units" : "Ω",
          "title" : "XNeut",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 10
        },
        "Thermal" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Thermal time constant of the transformer in hours.  Typically about 2.",
          "units" : "hour",
          "title" : "Thermal",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 12
        },
        "n" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "n Exponent for thermal properties in IEEE C57.  Typically 0.8.",
          "title" : "n",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 13
        },
        "m" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "m Exponent for thermal properties in IEEE C57.  Typically 0.9 - 1.0",
          "title" : "m",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 14
        },
        "FLRise" : {
          "type" : "number",
          "default" : 6.5000000000000000E+001,
          "description" : "Temperature rise, deg C, for full load.  Default is 65.",
          "units" : "°C",
          "title" : "FLRise",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 15
        },
        "HSRise" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Hot spot temperature rise, deg C.  Default is 15.",
          "units" : "°C",
          "title" : "HSRise",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 16
        },
        "pctLoadLoss" : {
          "type" : "number",
          "default" : 4.0000000000000002E-001,
          "description" : "Percent load loss at full load. The %R of the High and Low windings (1 and 2) are adjusted to agree at rated kVA loading.",
          "title" : "%LoadLoss",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 17
        },
        "pctNoLoadLoss" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent no load losses at rated excitatation voltage. Default is 0. Converts to a resistance in parallel with the magnetizing impedance in each winding.",
          "title" : "%NoLoadLoss",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 18
        },
        "NormHkVA" : {
          "type" : "number",
          "description" : "Normal maximum kVA rating of H winding (winding 1).  Usually 100% - 110% of maximum nameplate rating, depending on load shape. Defaults to 110% of kVA rating of Winding 1.",
          "units" : "kVA",
          "title" : "NormHkVA",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 19
        },
        "EmergHkVA" : {
          "type" : "number",
          "description" : "Emergency (contingency)  kVA rating of H winding (winding 1).  Usually 140% - 150% of maximum nameplate rating, depending on load shape. Defaults to 150% of kVA rating of Winding 1.",
          "units" : "kVA",
          "title" : "EmergHkVA",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 20
        },
        "Sub" : {
          "type" : "boolean",
          "default" : false,
          "description" : "={Yes|No}  Designates whether this transformer is to be considered a substation.Default is No.",
          "title" : "Sub",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 21
        },
        "MaxTap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.1000000000000001E+000,
            1.1000000000000001E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Max per unit tap for the active winding.  Default is 1.10",
          "title" : "MaxTap",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 22
        },
        "MinTap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            9.0000000000000002E-001,
            9.0000000000000002E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Min per unit tap for the active winding.  Default is 0.90",
          "title" : "MinTap",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 23
        },
        "NumTaps" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          },
          "default" : [
            32,
            32
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Total number of taps between min and max tap.  Default is 32 (16 raise and 16 lower taps about the neutral position). The neutral position is not counted.",
          "title" : "NumTaps",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 24
        },
        "SubName" : {
          "type" : "string",
          "description" : "Substation Name. Optional. Default is null. If specified, printed on plots",
          "title" : "SubName",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 25
        },
        "pctIMag" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent magnetizing current. Default=0.0. Magnetizing branch is in parallel with windings in each phase. Also, see \"ppm_antifloat\".",
          "title" : "%IMag",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 26
        },
        "ppm_Antifloat" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Default=1 ppm.  Parts per million of transformer winding VA rating connected to ground to protect against accidentally floating a winding without a reference. If positive then the effect is adding a very large reactance to ground.  If negative, then a capacitor.",
          "title" : "ppm_Antifloat",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 27
        },
        "Bank" : {
          "type" : "string",
          "description" : "Name of the bank this transformer is part of, for CIM, MultiSpeak, and other interfaces.",
          "title" : "Bank",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 28
        },
        "XRConst" : {
          "type" : "boolean",
          "default" : false,
          "description" : "={Yes|No} Default is NO. Signifies whether or not the X/R is assumed contant for harmonic studies.",
          "title" : "XRConst",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 30
        },
        "LeadLag" : {
          "$ref" : "#/$defs/PhaseSequence",
          "default" : "Lag",
          "description" : "{Lead | Lag (default) | ANSI (default) | Euro } Designation in mixed Delta-wye connections the relationship between HV to LV winding. Default is ANSI 30 deg lag, e.g., Dy1 of Yd1 vector group. To get typical European Dy11 connection, specify either \"lead\" or \"Euro\"",
          "title" : "LeadLag",
          "$dssPropertyIndex" : 44,
          "$dssPropertyOrder" : 34
        },
        "WdgCurrents" : {
          "type" : "string",
          "$comment" : "TODO: use array instead of string",
          "description" : "(Read only) Makes winding currents available via return on query (? Transformer.TX.WdgCurrents). Order: Phase 1, Wdg 1, Wdg 2, ..., Phase 2 ...\n\nWARNING: If the transformer has open terminal(s), results may be wrong, i.e. avoid using this in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24",
          "readOnly" : true,
          "title" : "WdgCurrents",
          "$dssPropertyIndex" : 45,
          "$dssPropertyOrder" : 35
        },
        "Core" : {
          "$ref" : "#/$defs/CoreType",
          "default" : "shell",
          "description" : "{Shell*|5-leg|3-Leg|1-phase|core-1-phase|4-leg} Core Type. Used for GIC analysis",
          "title" : "Core",
          "$dssPropertyIndex" : 46,
          "$dssPropertyOrder" : 36
        },
        "RDCOhms" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            8.8117176666666699E-002,
            8.8117176666666699E-002
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Winding dc resistance in OHMS. Useful for GIC analysis. From transformer test report. Defaults to 85% of %R property",
          "title" : "RDCOhms",
          "$dssPropertyIndex" : 47,
          "$dssPropertyOrder" : 37
        },
        "Ratings" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            1.1000000000000000E+003
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of ratings to be used when the seasonal ratings flag is True. It can be used to insert\nmultiple ratings to change during a QSTS simulation to evaluate different ratings in transformers. Is given in kVA",
          "title" : "Ratings",
          "$dssPropertyIndex" : 49,
          "$dssPropertyOrder" : 38
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 7.0000000000000001E-003,
          "description" : "Failure rate per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 52,
          "$dssPropertyOrder" : 41
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent of failures that become permanent.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 53,
          "$dssPropertyOrder" : 42
        },
        "Repair" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 54,
          "$dssPropertyOrder" : 43
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 55,
          "$dssPropertyOrder" : 44
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 56,
          "$dssPropertyOrder" : 45
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 57,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "XfmrCode",
          "type" : "object",
          "properties" : {
            "XfmrCode" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Name of a library entry for transformer properties. The named XfmrCode must already be defined.",
              "title" : "XfmrCode",
              "$dssPropertyIndex" : 39,
              "$dssPropertyOrder" : 29
            }
          },
          "required" : [
            "XfmrCode"
          ]
        },
        {
          "title" : "X12, X13, X23, kV",
          "type" : "object",
          "properties" : {
            "X12" : {
              "type" : "number",
              "default" : 7.0000000000000009E+000,
              "exclusiveMinimum" : 0,
              "description" : "Alternative to XHL for specifying the percent reactance from winding 1 to winding 2.  Use for 2- or 3-winding transformers. Percent on the kVA base of winding 1. ",
              "title" : "X12",
              "$dssPropertyIndex" : 41,
              "$dssPropertyOrder" : 31
            },
            "X13" : {
              "type" : "number",
              "default" : 3.5000000000000000E+001,
              "exclusiveMinimum" : 0,
              "description" : "Alternative to XHT for specifying the percent reactance from winding 1 to winding 3.  Use for 3-winding transformers only. Percent on the kVA base of winding 1. ",
              "title" : "X13",
              "$dssPropertyIndex" : 42,
              "$dssPropertyOrder" : 32
            },
            "X23" : {
              "type" : "number",
              "default" : 3.0000000000000000E+001,
              "exclusiveMinimum" : 0,
              "description" : "Alternative to XLT for specifying the percent reactance from winding 2 to winding 3.Use for 3-winding transformers only. Percent on the kVA base of winding 1.  ",
              "title" : "X23",
              "$dssPropertyIndex" : 43,
              "$dssPropertyOrder" : 33
            },
            "kV" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "default" : [
                1.2470000000000001E+001,
                1.2470000000000001E+001
              ],
              "$dssLength" : "Windings",
              "$dssIterator" : "Wdg",
              "$dssScalarProperty" : "kV",
              "$dssArrayProperty" : "kVs",
              "description" : "Use this to specify the kV ratings of all windings at once using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\" \n~ conns=(delta, wye)\n~ kvs=(115, 12.47)\n\nSee kV= property for voltage rules.",
              "units" : "kV",
              "title" : "kV",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "X12",
            "kV"
          ]
        },
        {
          "title" : "XscArray, kV",
          "type" : "object",
          "properties" : {
            "XSCArray" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "description" : "Use this to specify the percent reactance between all pairs of windings as an array. All values are on the kVA base of winding 1.  The order of the values is as follows:\n\n(x12 13 14... 23 24.. 34 ..)  \n\nThere will be n(n-1)/2 values, where n=number of windings.",
              "title" : "XSCArray",
              "$dssPropertyIndex" : 20,
              "$dssPropertyOrder" : 11
            },
            "kV" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "default" : [
                1.2470000000000001E+001,
                1.2470000000000001E+001
              ],
              "$dssLength" : "Windings",
              "$dssIterator" : "Wdg",
              "$dssScalarProperty" : "kV",
              "$dssArrayProperty" : "kVs",
              "description" : "Use this to specify the kV ratings of all windings at once using an array. Example:\n\nNew Transformer.T1 buses=\"Hibus, lowbus\" \n~ conns=(delta, wye)\n~ kvs=(115, 12.47)\n\nSee kV= property for voltage rules.",
              "units" : "kV",
              "title" : "kV",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "XSCArray",
            "kV"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus"
      ]
    },
    "TransformerList" : {
      "title" : "TransformerList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Transformer"
      }
    },
    "TransformerContainer" : {
      "default" : [
      ],
      "title" : "TransformerContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/TransformerList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "RegControl" : {
      "title" : "RegControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Transformer" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of Transformer or AutoTrans element to which the RegControl is connected. Do not specify the full object name; \"Transformer\" or \"AutoTrans\" is assumed for the object class.  Example:\n\nTransformer=Xfmr1",
          "title" : "Transformer",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Winding" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the winding of the transformer element that the RegControl is monitoring. 1 or 2, typically.  Side Effect: Sets TAPWINDING property to the same winding.",
          "title" : "Winding",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "VReg" : {
          "type" : "number",
          "default" : 1.2000000000000000E+002,
          "description" : "Voltage regulator setting, in VOLTS, for the winding being controlled.  Multiplying this value times the ptratio should yield the voltage across the WINDING of the controlled transformer. Default is 120.0",
          "units" : "V",
          "title" : "VReg",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Band" : {
          "type" : "number",
          "default" : 3.0000000000000000E+000,
          "description" : "Bandwidth in VOLTS for the controlled bus (see help for ptratio property).  Default is 3.0",
          "title" : "Band",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "PTRatio" : {
          "type" : "number",
          "default" : 6.0000000000000000E+001,
          "description" : "Ratio of the PT that converts the controlled winding voltage to the regulator control voltage. Default is 60.  If the winding is Wye, the line-to-neutral voltage is used.  Else, the line-to-line voltage is used. SIDE EFFECT: Also sets RemotePTRatio property.",
          "title" : "PTRatio",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "CTPrim" : {
          "type" : "number",
          "default" : 3.0000000000000000E+002,
          "description" : "Rating, in Amperes, of the primary CT rating for which the line amps convert to control rated amps.The typical default secondary ampere rating is 0.2 Amps (check with manufacturer specs). Current at which the LDC voltages match the R and X settings.",
          "units" : "A",
          "title" : "CTPrim",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "R" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "R setting on the line drop compensator in the regulator, expressed in VOLTS.",
          "title" : "R",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "X" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "X setting on the line drop compensator in the regulator, expressed in VOLTS.",
          "title" : "X",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "Bus" : {
          "type" : "string",
          "description" : "Name of a bus (busname.nodename) in the system to use as the controlled bus instead of the bus to which the transformer winding is connected or the R and X line drop compensator settings.  Do not specify this value if you wish to use the line drop compensator settings.  Default is null string. Assumes the base voltage for this bus is the same as the transformer winding base specified above. Note: This bus (1-phase) WILL BE CREATED by the regulator control upon SOLVE if not defined by some other device. You can specify the node of the bus you wish to sample (defaults to 1). If specified, the RegControl is redefined as a 1-phase device since only one voltage is used.",
          "title" : "Bus",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Delay" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Time delay, in seconds, from when the voltage goes out of band to when the tap changing begins. This is used to determine which regulator control will act first. Default is 15.  You may specify any floating point number to achieve a model of whatever condition is necessary.",
          "units" : "s",
          "title" : "Delay",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "Reversible" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes |No*} Indicates whether or not the regulator can be switched to regulate in the reverse direction. Default is No.Typically applies only to line regulators and not to LTC on a substation transformer.",
          "title" : "Reversible",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "RevVReg" : {
          "type" : "number",
          "default" : 1.2000000000000000E+002,
          "description" : "Voltage setting in volts for operation in the reverse direction.",
          "title" : "RevVReg",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "RevBand" : {
          "type" : "number",
          "default" : 3.0000000000000000E+000,
          "description" : "Bandwidth for operating in the reverse direction.",
          "title" : "RevBand",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "RevR" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "R line drop compensator setting for reverse direction.",
          "title" : "RevR",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "RevX" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "X line drop compensator setting for reverse direction.",
          "title" : "RevX",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "TapDelay" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Delay in sec between tap changes. Default is 2. This is how long it takes between changes after the first change.",
          "units" : "s",
          "title" : "TapDelay",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "DebugTrace" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No* }  Default is no.  Turn this on to capture the progress of the regulator model for each control iteration.  Creates a separate file for each RegControl named \"REG_name.csv\".",
          "title" : "DebugTrace",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "MaxTapChange" : {
          "type" : "integer",
          "default" : 16,
          "description" : "Maximum allowable tap change per control iteration in STATIC control mode.  Default is 16. \n\nSet this to 1 to better approximate actual control action. \n\nSet this to 0 to fix the tap in the current position.",
          "title" : "MaxTapChange",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "InverseTime" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No* } Default is no.  The time delay is adjusted inversely proportional to the amount the voltage is outside the band down to 10%.",
          "title" : "InverseTime",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "TapWinding" : {
          "type" : "integer",
          "description" : "Winding containing the actual taps, if different than the WINDING property. Defaults to the same winding as specified by the WINDING property.",
          "title" : "TapWinding",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "VLimit" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Voltage Limit for bus to which regulated winding is connected (e.g. first customer). Default is 0.0. Set to a value greater then zero to activate this function.",
          "units" : "V",
          "title" : "VLimit",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "PTPhase" : {
          "$ref" : "#/$defs/RegControl/$defs/RegControlPhaseSelection",
          "default" : 1,
          "description" : "For multi-phase transformers, the number of the phase being monitored or one of { MAX | MIN} for all phases. Default=1. Must be less than or equal to the number of phases. Ignored for regulated bus.",
          "title" : "PTPhase",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "RevThreshold" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "kW reverse power threshold for reversing the direction of the regulator. Default is 100.0 kw.",
          "units" : "kW",
          "title" : "RevThreshold",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "RevDelay" : {
          "type" : "number",
          "default" : 6.0000000000000000E+001,
          "description" : "Time Delay in seconds (s) for executing the reversing action once the threshold for reversing has been exceeded. Default is 60 s.",
          "units" : "s",
          "title" : "RevDelay",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "RevNeutral" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No*} Default is no. Set this to Yes if you want the regulator to go to neutral in the reverse direction or in cogen operation.",
          "title" : "RevNeutral",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 26
        },
        "EventLog" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True | No/False*} Default is NO for regulator control. Log control actions to Eventlog.",
          "title" : "EventLog",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 27
        },
        "RemotePTRatio" : {
          "type" : "number",
          "description" : "When regulating a bus (the Bus= property is set), the PT ratio required to convert actual voltage at the remote bus to control voltage. Is initialized to PTratio property. Set this property after setting PTratio.",
          "title" : "RemotePTRatio",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 28
        },
        "TapNum" : {
          "type" : "integer",
          "default" : 0,
          "description" : "An integer number indicating the tap position that the controlled transformer winding tap position is currently at, or is being set to.  If being set, and the value is outside the range of the transformer min or max tap, then set to the min or max tap position as appropriate. Default is 0",
          "title" : "TapNum",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 29
        },
        "Reset" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No} If Yes, forces Reset of this RegControl.",
          "writeOnly" : true,
          "title" : "Reset",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 35
        },
        "LDC_Z" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Z value for Beckwith LDC_Z control option. Volts adjustment at rated control current.",
          "title" : "LDC_Z",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 30
        },
        "Rev_Z" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Reverse Z value for Beckwith LDC_Z control option.",
          "title" : "Rev_Z",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 31
        },
        "Cogen" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes|No*} Default is No. The Cogen feature is activated. Continues looking forward if power reverses, but switches to reverse-mode LDC, vreg and band values.",
          "title" : "Cogen",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 32
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 33
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 34
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Transformer"
      ],
      "$defs" : {
        "RegControlPhaseSelection" : {
          "title" : "RegControl: Phase Selection",
          "oneOf" : [
            {
              "type" : "string",
              "enum" : [
                "min",
                "max"
              ]
            },
            {
              "type" : "integer",
              "minimum" : 1
            }
          ],
          "$dssFullEnum" : [
            [
              "min",
              "min",
              -3
            ],
            [
              "max",
              "max",
              -2
            ]
          ]
        }
      }
    },
    "RegControlList" : {
      "title" : "RegControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/RegControl"
      }
    },
    "RegControlContainer" : {
      "default" : [
      ],
      "title" : "RegControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/RegControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Capacitor" : {
      "title" : "Capacitor",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of first bus of 2-terminal capacitor. Examples:\nbus1=busname\nbus1=busname.1.2.3\n\nIf only one bus specified, Bus2 will default to this bus, Node 0, and the capacitor will be a Yg shunt bank.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of 2nd bus. Defaults to all phases connected to first bus, node 0, (Shunt Wye Connection) except when Bus2 explicitly specified. \n\nNot necessary to specify for delta (LL) connection.",
          "title" : "Bus2",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.",
          "title" : "Phases",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "={wye | delta |LN |LL}  Default is wye, which is equivalent to LN",
          "title" : "Conn",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "R" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            0.0000000000000000E+000
          ],
          "$dssLength" : "NumSteps",
          "description" : "ARRAY of series resistance in each phase (line), ohms. Default is 0.0",
          "title" : "R",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "XL" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            0.0000000000000000E+000
          ],
          "$dssLength" : "NumSteps",
          "description" : "ARRAY of series inductive reactance(s) in each phase (line) for filter, ohms at base frequency. Use this OR \"h\" property to define filter. Default is 0.0.",
          "title" : "XL",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "Harm" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            0.0000000000000000E+000
          ],
          "$dssLength" : "NumSteps",
          "description" : "ARRAY of harmonics to which each step is tuned. Zero is interpreted as meaning zero reactance (no filter). Default is zero.",
          "title" : "Harm",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "States" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          },
          "default" : [
            1
          ],
          "$dssLength" : "NumSteps",
          "description" : "ARRAY of integers {1|0} states representing the state of each step (on|off). Defaults to 1 when reallocated (on). Capcontrol will modify this array as it turns steps on or off.",
          "title" : "States",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 13
        },
        "NormAmps" : {
          "type" : "number",
          "default" : 7.5004605941234445E+001,
          "description" : "Normal rated current. Defaults to 180% of per-phase rated current.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 14
        },
        "EmergAmps" : {
          "type" : "number",
          "default" : 1.0000614125497927E+002,
          "description" : "Maximum or emerg current. Defaults to 180% of per-phase rated current.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 15
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 5.0000000000000001E-004,
          "description" : "Failure rate per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 16
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Percent of failures that become permanent.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 17
        },
        "Repair" : {
          "type" : "number",
          "default" : 3.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 18
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 19
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 20
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "kvar, kV",
          "type" : "object",
          "properties" : {
            "kvar" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "default" : [
                1.2000000000000000E+003
              ],
              "$dssLength" : "NumSteps",
              "description" : "Total kvar, if one step, or ARRAY of kvar ratings for each step.  Evenly divided among phases. See rules for NUMSTEPS.",
              "title" : "kvar",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "kV" : {
              "type" : "number",
              "default" : 1.2470000000000001E+001,
              "minimum" : 0,
              "description" : "For 2, 3-phase, kV phase-phase. Otherwise specify actual can rating.",
              "units" : "kV",
              "title" : "kV",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "kvar",
            "kV"
          ]
        },
        {
          "title" : "cmatrix",
          "type" : "object",
          "properties" : {
            "CMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Nodal cap. matrix, lower triangle, microfarads, of the following form:\n\ncmatrix=\"c11 | -c21 c22 | -c31 -c32 c33\"\n\nAll steps are assumed the same if this property is used.",
              "units" : "μF",
              "title" : "CMatrix",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "CMatrix"
          ]
        },
        {
          "title" : "cuf, kV",
          "type" : "object",
          "properties" : {
            "Cuf" : {
              "$ref" : "#/$defs/ArrayOrFilePath",
              "$dssLength" : "NumSteps",
              "description" : "ARRAY of Capacitance, each phase, for each step, microfarads.\nSee Rules for NumSteps.",
              "units" : "μF",
              "title" : "Cuf",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 9
            },
            "kV" : {
              "type" : "number",
              "default" : 1.2470000000000001E+001,
              "minimum" : 0,
              "description" : "For 2, 3-phase, kV phase-phase. Otherwise specify actual can rating.",
              "units" : "kV",
              "title" : "kV",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "Cuf",
            "kV"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1"
      ]
    },
    "CapacitorList" : {
      "title" : "CapacitorList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Capacitor"
      }
    },
    "CapacitorContainer" : {
      "default" : [
      ],
      "title" : "CapacitorContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/CapacitorList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Reactor" : {
      "title" : "Reactor",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of first bus. Examples:\nbus1=busname\nbus1=busname.1.2.3\n\nBus2 property will default to this bus, node 0, unless previously specified. Only Bus1 need be specified for a Yg shunt reactor.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of 2nd bus. Defaults to all phases connected to first bus, node 0, (Shunt Wye Connection) except when Bus2 is specifically defined.\n\nNot necessary to specify for delta (LL) connection",
          "title" : "Bus2",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.",
          "title" : "Phases",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "={wye | delta |LN |LL}  Default is wye, which is equivalent to LN. If Delta, then only one terminal.",
          "title" : "Conn",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Parallel" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No}  Default=No. Indicates whether Rmatrix and Xmatrix are to be considered in parallel. Default is series. For other models, specify R and Rp.",
          "title" : "Parallel",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Rp" : {
          "type" : "number",
          "description" : "Resistance in parallel with R and X (the entire branch). Assumed infinite if not specified.",
          "units" : "Ω",
          "title" : "Rp",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 11
        },
        "NormAmps" : {
          "type" : "number",
          "description" : "Normal rated current. Defaults to per-phase rated current when reactor is specified with rated power and voltage.",
          "units" : "A",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 18
        },
        "EmergAmps" : {
          "type" : "number",
          "description" : "Maximum or emerg current. Defaults to 135% of per-phase rated current when reactor is specified with rated power and voltage.",
          "units" : "A",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 19
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 5.0000000000000001E-004,
          "description" : "Failure rate per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 20
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Percent of failures that become permanent.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 21
        },
        "Repair" : {
          "type" : "number",
          "default" : 3.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 22
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 23
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 24
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "kV, kvar, Rcurve, Lcurve",
          "type" : "object",
          "properties" : {
            "kV" : {
              "type" : "number",
              "default" : 1.2470000000000001E+001,
              "minimum" : 0,
              "description" : "For 2, 3-phase, kV phase-phase. Otherwise specify actual coil rating.",
              "units" : "kV",
              "title" : "kV",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            },
            "kvar" : {
              "type" : "number",
              "default" : 1.0000000000000000E+002,
              "description" : "Total kvar, all phases.  Evenly divided among phases. Only determines X. Specify R separately",
              "units" : "kvar",
              "title" : "kvar",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "RCurve" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Name of XYCurve object, previously defined, describing per-unit variation of phase resistance, R, vs. frequency. Applies to resistance specified by R or Z property. If actual values are not known, R often increases by approximately the square root of frequency.",
              "title" : "RCurve",
              "$dssPropertyIndex" : 17,
              "$dssPropertyOrder" : 16
            },
            "LCurve" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Name of XYCurve object, previously defined, describing per-unit variation of phase inductance, L=X/w, vs. frequency. Applies to reactance specified by X, LmH, Z, or kvar property.L generally decreases somewhat with frequency above the base frequency, approaching a limit at a few kHz.",
              "title" : "LCurve",
              "$dssPropertyIndex" : 18,
              "$dssPropertyOrder" : 17
            }
          },
          "required" : [
            "kV",
            "kvar"
          ]
        },
        {
          "title" : "Z, Rcurve, Lcurve",
          "type" : "object",
          "properties" : {
            "Z" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                0.0000000000000000E+000,
                0.0000000000000000E+000
              ],
              "description" : "Alternative way of defining R and X properties. Enter a 2-element array representing R +jX in ohms. Example:\n\nZ=[5  10]   ! equivalent to R=5  X=10 ",
              "units" : "Ω",
              "title" : "Z",
              "$dssPropertyIndex" : 16,
              "$dssPropertyOrder" : 15
            },
            "RCurve" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Name of XYCurve object, previously defined, describing per-unit variation of phase resistance, R, vs. frequency. Applies to resistance specified by R or Z property. If actual values are not known, R often increases by approximately the square root of frequency.",
              "title" : "RCurve",
              "$dssPropertyIndex" : 17,
              "$dssPropertyOrder" : 16
            },
            "LCurve" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 255,
              "description" : "Name of XYCurve object, previously defined, describing per-unit variation of phase inductance, L=X/w, vs. frequency. Applies to reactance specified by X, LmH, Z, or kvar property.L generally decreases somewhat with frequency above the base frequency, approaching a limit at a few kHz.",
              "title" : "LCurve",
              "$dssPropertyIndex" : 18,
              "$dssPropertyOrder" : 17
            }
          },
          "required" : [
            "Z"
          ]
        },
        {
          "title" : "R, LmH, Rcurve, Lcurve",
          "type" : "object",
          "properties" : {
            "Z0" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                0.0000000000000000E+000,
                0.0000000000000000E+000
              ],
              "description" : "Zer0-sequence impedance, ohms, as a 2-element array representing a complex number. Example: \n\nZ0=[3, 4]  ! represents 3 + j4 \n\nUsed to define the impedance matrix of the REACTOR if Z1 is also specified. \n\nNote: Z0 defaults to Z1 if it is not specifically defined. ",
              "units" : "Ω",
              "title" : "Z0",
              "$dssPropertyIndex" : 15,
              "$dssPropertyOrder" : 14
            },
            "Z1" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                0.0000000000000000E+000,
                0.0000000000000000E+000
              ],
              "description" : "Positive-sequence impedance, ohms, as a 2-element array representing a complex number. Example: \n\nZ1=[1, 2]  ! represents 1 + j2 \n\nIf defined, Z1, Z2, and Z0 are used to define the impedance matrix of the REACTOR. Z1 MUST BE DEFINED TO USE THIS OPTION FOR DEFINING THE MATRIX.\n\nSide Effect: Sets Z2 and Z0 to same values unless they were previously defined.",
              "units" : "Ω",
              "title" : "Z1",
              "$dssPropertyIndex" : 13,
              "$dssPropertyOrder" : 12
            },
            "Z2" : {
              "$ref" : "#/$defs/Complex",
              "default" : [
                0.0000000000000000E+000,
                0.0000000000000000E+000
              ],
              "description" : "Negative-sequence impedance, ohms, as a 2-element array representing a complex number. Example: \n\nZ2=[1, 2]  ! represents 1 + j2 \n\nUsed to define the impedance matrix of the REACTOR if Z1 is also specified. \n\nNote: Z2 defaults to Z1 if it is not specifically defined. If Z2 is not equal to Z1, the impedance matrix is asymmetrical.",
              "units" : "Ω",
              "title" : "Z2",
              "$dssPropertyIndex" : 14,
              "$dssPropertyOrder" : 13
            }
          },
          "required" : [
            "Z0"
          ]
        },
        {
          "title" : "Z0, Z1, Z2",
          "type" : "object",
          "properties" : {
            "RMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Resistance matrix, lower triangle, ohms at base frequency. Order of the matrix is the number of phases. Mutually exclusive to specifying parameters by kvar or X.",
              "title" : "RMatrix",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            },
            "XMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Reactance matrix, lower triangle, ohms at base frequency. Order of the matrix is the number of phases. Mutually exclusive to specifying parameters by kvar or X.",
              "title" : "XMatrix",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 9
            }
          },
          "required" : [
            "XMatrix"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1"
      ]
    },
    "ReactorList" : {
      "title" : "ReactorList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Reactor"
      }
    },
    "ReactorContainer" : {
      "default" : [
      ],
      "title" : "ReactorContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/ReactorList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "CapControl" : {
      "title" : "CapControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line or transformer, to which the capacitor control's PT and/or CT are connected.There is no default; must be specified.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the CapControl is connected. 1 or 2, typically.  Default is 1.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Capacitor" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of Capacitor element which the CapControl controls. No Default; Must be specified.Do not specify the full object name; \"Capacitor\" is assumed for the object class.  Example:\n\nCapacitor=cap1",
          "title" : "Capacitor",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Type" : {
          "$ref" : "#/$defs/CapControl/$defs/CapControlType",
          "default" : "Current",
          "description" : "{Current | Voltage | kvar | PF | Time | Follow} Control type.  Specify the ONsetting and OFFsetting appropriately with the type of control. (See help for ONsetting)",
          "title" : "Type",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "PTRatio" : {
          "type" : "number",
          "default" : 6.0000000000000000E+001,
          "description" : "Ratio of the PT that converts the monitored voltage to the control voltage. Default is 60.  If the capacitor is Wye, the 1st phase line-to-neutral voltage is monitored.  Else, the line-to-line voltage (1st - 2nd phase) is monitored.",
          "title" : "PTRatio",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "CTRatio" : {
          "type" : "number",
          "default" : 6.0000000000000000E+001,
          "description" : "Ratio of the CT from line amps to control ampere setting for current and kvar control types. ",
          "title" : "CTRatio",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "OnSetting" : {
          "type" : "number",
          "default" : 3.0000000000000000E+002,
          "description" : "Value at which the control arms to switch the capacitor ON (or ratchet up a step).  \n\nType of Control:\n\nCurrent: Line Amps / CTratio\nVoltage: Line-Neutral (or Line-Line for delta) Volts / PTratio\nkvar:    Total kvar, all phases (3-phase for pos seq model). This is directional. \nPF:      Power Factor, Total power in monitored terminal. Negative for Leading. \nTime:    Hrs from Midnight as a floating point number (decimal). 7:30am would be entered as 7.5.\nFollow:  Follows a loadshape (ControlSignal) to determine when to turn ON/OFF the capacitor. If the value is different than 0 the capacitor will connect to the grid, otherwise, it will be disconnected.",
          "title" : "OnSetting",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "OffSetting" : {
          "type" : "number",
          "default" : 2.0000000000000000E+002,
          "description" : "Value at which the control arms to switch the capacitor OFF. (See help for ONsetting)For Time control, is OK to have Off time the next day ( < On time)",
          "title" : "OffSetting",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "Delay" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Time delay, in seconds, from when the control is armed before it sends out the switching command to turn ON.  The control may reset before the action actually occurs. This is used to determine which capacity control will act first. Default is 15.  You may specify any floating point number to achieve a model of whatever condition is necessary.",
          "title" : "Delay",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "VoltOverride" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No}  Default is No.  Switch to indicate whether VOLTAGE OVERRIDE is to be considered. Vmax and Vmin must be set to reasonable values if this property is Yes.",
          "title" : "VoltOverride",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "VMax" : {
          "type" : "number",
          "default" : 1.2600000000000000E+002,
          "description" : "Maximum voltage, in volts.  If the voltage across the capacitor divided by the PTRATIO is greater than this voltage, the capacitor will switch OFF regardless of other control settings. Default is 126 (goes with a PT ratio of 60 for 12.47 kV system).",
          "units" : "V",
          "title" : "VMax",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "VMin" : {
          "type" : "number",
          "default" : 1.1500000000000000E+002,
          "description" : "Minimum voltage, in volts.  If the voltage across the capacitor divided by the PTRATIO is less than this voltage, the capacitor will switch ON regardless of other control settings. Default is 115 (goes with a PT ratio of 60 for 12.47 kV system).",
          "units" : "V",
          "title" : "VMin",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "DelayOff" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Time delay, in seconds, for control to turn OFF when present state is ON. Default is 15.",
          "units" : "s",
          "title" : "DelayOff",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "DeadTime" : {
          "type" : "number",
          "default" : 3.0000000000000000E+002,
          "description" : "Dead time after capacitor is turned OFF before it can be turned back ON. Default is 300 sec.",
          "units" : "s",
          "title" : "DeadTime",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "CTPhase" : {
          "$ref" : "#/$defs/MonitoredPhase",
          "default" : 1,
          "description" : "Number of the phase being monitored for CURRENT control or one of {AVG | MAX | MIN} for all phases. Default=1. If delta or L-L connection, enter the first or the two phases being monitored [1-2, 2-3, 3-1]. Must be less than the number of phases. Does not apply to kvar control which uses all phases by default.",
          "title" : "CTPhase",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "PTPhase" : {
          "$ref" : "#/$defs/MonitoredPhase",
          "default" : 1,
          "description" : "Number of the phase being monitored for VOLTAGE control or one of {AVG | MAX | MIN} for all phases. Default=1. If delta or L-L connection, enter the first or the two phases being monitored [1-2, 2-3, 3-1]. Must be less than the number of phases. Does not apply to kvar control which uses all phases by default.",
          "title" : "PTPhase",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "VBus" : {
          "type" : "string",
          "description" : "Name of bus to use for voltage override function. Default is bus at monitored terminal. Sometimes it is useful to monitor a bus in another location to emulate various DMS control algorithms.",
          "title" : "VBus",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "EventLog" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True | No/False*} Default is NO for CapControl. Log control actions to Eventlog.",
          "title" : "EventLog",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "UserModel" : {
          "type" : "string",
          "description" : "Name of DLL containing user-written CapControl model, overriding the default model.  Set to \"none\" to negate previous setting. ",
          "title" : "UserModel",
          "format" : "file-path",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "UserData" : {
          "type" : "string",
          "description" : "String (in quotes or parentheses if necessary) that gets passed to the user-written CapControl model Edit function for defining the data required for that model. ",
          "title" : "UserData",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "pctMinkvar" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "description" : "For PF control option, min percent of total bank kvar at which control will close capacitor switch. Default = 50.",
          "title" : "pctMinkvar",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "Reset" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No} If Yes, forces Reset of this CapControl.",
          "writeOnly" : true,
          "title" : "Reset",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 26
        },
        "ControlSignal" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Load shape used for controlling the connection/disconnection of the capacitor to the grid, when the load shape is DIFFERENT than ZERO (0) the capacitor will be ON and connected to the grid. Otherwise, if the load shape value is EQUAL to ZERO (0) the capacitor bank will be OFF and disconnected from the grid.",
          "title" : "ControlSignal",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 23
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 24
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 25
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Capacitor"
      ],
      "$defs" : {
        "CapControlType" : {
          "title" : "CapControl: Type",
          "type" : "string",
          "enum" : [
            "Current",
            "Voltage",
            "kvar",
            "Time",
            "PowerFactor",
            "Follow"
          ],
          "$dssFullEnum" : [
            [
              "Current",
              "Current",
              0
            ],
            [
              "Voltage",
              "Voltage",
              1
            ],
            [
              "kvar",
              "kvar",
              2
            ],
            [
              "Time",
              "Time",
              3
            ],
            [
              "PowerFactor",
              "PowerFactor",
              4
            ],
            [
              "Follow",
              "Follow",
              5
            ]
          ]
        }
      }
    },
    "CapControlList" : {
      "title" : "CapControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/CapControl"
      }
    },
    "CapControlContainer" : {
      "default" : [
      ],
      "title" : "CapControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/CapControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Fault" : {
      "title" : "Fault",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of first bus. Examples:\n\nbus1=busname\nbus1=busname.1.2.3\n\nBus2 automatically defaults to busname.0,0,0 unless it was previously defined. ",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of 2nd bus of the 2-terminal Fault object. Defaults to all phases connected to first bus, node 0, if not specified. (Shunt Wye Connection to ground reference)\n\nThat is, the Fault defaults to a ground fault unless otherwise specified.",
          "title" : "Bus2",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Phases" : {
          "type" : "integer",
          "default" : 1,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases. Default is 1.",
          "title" : "Phases",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "pctStdDev" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent standard deviation in resistance to assume for Monte Carlo fault (MF) solution mode for GAUSSIAN distribution. Default is 0 (no variation from mean).",
          "title" : "%StdDev",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "OnTime" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Time (sec) at which the fault is established for time varying simulations. Default is 0.0 (on at the beginning of the simulation)",
          "units" : "s",
          "title" : "OnTime",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Temporary" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No} Default is No.  Designate whether the fault is temporary.  For Time-varying simulations, the fault will be removed if the current through the fault drops below the MINAMPS criteria.",
          "title" : "Temporary",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "MinAmps" : {
          "type" : "number",
          "default" : 5.0000000000000000E+000,
          "description" : "Minimum amps that can sustain a temporary fault. Default is 5.",
          "units" : "A",
          "title" : "MinAmps",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Failure rate per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Percent of failures that become permanent.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Repair" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "r",
          "type" : "object",
          "properties" : {
            "R" : {
              "type" : "number",
              "default" : 1.0000000000000000E-004,
              "description" : "Resistance, each phase, ohms. Default is 0.0001. Assumed to be Mean value if gaussian random mode.Max value if uniform mode.  A Fault is actually a series resistance that defaults to a wye connection to ground on the second terminal.  You may reconnect the 2nd terminal to achieve whatever connection.  Use the Gmatrix property to specify an arbitrary conductance matrix.",
              "units" : "Ω",
              "title" : "R",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "R"
          ]
        },
        {
          "title" : "Gmatrix",
          "type" : "object",
          "properties" : {
            "GMatrix" : {
              "$ref" : "#/$defs/SymmetricMatrix",
              "$dssShape" : [
                "Phases",
                "Phases"
              ],
              "description" : "Use this to specify a nodal conductance (G) matrix to represent some arbitrary resistance network. Specify in lower triangle form as usual for DSS matrices.",
              "title" : "GMatrix",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 7
            }
          },
          "required" : [
            "GMatrix"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1"
      ]
    },
    "FaultList" : {
      "title" : "FaultList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Fault"
      }
    },
    "FaultContainer" : {
      "default" : [
      ],
      "title" : "FaultContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/FaultList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "DynamicExp" : {
      "title" : "DynamicExp",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "NVariables" : {
          "type" : "integer",
          "default" : 0,
          "description" : "(Int) Number of state variables to be considered in the differential equation.",
          "title" : "NVariables",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "VarNames" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "([String]) Array of strings with the names of the state variables.",
          "title" : "VarNames",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Expression" : {
          "type" : "string",
          "description" : "It is the differential expression using OpenDSS RPN syntax. The expression must be contained within brackets in case of having multiple equations, for example:\n\nexpression=\"[w dt = 1 M / (P_m D*w - P_e -) *]\"",
          "title" : "Expression",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 4
        },
        "Domain" : {
          "$ref" : "#/$defs/DynamicExp/$defs/DynamicExpDomain",
          "default" : "Time",
          "description" : "It is the domain for which the equation is defined, it can be one of [time*, dq]. By deafult, dynamic epxressions are defined in the time domain.",
          "title" : "Domain",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 5
        },
        "Like" : {
          "type" : "string",
          "description" : "DynamicExp.like",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Expression"
      ],
      "$defs" : {
        "DynamicExpDomain" : {
          "title" : "DynamicExp: Domain",
          "type" : "string",
          "enum" : [
            "Time",
            "dq"
          ],
          "$dssFullEnum" : [
            [
              "Time",
              "Time",
              0
            ],
            [
              "dq",
              "dq",
              1
            ]
          ]
        }
      }
    },
    "DynamicExpList" : {
      "title" : "DynamicExpList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/DynamicExp"
      }
    },
    "DynamicExpContainer" : {
      "default" : [
      ],
      "title" : "DynamicExpContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/DynamicExpList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Generator" : {
      "title" : "Generator",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases, this Generator.  Power is evenly divided among phases.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Bus to which the Generator is connected.  May include specific node specification.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kV" : {
          "type" : "number",
          "default" : 1.2470000000000001E+001,
          "minimum" : 0,
          "description" : "Nominal rated (1.0 per unit) voltage, kV, for Generator. For 2- and 3-phase Generators, specify phase-phase kV. Otherwise, for phases=1 or phases>3, specify actual kV across each branch of the Generator. If wye (star), specify phase-neutral kV. If delta or phase-phase connected, specify phase-phase kV.",
          "units" : "kV",
          "title" : "kV",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Model" : {
          "$ref" : "#/$defs/Generator/$defs/GeneratorModel",
          "default" : 1,
          "description" : "Integer code for the model to use for generation variation with voltage. Valid values are:\n\n1:Generator injects a constant kW at specified power factor.\n2:Generator is modeled as a constant admittance.\n3:Const kW, constant kV.  Somewhat like a conventional transmission power flow P-V generator.\n4:Const kW, Fixed Q (Q never varies)\n5:Const kW, Fixed Q(as a constant reactance)\n6:Compute load injection from User-written Model.(see usage of Xd, Xdp)\n7:Constant kW, kvar, but current-limited below Vminpu. Approximates a simple inverter. See also Balanced.",
          "title" : "Model",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "VMinpu" : {
          "type" : "number",
          "default" : 9.0000000000000002E-001,
          "description" : "Default = 0.90.  Minimum per unit voltage for which the Model is assumed to apply. Below this value, the load model reverts to a constant impedance model. For model 7, the current is limited to the value computed for constant power at Vminpu.",
          "title" : "VMinpu",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "VMaxpu" : {
          "type" : "number",
          "default" : 1.1000000000000001E+000,
          "description" : "Default = 1.10.  Maximum per unit voltage for which the Model is assumed to apply. Above this value, the load model reverts to a constant impedance model.",
          "title" : "VMaxpu",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch shape to use for yearly simulations.  Must be previously defined as a Loadshape object. If this is not specified, a constant value is assumed (no variation). If the generator is assumed to be ON continuously, specify Status=FIXED, or designate a curve that is 1.0 per unit at all times. Set to NONE to reset to no loadshape. Nominally for 8760 simulations.  If there are fewer points in the designated shape than the number of points in the solution, the curve is repeated.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch shape to use for daily simulations.  Must be previously defined as a Loadshape object of 24 hrs, typically.  If generator is assumed to be ON continuously, specify Status=FIXED, or designate a Loadshape object that is 1.0 per unit for all hours. Set to NONE to reset to no loadshape. ",
          "title" : "Daily",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Load shape to use for duty cycle dispatch simulations such as for wind generation. Must be previously defined as a Loadshape object. Typically would have time intervals less than 1 hr -- perhaps, in seconds. Set Status=Fixed to ignore Loadshape designation. Set to NONE to reset to no loadshape. Designate the number of points to solve using the Set Number=xxxx command. If there are fewer points in the actual shape, the shape is assumed to repeat.",
          "title" : "Duty",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "DispMode" : {
          "$ref" : "#/$defs/Generator/$defs/GeneratorDispatchMode",
          "default" : "Default",
          "description" : "{Default* | Loadlevel | Price } Default = Default. Dispatch mode. In default mode, gen is either always on or follows dispatch curve as specified. Otherwise, the gen comes on when either the global default load level (Loadshape \"default\") or the price level exceeds the dispatch value.",
          "title" : "DispMode",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "DispValue" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Dispatch value. \nIf = 0.0 (default) then Generator follow dispatch curves, if any. \nIf > 0  then Generator is ON only when either the price signal (in Price dispatch mode) exceeds this value or the active circuit load multiplier * \"default\" loadshape value * the default yearly growth factor exceeds this value.  Then the generator follows dispatch curves (duty, daily, or yearly), if any (see also Status).",
          "title" : "DispValue",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "={wye|LN|delta|LL}.  Default is wye.",
          "title" : "Conn",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "Status" : {
          "$ref" : "#/$defs/Generator/$defs/GeneratorStatus",
          "default" : "Variable",
          "description" : "={Fixed | Variable*}.  If Fixed, then dispatch multipliers do not apply. The generator is alway at full power when it is ON.  Default is Variable  (follows curves).",
          "title" : "Status",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Class" : {
          "type" : "integer",
          "default" : 1,
          "description" : "An arbitrary integer number representing the class of Generator so that Generator values may be segregated by class.",
          "title" : "Class",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "Vpu" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Per Unit voltage set point for Model = 3  (typical power flow model).  Default is 1.0. ",
          "title" : "Vpu",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "Maxkvar" : {
          "type" : "number",
          "description" : "Maximum kvar limit for Model = 3.  Defaults to twice the specified load kvar.  Always reset this if you change PF or kvar properties.",
          "title" : "Maxkvar",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "Minkvar" : {
          "type" : "number",
          "description" : "Minimum kvar limit for Model = 3. Enter a negative number if generator can absorb vars. Defaults to negative of Maxkvar.  Always reset this if you change PF or kvar properties.",
          "title" : "Minkvar",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "PVFactor" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Deceleration factor for P-V generator model (Model=3).  Default is 0.1. If the circuit converges easily, you may want to use a higher number such as 1.0. Use a lower number if solution diverges. Use Debugtrace=yes to create a file that will trace the convergence of a generator model.",
          "title" : "PVFactor",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "ForceOn" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No}  Forces generator ON despite requirements of other dispatch modes. Stays ON until this property is set to NO, or an internal algorithm cancels the forced ON state.",
          "title" : "ForceOn",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "kVA" : {
          "type" : "number",
          "description" : "kVA rating of electrical machine. Defaults to 1.2* kW if not specified. Applied to machine or inverter definition for Dynamics mode solutions. ",
          "title" : "kVA",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "Xd" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Per unit synchronous reactance of machine. Presently used only for Thevenin impedance for power flow calcs of user models (model=6). Typically use a value 0.4 to 1.0. Default is 1.0",
          "title" : "Xd",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 25
        },
        "Xdp" : {
          "type" : "number",
          "default" : 2.8000000000000003E-001,
          "description" : "Per unit transient reactance of the machine.  Used for Dynamics mode and Fault studies.  Default is 0.27.For user models, this value is used for the Thevenin/Norton impedance for Dynamics Mode.",
          "title" : "Xdp",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 26
        },
        "Xdpp" : {
          "type" : "number",
          "default" : 2.0000000000000001E-001,
          "description" : "Per unit subtransient reactance of the machine.  Used for Harmonics. Default is 0.20.",
          "title" : "Xdpp",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 27
        },
        "H" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Per unit mass constant of the machine.  MW-sec/MVA.  Default is 1.0.",
          "title" : "H",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 28
        },
        "D" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Damping constant.  Usual range is 0 to 4. Default is 1.0.  Adjust to get damping",
          "title" : "D",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 29
        },
        "UserModel" : {
          "type" : "string",
          "description" : "Name of DLL containing user-written model, which computes the terminal currents for Dynamics studies, overriding the default model.  Set to \"none\" to negate previous setting.",
          "title" : "UserModel",
          "format" : "file-path",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 30
        },
        "UserData" : {
          "type" : "string",
          "description" : "String (in quotes or parentheses) that gets passed to user-written model for defining the data required for that model.",
          "title" : "UserData",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 31
        },
        "ShaftModel" : {
          "type" : "string",
          "description" : "Name of user-written DLL containing a Shaft model, which models the prime mover and determines the power on the shaft for Dynamics studies. Models additional mass elements other than the single-mass model in the DSS default model. Set to \"none\" to negate previous setting.",
          "title" : "ShaftModel",
          "format" : "file-path",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 32
        },
        "ShaftData" : {
          "type" : "string",
          "description" : "String (in quotes or parentheses) that gets passed to user-written shaft dynamic model for defining the data for that model.",
          "title" : "ShaftData",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 33
        },
        "DutyStart" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Starting time offset [hours] into the duty cycle shape for this generator, defaults to 0",
          "units" : "hour",
          "title" : "DutyStart",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 34
        },
        "DebugTrace" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No }  Default is no.  Turn this on to capture the progress of the generator model for each iteration.  Creates a separate file for each generator named \"GEN_name.csv\".",
          "title" : "DebugTrace",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 35
        },
        "Balanced" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No*} Default is No.  For Model=7, force balanced current only for 3-phase generators. Force zero- and negative-sequence to zero.",
          "title" : "Balanced",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 36
        },
        "XRdp" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Default is 20. X/R ratio for Xdp property for FaultStudy and Dynamic modes.",
          "title" : "XRdp",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 37
        },
        "UseFuel" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | *No}. Activates the use of fuel for the operation of the generator. When the fuel level reaches the reserve level, the generator stops until it gets refueled. By default, the generator is connected to a continuous fuel supply, Use this mode to mimic dependency on fuel level for different generation technologies.",
          "title" : "UseFuel",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 38
        },
        "FuelkWh" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "{*0}Is the nominal level of fuel for the generator (kWh). It only applies if UseFuel = Yes/True",
          "title" : "FuelkWh",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 39
        },
        "pctFuel" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "It is a number between 0 and 100 representing the current amount of fuel available in percentage of FuelkWh. It only applies if UseFuel = Yes/True",
          "title" : "%Fuel",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 40
        },
        "pctReserve" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "It is a number between 0 and 100 representing the reserve level in percentage of FuelkWh. It only applies if UseFuel = Yes/True",
          "title" : "%Reserve",
          "$dssPropertyIndex" : 41,
          "$dssPropertyOrder" : 41
        },
        "Refuel" : {
          "type" : "boolean",
          "default" : false,
          "description" : "It is a boolean value (Yes/True, No/False) that can be used to manually refuel the generator when needed. It only applies if UseFuel = Yes/True",
          "writeOnly" : true,
          "title" : "Refuel",
          "$dssPropertyIndex" : 42,
          "$dssPropertyOrder" : 47
        },
        "DynamicEq" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "The name of the dynamic equation (DynamicExp) that will be used for defining the dynamic behavior of the generator. if not defined, the generator dynamics will follow the built-in dynamic equation.",
          "title" : "DynamicEq",
          "$dssPropertyIndex" : 43,
          "$dssPropertyOrder" : 42
        },
        "DynOut" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "The name of the variables within the Dynamic equation that will be used to govern the generator dynamics.This generator model requires 2 outputs from the dynamic equation: \n\n1. Shaft speed (velocity) relative to synchronous speed.\n2. Shaft, or power, angle (relative to synchronous reference frame).\n\nThe output variables need to be defined in tha strict order.",
          "title" : "DynOut",
          "$dssPropertyIndex" : 44,
          "$dssPropertyOrder" : 43
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "defaultgen",
          "description" : "Name of harmonic voltage or current spectrum for this generator. Voltage behind Xd\" for machine - default. Current injection for inverter. Default value is \"default\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 45,
          "$dssPropertyOrder" : 44
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 46,
          "$dssPropertyOrder" : 45
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 47,
          "$dssPropertyOrder" : 46
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 48,
          "$dssPropertyOrder" : 1
        },
        "DynInit" : {
          "$ref" : "#/$defs/DynInitType",
          "$dssPropertyOrder" : 49
        }
      },
      "oneOf" : [
        {
          "title" : "kW, pf",
          "type" : "object",
          "properties" : {
            "kW" : {
              "type" : "number",
              "default" : 1.0000000000000000E+003,
              "description" : "Total base kW for the Generator.  A positive value denotes power coming OUT of the element, \nwhich is the opposite of a load. This value is modified depending on the dispatch mode. Unaffected by the global load multiplier and growth curves. If you want there to be more generation, you must add more generators or change this value.",
              "title" : "kW",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "PF" : {
              "type" : "number",
              "default" : 8.8000000000000000E-001,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Generator power factor. Default is 0.80. Enter negative for leading powerfactor (when kW and kvar have opposite signs.)\nA positive power factor for a generator signifies that the generator produces vars \nas is typical for a synchronous generator.  Induction machines would be \nspecified with a negative power factor.",
              "title" : "PF",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "kW",
            "PF"
          ]
        },
        {
          "title" : "kW, kvar",
          "type" : "object",
          "properties" : {
            "kW" : {
              "type" : "number",
              "default" : 1.0000000000000000E+003,
              "description" : "Total base kW for the Generator.  A positive value denotes power coming OUT of the element, \nwhich is the opposite of a load. This value is modified depending on the dispatch mode. Unaffected by the global load multiplier and growth curves. If you want there to be more generation, you must add more generators or change this value.",
              "title" : "kW",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            },
            "kvar" : {
              "type" : "number",
              "description" : "Specify the base kvar.  Alternative to specifying the power factor.  Side effect:  the power factor value is altered to agree based on present value of kW.",
              "title" : "kvar",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 7
            }
          },
          "required" : [
            "kW",
            "kvar"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1",
        "kV"
      ],
      "$defs" : {
        "GeneratorModel" : {
          "title" : "Generator: Model",
          "type" : "integer",
          "enum" : [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "$dssFullEnum" : [
            [
              "ConstantPQ",
              "Constant PQ",
              1
            ],
            [
              "ConstantZ",
              "Constant Z",
              2
            ],
            [
              "ConstantPV",
              "Constant P|V|",
              3
            ],
            [
              "ConstantP_FixedQ",
              "Constant P, fixed Q",
              4
            ],
            [
              "ConstantP_FixedX",
              "Constant P, fixed X",
              5
            ],
            [
              "UserModel",
              "User model",
              6
            ],
            [
              "ApproxInverter",
              "Approximate inverter model",
              7
            ]
          ]
        },
        "GeneratorDispatchMode" : {
          "title" : "Generator: Dispatch Mode",
          "type" : "string",
          "enum" : [
            "Default",
            "LoadLevel",
            "Price"
          ],
          "$dssFullEnum" : [
            [
              "Default",
              "Default",
              0
            ],
            [
              "LoadLevel",
              "LoadLevel",
              1
            ],
            [
              "Price",
              "Price",
              2
            ]
          ]
        },
        "GeneratorStatus" : {
          "title" : "Generator: Status",
          "type" : "string",
          "enum" : [
            "Variable",
            "Fixed"
          ],
          "$dssFullEnum" : [
            [
              "Variable",
              "Variable",
              0
            ],
            [
              "Fixed",
              "Fixed",
              1
            ]
          ]
        }
      }
    },
    "GeneratorList" : {
      "title" : "GeneratorList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Generator"
      }
    },
    "GeneratorContainer" : {
      "default" : [
      ],
      "title" : "GeneratorContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/GeneratorList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "GenDispatcher" : {
      "title" : "GenDispatcher",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line or transformer, which the control is monitoring. There is no default; must be specified.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the GenDispatcher control is connected. 1 or 2, typically.  Default is 1. Make sure you have the direction on the power matching the sign of kWLimit.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kWLimit" : {
          "type" : "number",
          "default" : 8.0000000000000000E+003,
          "description" : "kW Limit for the monitored element. The generators are dispatched to hold the power in band.",
          "title" : "kWLimit",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "kWBand" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Bandwidth (kW) of the dead band around the target limit.No dispatch changes are attempted if the power in the monitored terminal stays within this band.",
          "title" : "kWBand",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "kvarLimit" : {
          "type" : "number",
          "default" : 4.0000000000000000E+003,
          "description" : "Max kvar to be delivered through the element.  Uses same dead band as kW.",
          "title" : "kvarLimit",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "GenList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of generators to be dispatched.  If not specified, all generators in the circuit are assumed dispatchable.",
          "title" : "GenList",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Weights" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "GenList",
          "description" : "Array of proportional weights corresponding to each generator in the GenList. The needed kW to get back to center band is dispatched to each generator according to these weights. Default is to set all weights to 1.0.",
          "title" : "Weights",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Element"
      ]
    },
    "GenDispatcherList" : {
      "title" : "GenDispatcherList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/GenDispatcher"
      }
    },
    "GenDispatcherContainer" : {
      "default" : [
      ],
      "title" : "GenDispatcherContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/GenDispatcherList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Storage" : {
      "title" : "Storage",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases, this Storage element.  Power is evenly divided among phases.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Bus to which the Storage element is connected.  May include specific node specification.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kV" : {
          "type" : "number",
          "default" : 1.2470000000000001E+001,
          "minimum" : 0,
          "description" : "Nominal rated (1.0 per unit) voltage, kV, for Storage element. For 2- and 3-phase Storage elements, specify phase-phase kV. Otherwise, specify actual kV across each branch of the Storage element. \n\nIf wye (star), specify phase-neutral kV. \n\nIf delta or phase-phase connected, specify phase-phase kV.",
          "units" : "kV",
          "title" : "kV",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "={wye|LN|delta|LL}.  Default is wye.",
          "title" : "Conn",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "kW" : {
          "type" : "number",
          "default" : -2.5000000000000000E-001,
          "description" : "Get/set the requested kW value. Final kW is subjected to the inverter ratings. A positive value denotes power coming OUT of the element, which is the opposite of a Load element. A negative value indicates the Storage element is in Charging state. This value is modified internally depending on the dispatch mode.",
          "units" : "kW",
          "title" : "kW",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "kVA" : {
          "type" : "number",
          "default" : 2.5000000000000000E+001,
          "description" : "Indicates the inverter nameplate capability (in kVA). Used as the base for Dynamics mode and Harmonics mode values.",
          "units" : "kVA",
          "title" : "kVA",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "pctCutIn" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Cut-in power as a percentage of inverter kVA rating. It is the minimum DC power necessary to turn the inverter ON when it is OFF. Must be greater than or equal to %CutOut. Defaults to 2 for PVSystems and 0 for Storage elements which means that the inverter state will be always ON for this element.",
          "title" : "%CutIn",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "pctCutOut" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Cut-out power as a percentage of inverter kVA rating. It is the minimum DC power necessary to keep the inverter ON. Must be less than or equal to %CutIn. Defaults to 0, which means that, once ON, the inverter state will be always ON for this element.",
          "title" : "%CutOut",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "EffCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "An XYCurve object, previously defined, that describes the PER UNIT efficiency vs PER UNIT of rated kVA for the inverter. Power at the AC side of the inverter is discounted by the multiplier obtained from this curve.",
          "title" : "EffCurve",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "VarFollowInverter" : {
          "type" : "boolean",
          "default" : false,
          "description" : "Boolean variable (Yes|No) or (True|False). Defaults to False, which indicates that the reactive power generation/absorption does not respect the inverter status.When set to True, the reactive power generation/absorption will cease when the inverter status is off, due to DC kW dropping below %CutOut.  The reactive power generation/absorption will begin again when the DC kW is above %CutIn.  When set to False, the Storage will generate/absorb reactive power regardless of the status of the inverter.",
          "title" : "VarFollowInverter",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "kvarMax" : {
          "type" : "number",
          "description" : "Indicates the maximum reactive power GENERATION (un-signed numerical variable in kvar) for the inverter. Defaults to kVA rating of the inverter.",
          "title" : "kvarMax",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "kvarMaxAbs" : {
          "type" : "number",
          "description" : "Indicates the maximum reactive power ABSORPTION (un-signed numerical variable in kvar) for the inverter. Defaults to kvarMax.",
          "title" : "kvarMaxAbs",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "WattPriority" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/No*/True/False} Set inverter to watt priority instead of the default var priority.",
          "title" : "WattPriority",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "PFPriority" : {
          "type" : "boolean",
          "default" : false,
          "description" : "If set to true, priority is given to power factor and WattPriority is neglected. It works only if operating in either constant PF or constant kvar modes. Defaults to False.",
          "title" : "PFPriority",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "pctPMinNoVars" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Minimum active power as percentage of kWrated under which there is no vars production/absorption. Defaults to 0 (disabled).",
          "title" : "%PMinNoVars",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "pctPMinkvarMax" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Minimum active power as percentage of kWrated that allows the inverter to produce/absorb reactive power up to its maximum reactive power, which can be either kvarMax or kvarMaxAbs, depending on the current operation quadrant. Defaults to 0 (disabled).",
          "title" : "%PMinkvarMax",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "pctkWRated" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Upper limit on active power as a percentage of kWrated. Defaults to 100 (disabled).",
          "title" : "%kWRated",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "kWhRated" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "description" : "Rated Storage capacity in kWh. Default is 50.",
          "units" : "kWh",
          "title" : "kWhRated",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "kWhStored" : {
          "type" : "number",
          "minimum" : 0,
          "description" : "Present amount of energy stored, kWh. Default is same as kWhrated.",
          "units" : "kWh",
          "title" : "kWhStored",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "pctStored" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Present amount of energy stored, % of rated kWh. Default is 100.",
          "title" : "%Stored",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "pctReserve" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Percentage of rated kWh Storage capacity to be held in reserve for normal operation. Default = 20. \nThis is treated as the minimum energy discharge level unless there is an emergency. For emergency operation set this property lower. Cannot be less than zero.",
          "title" : "%Reserve",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "State" : {
          "$ref" : "#/$defs/Storage/$defs/StorageState",
          "default" : "Idling",
          "description" : "{IDLING | CHARGING | DISCHARGING}  Get/Set present operational state. In DISCHARGING mode, the Storage element acts as a generator and the kW property is positive. The element continues discharging at the scheduled output power level until the Storage reaches the reserve value. Then the state reverts to IDLING. In the CHARGING state, the Storage element behaves like a Load and the kW property is negative. The element continues to charge until the max Storage kWh is reached and then switches to IDLING state. In IDLING state, the element draws the idling losses plus the associated inverter losses.",
          "title" : "State",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 26
        },
        "pctDischarge" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Discharge rate (output power) in percentage of rated kW. Default = 100.",
          "title" : "%Discharge",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 27
        },
        "pctCharge" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Charging rate (input power) in percentage of rated kW. Default = 100.",
          "title" : "%Charge",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 28
        },
        "pctEffCharge" : {
          "type" : "number",
          "default" : 9.0000000000000000E+001,
          "description" : "Percentage efficiency for CHARGING the Storage element. Default = 90.",
          "title" : "%EffCharge",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 29
        },
        "pctEffDischarge" : {
          "type" : "number",
          "default" : 9.0000000000000000E+001,
          "description" : "Percentage efficiency for DISCHARGING the Storage element. Default = 90.",
          "title" : "%EffDischarge",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 30
        },
        "pctIdlingkW" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Percentage of rated kW consumed by idling losses. Default = 1.",
          "title" : "%IdlingkW",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 31
        },
        "pctR" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Equivalent percentage internal resistance, ohms. Default is 0. Placed in series with internal voltage source for harmonics and dynamics modes. Use a combination of %IdlingkW, %EffCharge and %EffDischarge to account for losses in power flow modes.",
          "title" : "%R",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 32
        },
        "pctX" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "description" : "Equivalent percentage internal reactance, ohms. Default is 50%. Placed in series with internal voltage source for harmonics and dynamics modes. (Limits fault current to 2 pu.",
          "title" : "%X",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 33
        },
        "Model" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Integer code (default=1) for the model to be used for power output variation with voltage. Valid values are:\n\n1:Storage element injects/absorbs a CONSTANT power.\n2:Storage element is modeled as a CONSTANT IMPEDANCE.\n3:Compute load injection from User-written Model.",
          "title" : "Model",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 34
        },
        "VMinpu" : {
          "type" : "number",
          "default" : 9.0000000000000002E-001,
          "description" : "Default = 0.90.  Minimum per unit voltage for which the Model is assumed to apply. Below this value, the load model reverts to a constant impedance model.",
          "title" : "VMinpu",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 35
        },
        "VMaxpu" : {
          "type" : "number",
          "default" : 1.1000000000000001E+000,
          "description" : "Default = 1.10.  Maximum per unit voltage for which the Model is assumed to apply. Above this value, the load model reverts to a constant impedance model.",
          "title" : "VMaxpu",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 36
        },
        "Balanced" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No*} Default is No. Force balanced current only for 3-phase Storage. Forces zero- and negative-sequence to zero. ",
          "title" : "Balanced",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 37
        },
        "LimitCurrent" : {
          "type" : "boolean",
          "default" : false,
          "description" : "Limits current magnitude to Vminpu value for both 1-phase and 3-phase Storage similar to Generator Model 7. For 3-phase, limits the positive-sequence current but not the negative-sequence.",
          "title" : "LimitCurrent",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 38
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch shape to use for yearly simulations.  Must be previously defined as a Loadshape object. If this is not specified, the Daily dispatch shape, if any, is repeated during Yearly solution modes. In the default dispatch mode, the Storage element uses this loadshape to trigger State changes.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 39
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch shape to use for daily simulations.  Must be previously defined as a Loadshape object of 24 hrs, typically.  In the default dispatch mode, the Storage element uses this loadshape to trigger State changes.",
          "title" : "Daily",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 40
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Load shape to use for duty cycle dispatch simulations such as for solar ramp rate studies. Must be previously defined as a Loadshape object. \n\nTypically would have time intervals of 1-5 seconds. \n\nDesignate the number of points to solve using the Set Number=xxxx command. If there are fewer points in the actual shape, the shape is assumed to repeat.",
          "title" : "Duty",
          "$dssPropertyIndex" : 41,
          "$dssPropertyOrder" : 41
        },
        "DispMode" : {
          "$ref" : "#/$defs/Storage/$defs/StorageDispatchMode",
          "default" : "Default",
          "description" : "{DEFAULT | FOLLOW | EXTERNAL | LOADLEVEL | PRICE } Default = \"DEFAULT\". Dispatch mode. \n\nIn DEFAULT mode, Storage element state is triggered to discharge or charge at the specified rate by the loadshape curve corresponding to the solution mode. \n\nIn FOLLOW mode the kW output of the Storage element follows the active loadshape multiplier until Storage is either exhausted or full. The element discharges for positive values and charges for negative values.  The loadshape is based on rated kW. \n\nIn EXTERNAL mode, Storage element state is controlled by an external Storagecontroller. This mode is automatically set if this Storage element is included in the element list of a StorageController element. \n\nFor the other two dispatch modes, the Storage element state is controlled by either the global default Loadlevel value or the price level. ",
          "title" : "DispMode",
          "$dssPropertyIndex" : 42,
          "$dssPropertyOrder" : 42
        },
        "DischargeTrigger" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Dispatch trigger value for discharging the Storage. \nIf = 0.0 the Storage element state is changed by the State command or by a StorageController object. \nIf <> 0  the Storage element state is set to DISCHARGING when this trigger level is EXCEEDED by either the specified Loadshape curve value or the price signal or global Loadlevel value, depending on dispatch mode. See State property.",
          "title" : "DischargeTrigger",
          "$dssPropertyIndex" : 43,
          "$dssPropertyOrder" : 43
        },
        "ChargeTrigger" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Dispatch trigger value for charging the Storage. \n\nIf = 0.0 the Storage element state is changed by the State command or StorageController object.  \n\nIf <> 0  the Storage element state is set to CHARGING when this trigger level is GREATER than either the specified Loadshape curve value or the price signal or global Loadlevel value, depending on dispatch mode. See State property.",
          "title" : "ChargeTrigger",
          "$dssPropertyIndex" : 44,
          "$dssPropertyOrder" : 44
        },
        "TimeChargeTrig" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Time of day in fractional hours (0230 = 2.5) at which Storage element will automatically go into charge state. Default is 2.0.  Enter a negative time value to disable this feature.",
          "minimum" : 0,
          "exclusiveMaximum" : 24,
          "units" : "hour",
          "title" : "TimeChargeTrig",
          "$dssPropertyIndex" : 45,
          "$dssPropertyOrder" : 45
        },
        "Class" : {
          "type" : "integer",
          "default" : 1,
          "description" : "An arbitrary integer number representing the class of Storage element so that Storage values may be segregated by class.",
          "title" : "Class",
          "$dssPropertyIndex" : 46,
          "$dssPropertyOrder" : 46
        },
        "DynaDLL" : {
          "type" : "string",
          "description" : "Name of DLL containing user-written dynamics model, which computes the terminal currents for Dynamics-mode simulations, overriding the default model.  Set to \"none\" to negate previous setting. This DLL has a simpler interface than the UserModel DLL and is only used for Dynamics mode.",
          "title" : "DynaDLL",
          "format" : "file-path",
          "$dssPropertyIndex" : 47,
          "$dssPropertyOrder" : 47
        },
        "DynaData" : {
          "type" : "string",
          "description" : "String (in quotes or parentheses if necessary) that gets passed to the user-written dynamics model Edit function for defining the data required for that model.",
          "title" : "DynaData",
          "$dssPropertyIndex" : 48,
          "$dssPropertyOrder" : 48
        },
        "UserModel" : {
          "type" : "string",
          "description" : "Name of DLL containing user-written model, which computes the terminal currents for both power flow and dynamics, overriding the default model.  Set to \"none\" to negate previous setting.",
          "title" : "UserModel",
          "format" : "file-path",
          "$dssPropertyIndex" : 49,
          "$dssPropertyOrder" : 49
        },
        "UserData" : {
          "type" : "string",
          "description" : "String (in quotes or parentheses) that gets passed to user-written model for defining the data required for that model.",
          "title" : "UserData",
          "$dssPropertyIndex" : 50,
          "$dssPropertyOrder" : 50
        },
        "DebugTrace" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No }  Default is no.  Turn this on to capture the progress of the Storage model for each iteration.  Creates a separate file for each Storage element named \"Storage_name.csv\".",
          "title" : "DebugTrace",
          "$dssPropertyIndex" : 51,
          "$dssPropertyOrder" : 51
        },
        "kVDC" : {
          "type" : "number",
          "default" : 8.0000000000000000E+000,
          "description" : "Indicates the rated voltage (kV) at the input of the inverter while the storage is discharging. The value is normally greater or equal to the kV base of the Storage device. It is used for dynamics simulation ONLY.",
          "units" : "kV",
          "title" : "kVDC",
          "$dssPropertyIndex" : 52,
          "$dssPropertyOrder" : 52
        },
        "Kp" : {
          "type" : "number",
          "default" : 1.0000000000000000E-002,
          "description" : "It is the proportional gain for the PI controller within the inverter. Use it to modify the controller response in dynamics simulation mode.",
          "title" : "Kp",
          "$dssPropertyIndex" : 53,
          "$dssPropertyOrder" : 53
        },
        "PITol" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "It is the tolerance (%) for the closed loop controller of the inverter. For dynamics simulation mode.",
          "title" : "PITol",
          "$dssPropertyIndex" : 54,
          "$dssPropertyOrder" : 54
        },
        "SafeVoltage" : {
          "type" : "number",
          "default" : 8.0000000000000000E+001,
          "description" : "Indicates the voltage level (%) respect to the base voltage level for which the Inverter will operate. If this threshold is violated, the Inverter will enter safe mode (OFF). For dynamic simulation. By default is 80%.",
          "title" : "SafeVoltage",
          "$dssPropertyIndex" : 55,
          "$dssPropertyOrder" : 55
        },
        "SafeMode" : {
          "type" : "boolean",
          "description" : "(Read only) Indicates whether the inverter entered (Yes) or not (No) into Safe Mode.",
          "readOnly" : true,
          "title" : "SafeMode",
          "$dssPropertyIndex" : 56,
          "$dssPropertyOrder" : 56
        },
        "DynamicEq" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "The name of the dynamic equation (DynamicExp) that will be used for defining the dynamic behavior of the generator. If not defined, the generator dynamics will follow the built-in dynamic equation.",
          "title" : "DynamicEq",
          "$dssPropertyIndex" : 57,
          "$dssPropertyOrder" : 57
        },
        "DynOut" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "The name of the variables within the Dynamic equation that will be used to govern the Storage dynamics. This Storage model requires 1 output from the dynamic equation:\n\n    1. Current.\n\nThe output variables need to be defined in the same order.",
          "title" : "DynOut",
          "$dssPropertyIndex" : 58,
          "$dssPropertyOrder" : 58
        },
        "ControlMode" : {
          "$ref" : "#/$defs/InverterControlMode",
          "default" : "GFL",
          "description" : "Defines the control mode for the inverter. It can be one of {GFM | GFL*}. By default it is GFL (Grid Following Inverter). Use GFM (Grid Forming Inverter) for energizing islanded microgrids, but, if the device is connected to the grid, it is highly recommended to use GFL.\n\nGFM control mode disables any control action set by the InvControl device.",
          "title" : "ControlMode",
          "$dssPropertyIndex" : 59,
          "$dssPropertyOrder" : 59
        },
        "AmpLimit" : {
          "type" : "number",
          "description" : "The current limiter per phase for the IBR when operating in GFM mode. This limit is imposed to prevent the IBR to enter into Safe Mode when reaching the IBR power ratings.\nOnce the IBR reaches this value, it remains there without moving into Safe Mode. This value needs to be set lower than the IBR Amps rating.",
          "title" : "AmpLimit",
          "$dssPropertyIndex" : 60,
          "$dssPropertyOrder" : 60
        },
        "AmpLimitGain" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "Use it for fine tunning the current limiter when active, by default is 0.8, it has to be a value between 0.1 and 1. This value allows users to fine tune the IBRs current limiter to match with the user requirements.",
          "title" : "AmpLimitGain",
          "$dssPropertyIndex" : 61,
          "$dssPropertyOrder" : 61
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of harmonic voltage or current spectrum for this Storage element. Current injection is assumed for inverter. Default value is \"default\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 62,
          "$dssPropertyOrder" : 62
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 63,
          "$dssPropertyOrder" : 63
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 64,
          "$dssPropertyOrder" : 64
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 65,
          "$dssPropertyOrder" : 1
        },
        "DynInit" : {
          "$ref" : "#/$defs/DynInitType",
          "$dssPropertyOrder" : 66
        }
      },
      "oneOf" : [
        {
          "title" : "kWRated, PF",
          "type" : "object",
          "properties" : {
            "kWRated" : {
              "type" : "number",
              "default" : 2.5000000000000000E+001,
              "description" : "kW rating of power output. Base for Loadshapes when DispMode=Follow. Sets kVA property if it has not been specified yet. Defaults to 25.",
              "units" : "kW",
              "title" : "kWRated",
              "$dssPropertyIndex" : 19,
              "$dssPropertyOrder" : 20
            },
            "PF" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Get/set the requested PF value. Final PF is subjected to the inverter ratings. Sets inverter to operate in constant PF mode. Nominally, the power factor for discharging (acting as a generator). Default is 1.0. \n\nEnter negative for leading power factor (when kW and kvar have opposite signs.)\n\nA positive power factor signifies kw and kvar at the same direction.",
              "title" : "PF",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "kWRated",
            "PF"
          ]
        },
        {
          "title" : "kWRated, kvar",
          "type" : "object",
          "properties" : {
            "kWRated" : {
              "type" : "number",
              "default" : 2.5000000000000000E+001,
              "description" : "kW rating of power output. Base for Loadshapes when DispMode=Follow. Sets kVA property if it has not been specified yet. Defaults to 25.",
              "units" : "kW",
              "title" : "kWRated",
              "$dssPropertyIndex" : 19,
              "$dssPropertyOrder" : 20
            },
            "kvar" : {
              "type" : "number",
              "default" : -0.0000000000000000E+000,
              "description" : "Get/set the requested kvar value. Final kvar is subjected to the inverter ratings. Sets inverter to operate in constant kvar mode.",
              "units" : "kvar",
              "title" : "kvar",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 7
            }
          },
          "required" : [
            "kWRated",
            "kvar"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1",
        "kV"
      ],
      "$defs" : {
        "StorageState" : {
          "title" : "Storage: State",
          "type" : "string",
          "enum" : [
            "Charging",
            "Idling",
            "Discharging"
          ],
          "$dssFullEnum" : [
            [
              "Charging",
              "Charging",
              -1
            ],
            [
              "Idling",
              "Idling",
              0
            ],
            [
              "Discharging",
              "Discharging",
              1
            ]
          ]
        },
        "StorageDispatchMode" : {
          "title" : "Storage: Dispatch Mode",
          "type" : "string",
          "enum" : [
            "Default",
            "LoadLevel",
            "Price",
            "External",
            "Follow"
          ],
          "$dssFullEnum" : [
            [
              "Default",
              "Default",
              0
            ],
            [
              "LoadLevel",
              "LoadLevel",
              1
            ],
            [
              "Price",
              "Price",
              2
            ],
            [
              "External",
              "External",
              3
            ],
            [
              "Follow",
              "Follow",
              4
            ]
          ]
        }
      }
    },
    "StorageList" : {
      "title" : "StorageList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Storage"
      }
    },
    "StorageContainer" : {
      "default" : [
      ],
      "title" : "StorageContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/StorageList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "StorageController" : {
      "title" : "StorageController",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line or transformer, which the control is monitoring. There is no default; Must be specified.In \"Local\" control mode, is the name of the load that will be managed by the storage device, which should be installed at the same bus.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the StorageController control is connected. 1 or 2, typically.  Default is 1. Make sure to select the proper direction on the power for the respective dispatch mode.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "MonPhase" : {
          "$ref" : "#/$defs/MonitoredPhase",
          "default" : "max",
          "description" : "Number of the phase being monitored or one of {AVG | MAX | MIN} for all phases. Default=MAX. Must be less than the number of phases. Used in PeakShave, Follow, Support and I-PeakShave discharging modes and in PeakShaveLow, I-PeakShaveLow charging modes. For modes based on active power measurements, the value used by the control is the monitored one multiplied by the number of phases of the monitored element.",
          "title" : "MonPhase",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "kWTarget" : {
          "type" : "number",
          "default" : 8.0000000000000000E+003,
          "description" : "kW/kamps target for Discharging. The Storage element fleet is dispatched to try to hold the power/current in band at least until the Storage is depleted. The selection of power or current depends on the Discharge mode (PeakShave->kW, I-PeakShave->kamps).",
          "title" : "kWTarget",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "kWTargetLow" : {
          "type" : "number",
          "default" : 4.0000000000000000E+003,
          "description" : "kW/kamps target for Charging. The Storage element fleet is dispatched to try to hold the power/current in band at least until the Storage is fully charged. The selection of power or current depends on the charge mode (PeakShavelow->kW, I-PeakShavelow->kamps).",
          "title" : "kWTargetLow",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "pctkWBand" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Bandwidth (% of Target kW/kamps) of the dead band around the kW/kamps target value. Default is 2% (+/-1%).No dispatch changes are attempted if the power in the monitored terminal stays within this band.",
          "title" : "%kWBand",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "pctkWBandLow" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Bandwidth (% of kWTargetLow) of the dead band around the kW/kamps low target value. Default is 2% (+/-1%).No charging is attempted if the power in the monitored terminal stays within this band.",
          "title" : "%kWBandLow",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 8
        },
        "ElementList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of Storage elements to be controlled.  If not specified, all Storage elements in the circuit not presently dispatched by another controller are assumed dispatched by this controller.",
          "title" : "ElementList",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 9
        },
        "Weights" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "ElementList",
          "description" : "Array of proportional weights corresponding to each Storage element in the ElementList. The needed kW or kvar to get back to center band is dispatched to each Storage element according to these weights. Default is to set all weights to 1.0.",
          "title" : "Weights",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 10
        },
        "ModeDischarge" : {
          "$ref" : "#/$defs/StorageController/$defs/StorageControllerDischargeMode",
          "default" : "Peakshave",
          "description" : "{PeakShave* | Follow | Support | Loadshape | Time | Schedule | I-PeakShave} Mode of operation for the DISCHARGE FUNCTION of this controller. \n\nIn PeakShave mode (Default), the control attempts to discharge Storage to keep power in the monitored element below the kWTarget. \n\nIn Follow mode, the control is triggered by time and resets the kWTarget value to the present monitored element power. It then attempts to discharge Storage to keep power in the monitored element below the new kWTarget. See TimeDischargeTrigger.\n\nIn Support mode, the control operates oppositely of PeakShave mode: Storage is discharged to keep kW power output up near the target. \n\nIn Loadshape mode, both charging and discharging precisely follows the per unit loadshape. Storage is discharged when the loadshape value is positive. \n\nIn Time mode, the Storage discharge is turned on at the specified %RatekW at the specified discharge trigger time in fractional hours.\n\nIn Schedule mode, the Tup, TFlat, and Tdn properties specify the up ramp duration, flat duration, and down ramp duration for the schedule. The schedule start time is set by TimeDischargeTrigger and the rate of discharge for the flat part is determined by %RatekW.\n\nIn I-PeakShave mode, the control attempts to discharge Storage to keep current in the monitored element below the target given in k-amps (thousands of amps), when this control mode is active, the property kWTarget will be expressed in k-amps. ",
          "title" : "ModeDischarge",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 11
        },
        "ModeCharge" : {
          "$ref" : "#/$defs/StorageController/$defs/StorageControllerChargeMode",
          "default" : "Time",
          "description" : "{Loadshape | Time* | PeakShaveLow | I-PeakShaveLow} Mode of operation for the CHARGE FUNCTION of this controller. \n\nIn Loadshape mode, both charging and discharging precisely follows the per unit loadshape. Storage is charged when the loadshape value is negative. \n\nIn Time mode, the Storage charging FUNCTION is triggered at the specified %RateCharge at the specified charge trigger time in fractional hours.\n\nIn PeakShaveLow mode, the charging operation will charge the Storage fleet when the power at a monitored element is below a specified KW target (kWTarget_low). The Storage will charge as much power as necessary to keep the power within the deadband around kWTarget_low.\n\nIn I-PeakShaveLow mode, the charging operation will charge the Storage fleet when the current (Amps) at a monitored element is below a specified amps target (kWTarget_low). The Storage will charge as much power as necessary to keep the amps within the deadband around kWTarget_low. When this control mode is active, the property kWTarget_low will be expressed in k-amps and all the other parameters will be adjusted to match the amps (current) control criteria.",
          "title" : "ModeCharge",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 12
        },
        "TimeDischargeTrigger" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Default time of day (hr) for initiating Discharging of the fleet. During Follow or Time mode discharging is triggered at a fixed time each day at this hour. If Follow mode, Storage will be discharged to attempt to hold the load at or below the power level at the time of triggering. In Time mode, the discharge is based on the %RatekW property value. Set this to a negative value to ignore. Default is 12.0 for Follow mode; otherwise it is -1 (ignored). ",
          "title" : "TimeDischargeTrigger",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 13
        },
        "TimeChargeTrigger" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Default time of day (hr) for initiating charging in Time control mode. Set this to a negative value to ignore. Default is 2.0.  (0200).When this value is >0 the Storage fleet is set to charging at this time regardless of other control criteria to make sure Storage is topped off for the next discharge cycle.",
          "title" : "TimeChargeTrigger",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 14
        },
        "pctRatekW" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Sets the kW discharge rate in % of rated capacity for each element of the fleet. Applies to TIME control mode, SCHEDULE mode, or anytime discharging is triggered by time.",
          "title" : "%RatekW",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 15
        },
        "pctRateCharge" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Sets the kW charging rate in % of rated capacity for each element of the fleet. Applies to TIME control mode and anytime charging mode is entered due to a time trigger.",
          "title" : "%RateCharge",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 16
        },
        "pctReserve" : {
          "type" : "number",
          "default" : 2.5000000000000000E+001,
          "description" : "Use this property to change the % reserve for each Storage element under control of this controller. This might be used, for example, to allow deeper discharges of Storage or in case of emergency operation to use the remainder of the Storage element.",
          "title" : "%Reserve",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 17
        },
        "kWhTotal" : {
          "type" : "number",
          "description" : "(Read only). Total rated kWh energy Storage capacity of Storage elements controlled by this controller.",
          "readOnly" : true,
          "title" : "kWhTotal",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 18
        },
        "kWTotal" : {
          "type" : "number",
          "description" : "(Read only). Total rated kW power capacity of Storage elements controlled by this controller.",
          "readOnly" : true,
          "title" : "kWTotal",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 19
        },
        "kWhActual" : {
          "type" : "number",
          "description" : "(Read only). Actual kWh stored of all controlled Storage elements. ",
          "readOnly" : true,
          "title" : "kWhActual",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 20
        },
        "kWActual" : {
          "type" : "number",
          "description" : "(Read only). Actual kW output of all controlled Storage elements. ",
          "readOnly" : true,
          "title" : "kWActual",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 21
        },
        "kWNeed" : {
          "type" : "number",
          "description" : "(Read only). KW needed to meet target.",
          "readOnly" : true,
          "title" : "kWNeed",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 22
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch loadshape object, If any, for Yearly solution Mode.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 23
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch loadshape object, If any, for Daily solution mode.",
          "title" : "Daily",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 24
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch loadshape object, If any, for Dutycycle solution mode.",
          "title" : "Duty",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 25
        },
        "EventLog" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True | No/False} Default is No. Log control actions to Eventlog.",
          "title" : "EventLog",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 26
        },
        "InhibitTime" : {
          "type" : "integer",
          "default" : 5,
          "minimum" : 0,
          "description" : "Hours (integer) to inhibit Discharging after going into Charge mode. Default is 5.",
          "units" : "hour",
          "title" : "InhibitTime",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 27
        },
        "TUp" : {
          "type" : "number",
          "default" : 2.5000000000000000E-001,
          "minimum" : 0,
          "description" : "Duration, hrs, of upramp part for SCHEDULE mode. Default is 0.25.",
          "units" : "hour",
          "title" : "TUp",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 28
        },
        "TFlat" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "minimum" : 0,
          "description" : "Duration, hrs, of flat part for SCHEDULE mode. Default is 2.0.",
          "units" : "hour",
          "title" : "TFlat",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 29
        },
        "TDn" : {
          "type" : "number",
          "default" : 2.5000000000000000E-001,
          "minimum" : 0,
          "description" : "Duration, hrs, of downramp part for SCHEDULE mode. Default is 0.25.",
          "units" : "hour",
          "title" : "TDn",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 30
        },
        "kWThreshold" : {
          "type" : "number",
          "description" : "Threshold, kW, for Follow mode. kW has to be above this value for the Storage element to be dispatched on. Defaults to 75% of the kWTarget value. Must reset this property after setting kWTarget if you want a different value.",
          "title" : "kWThreshold",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 31
        },
        "DispFactor" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Defaults to 1 (disabled). Set to any value between 0 and 1 to enable this parameter.\n\nUse this parameter to reduce the amount of power requested by the controller in each control iteration. It can be useful when maximum control iterations are exceeded due to numerical instability such as fleet being set to charging and idling in subsequent control iterations (check the Eventlog). ",
          "title" : "DispFactor",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 32
        },
        "ResetLevel" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "The level of charge required for allowing the storage to discharge again after reaching the reserve storage level. After reaching this level, the storage control  will not allow the storage device to discharge, forcing the storage to charge. Once the storage reaches this level, the storage will be able to discharge again. This value is a number between 0.2 and 1",
          "title" : "ResetLevel",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 33
        },
        "SeasonTargets" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            8.0000000000000000E+003
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of doubles specifying the targets to be used during a QSTS simulation. These targets will take effect only if SeasonRating=true. The number of targets cannot exceed the number of seasons defined at the SeasonSignal.The difference between the targets defined at SeasonTargets and SeasonTargetsLow is that SeasonTargets applies to discharging modes, while SeasonTargetsLow applies to charging modes.",
          "title" : "SeasonTargets",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 34
        },
        "SeasonTargetsLow" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "default" : [
            4.0000000000000000E+003
          ],
          "$dssLength" : "Seasons",
          "description" : "An array of doubles specifying the targets to be used during a QSTS simulation. These targets will take effect only if SeasonRating=true. The number of targets cannot exceed the number of seasons defined at the SeasonSignal.The difference between the targets defined at SeasonTargets and SeasonTargetsLow is that SeasonTargets applies to discharging modes, while SeasonTargetsLow applies to charging modes.",
          "title" : "SeasonTargetsLow",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 35
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 36
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 37
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Element"
      ],
      "$defs" : {
        "StorageControllerDischargeMode" : {
          "title" : "StorageController: Discharge Mode",
          "type" : "string",
          "enum" : [
            "Peakshave",
            "Follow",
            "Support",
            "Loadshape",
            "Time",
            "Schedule",
            "IPeakshave"
          ],
          "$dssFullEnum" : [
            [
              "Peakshave",
              "Peakshave",
              5
            ],
            [
              "Follow",
              "Follow",
              1
            ],
            [
              "Support",
              "Support",
              3
            ],
            [
              "Loadshape",
              "Loadshape",
              2
            ],
            [
              "Time",
              "Time",
              4
            ],
            [
              "Schedule",
              "Schedule",
              6
            ],
            [
              "IPeakshave",
              "I-Peakshave",
              8
            ]
          ]
        },
        "StorageControllerChargeMode" : {
          "title" : "StorageController: Charge Mode",
          "type" : "string",
          "enum" : [
            "Loadshape",
            "Time",
            "PeakshaveLow",
            "IPeakshaveLow"
          ],
          "$dssFullEnum" : [
            [
              "Loadshape",
              "Loadshape",
              2
            ],
            [
              "Time",
              "Time",
              4
            ],
            [
              "PeakshaveLow",
              "PeakshaveLow",
              7
            ],
            [
              "IPeakshaveLow",
              "I-PeakshaveLow",
              9
            ]
          ]
        }
      }
    },
    "StorageControllerList" : {
      "title" : "StorageControllerList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/StorageController"
      }
    },
    "StorageControllerContainer" : {
      "default" : [
      ],
      "title" : "StorageControllerContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/StorageControllerList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Relay" : {
      "title" : "Relay",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "MonitoredObj" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line, transformer, load, or generator, to which the relay's PT and/or CT are connected. This is the \"monitored\" element. There is no default; must be specified.",
          "title" : "MonitoredObj",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "MonitoredTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the Relay is connected. 1 or 2, typically.  Default is 1.",
          "title" : "MonitoredTerm",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "SwitchedObj" : {
          "type" : "string",
          "description" : "Name of circuit element switch that the Relay controls. Specify the full object name.Defaults to the same as the Monitored element. This is the \"controlled\" element.",
          "title" : "SwitchedObj",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "SwitchedTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the controlled element in which the switch is controlled by the Relay. 1 or 2, typically.  Default is 1.",
          "title" : "SwitchedTerm",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Type" : {
          "$ref" : "#/$defs/Relay/$defs/RelayType",
          "default" : "Current",
          "description" : "One of a legal relay type:\n  Current\n  Voltage\n  Reversepower\n  46 (neg seq current)\n  47 (neg seq voltage)\n  Generic (generic over/under relay)\n  Distance\n  TD21\n  DOC (directional overcurrent)\n\nDefault is overcurrent relay (Current) Specify the curve and pickup settings appropriate for each type. Generic relays monitor PC Element Control variables and trip on out of over/under range in definite time.",
          "title" : "Type",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "PhaseCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of the TCC Curve object that determines the phase trip.  Must have been previously defined as a TCC_Curve object. Default is none (ignored). For overcurrent relay, multiplying the current values in the curve by the \"phasetrip\" value gives the actual current.",
          "title" : "PhaseCurve",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "GroundCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of the TCC Curve object that determines the ground trip.  Must have been previously defined as a TCC_Curve object. Default is none (ignored).For overcurrent relay, multiplying the current values in the curve by the \"groundtrip\" valuw gives the actual current.",
          "title" : "GroundCurve",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "PhaseTrip" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Multiplier or actual phase amps for the phase TCC curve.  Defaults to 1.0.",
          "title" : "PhaseTrip",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "GroundTrip" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Multiplier or actual ground amps (3I0) for the ground TCC curve.  Defaults to 1.0.",
          "title" : "GroundTrip",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "TDPhase" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for Phase trip curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "TDPhase",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "TDGround" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for Ground trip curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "TDGround",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "PhaseInst" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Actual  amps (Current relay) or kW (reverse power relay) for instantaneous phase trip which is assumed to happen in 0.01 sec + Delay Time. Default is 0.0, which signifies no inst trip. Use this value for specifying the Reverse Power threshold (kW) for reverse power relays.",
          "title" : "PhaseInst",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "GroundInst" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Actual  amps for instantaneous ground trip which is assumed to happen in 0.01 sec + Delay Time.Default is 0.0, which signifies no inst trip.",
          "units" : "A",
          "title" : "GroundInst",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Reset" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Reset time in sec for relay.  Default is 15. If this much time passes between the last pickup event, and the relay has not locked out, the operation counter resets.",
          "units" : "s",
          "title" : "Reset",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "Shots" : {
          "type" : "integer",
          "default" : 4,
          "exclusiveMinimum" : 0,
          "description" : "Number of shots to lockout.  Default is 4. This is one more than the number of reclose intervals.",
          "title" : "Shots",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16,
          "$dssValueOffset" : -1.0000000000000000E+000
        },
        "RecloseIntervals" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            5.0000000000000000E-001,
            2.0000000000000000E+000,
            2.0000000000000000E+000
          ],
          "$dssLength" : "Shots",
          "description" : "Array of reclose intervals. If none, specify \"NONE\". Default for overcurrent relay is (0.5, 2.0, 2.0) seconds. Default for a voltage relay is (5.0). In a voltage relay, this is  seconds after restoration of voltage that the reclose occurs. Reverse power relay is one shot to lockout, so this is ignored.  A locked out relay must be closed manually (set action=close).",
          "title" : "RecloseIntervals",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Delay" : {
          "type" : "number",
          "description" : "Trip time delay (sec) for DEFINITE TIME relays. Default is 0.0 for current, voltage and DOC relays. If >0 then this value is used instead of curves. Used by Generic, RevPower, 46 and 47 relays. Defaults to 0.1 s for these relays.",
          "title" : "Delay",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "OvervoltCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "TCC Curve object to use for overvoltage relay.  Curve is assumed to be defined with per unit voltage values. Voltage base should be defined for the relay. Default is none (ignored).",
          "title" : "OvervoltCurve",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "UndervoltCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "TCC Curve object to use for undervoltage relay.  Curve is assumed to be defined with per unit voltage values. Voltage base should be defined for the relay. Default is none (ignored).",
          "title" : "UndervoltCurve",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "kVBase" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Voltage base (kV) for the relay. Specify line-line for 3 phase devices); line-neutral for 1-phase devices.  Relay assumes the number of phases of the monitored element.  Default is 0.0, which results in assuming the voltage values in the \"TCC\" curve are specified in actual line-to-neutral volts.",
          "title" : "kVBase",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "F47pctPickup" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Percent voltage pickup for 47 relay (Neg seq voltage). Default is 2. Specify also base voltage (kvbase) and delay time value.   ",
          "title" : "47%Pickup",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "F46BaseAmps" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Base current, Amps, for 46 relay (neg seq current).  Used for establishing pickup and per unit I-squared-t.",
          "title" : "46BaseAmps",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "F46pctPickup" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "Percent pickup current for 46 relay (neg seq current).  Default is 20.0.   When current exceeds this value * BaseAmps, I-squared-t calc starts.",
          "title" : "46%Pickup",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "F46isqt" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Negative Sequence I-squared-t trip value for 46 relay (neg seq current).  Default is 1 (trips in 1 sec for 1 per unit neg seq current).  Should be 1 to 99.",
          "title" : "46isqt",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "Variable" : {
          "type" : "string",
          "description" : "Name of variable in PC Elements being monitored.  Only applies to Generic relay.",
          "title" : "Variable",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 26
        },
        "Overtrip" : {
          "type" : "number",
          "default" : 1.2000000000000000E+000,
          "description" : "Trip setting (high value) for Generic relay variable.  Relay trips in definite time if value of variable exceeds this value.",
          "title" : "Overtrip",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 27
        },
        "Undertrip" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "Trip setting (low value) for Generic relay variable.  Relay trips in definite time if value of variable is less than this value.",
          "title" : "Undertrip",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 28
        },
        "BreakerTime" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Fixed delay time (sec) added to relay time. Default is 0.0. Designed to represent breaker time or some other delay after a trip decision is made.Use Delay property for setting a fixed trip time delay.Added to trip time of current and voltage relays. Could use in combination with inst trip value to obtain a definite time overcurrent relay.",
          "title" : "BreakerTime",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 29
        },
        "Z1Mag" : {
          "type" : "number",
          "default" : 6.9999999999999996E-001,
          "description" : "Positive sequence reach impedance in primary ohms for Distance and TD21 functions. Default=0.7",
          "title" : "Z1Mag",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 30
        },
        "Z1Ang" : {
          "type" : "number",
          "default" : 6.4000000000000000E+001,
          "description" : "Positive sequence reach impedance angle in degrees for Distance and TD21 functions. Default=64.0",
          "title" : "Z1Ang",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 31
        },
        "Z0Mag" : {
          "type" : "number",
          "default" : 2.1000000000000001E+000,
          "description" : "Zero sequence reach impedance in primary ohms for Distance and TD21 functions. Default=2.1",
          "title" : "Z0Mag",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 32
        },
        "Z0Ang" : {
          "type" : "number",
          "default" : 6.8000000000000000E+001,
          "description" : "Zero sequence reach impedance angle in degrees for Distance and TD21 functions. Default=68.0",
          "title" : "Z0Ang",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 33
        },
        "MPhase" : {
          "type" : "number",
          "default" : 6.9999999999999996E-001,
          "description" : "Phase reach multiplier in per-unit for Distance and TD21 functions. Default=0.7",
          "title" : "MPhase",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 34
        },
        "MGround" : {
          "type" : "number",
          "default" : 6.9999999999999996E-001,
          "description" : "Ground reach multiplier in per-unit for Distance and TD21 functions. Default=0.7",
          "title" : "MGround",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 35
        },
        "EventLog" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True | No/False* } Default is No for Relay. Write trips, reclose and reset events to EventLog.",
          "title" : "EventLog",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 36
        },
        "DebugTrace" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True* | No/False* } Default is No for Relay. Write extra details to Eventlog.",
          "title" : "DebugTrace",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 37
        },
        "DistReverse" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True* | No/False} Default is No; reverse direction for distance and td21 types.",
          "title" : "DistReverse",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 38
        },
        "Normal" : {
          "$ref" : "#/$defs/Relay/$defs/RelayState",
          "default" : "closed",
          "description" : "{Open | Closed} Normal state of the relay. The relay reverts to this state for reset, change of mode, etc. Defaults to \"State\" if not specifically declared.",
          "title" : "Normal",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 39
        },
        "State" : {
          "$ref" : "#/$defs/Relay/$defs/RelayState",
          "default" : "closed",
          "description" : "{Open | Closed} Actual state of the relay. Upon setting, immediately forces state of the relay, overriding the Relay control. Simulates manual control on relay. Defaults to Closed. \"Open\" causes the controlled element to open and lock out. \"Closed\" causes the controlled element to close and the relay to reset to its first operation.",
          "title" : "State",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 40
        },
        "DOC_TiltAngleLow" : {
          "type" : "number",
          "default" : 9.0000000000000000E+001,
          "description" : "Tilt angle for low-current trip line. Default is 90.",
          "title" : "DOC_TiltAngleLow",
          "$dssPropertyIndex" : 41,
          "$dssPropertyOrder" : 41
        },
        "DOC_TiltAngleHigh" : {
          "type" : "number",
          "default" : 9.0000000000000000E+001,
          "description" : "Tilt angle for high-current trip line. Default is 90.",
          "title" : "DOC_TiltAngleHigh",
          "$dssPropertyIndex" : 42,
          "$dssPropertyOrder" : 42
        },
        "DOC_TripSettingLow" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Resistive trip setting for low-current line. Default is 0.",
          "title" : "DOC_TripSettingLow",
          "$dssPropertyIndex" : 43,
          "$dssPropertyOrder" : 43
        },
        "DOC_TripSettingHigh" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Resistive trip setting for high-current line.  Default is -1 (deactivated). To activate, set a positive value. Must be greater than \"DOC_TripSettingLow\".",
          "title" : "DOC_TripSettingHigh",
          "$dssPropertyIndex" : 44,
          "$dssPropertyOrder" : 44
        },
        "DOC_TripSettingMag" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Trip setting for current magnitude (defines a circle in the relay characteristics). Default is -1 (deactivated). To activate, set a positive value.",
          "title" : "DOC_TripSettingMag",
          "$dssPropertyIndex" : 45,
          "$dssPropertyOrder" : 45
        },
        "DOC_DelayInner" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Trip time delay (sec) for operation in inner region for DOC relay, defined when \"DOC_TripSettingMag\" or \"DOC_TripSettingHigh\" are activate. Default is -1.0 (deactivated), meaning that the relay characteristic is insensitive in the inner region (no trip). Set to 0 for instantaneous trip and >0 for a definite time delay. If \"DOC_PhaseCurveInner\" is specified, time delay from curve is utilized instead.",
          "title" : "DOC_DelayInner",
          "$dssPropertyIndex" : 46,
          "$dssPropertyOrder" : 46
        },
        "DOC_PhaseCurveInner" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of the TCC Curve object that determines the phase trip for operation in inner region for DOC relay. Must have been previously defined as a TCC_Curve object. Default is none (ignored). Multiplying the current values in the curve by the \"DOC_PhaseTripInner\" value gives the actual current.",
          "title" : "DOC_PhaseCurveInner",
          "$dssPropertyIndex" : 47,
          "$dssPropertyOrder" : 47
        },
        "DOC_PhaseTripInner" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Multiplier for the \"DOC_PhaseCurveInner\" TCC curve.  Defaults to 1.0.",
          "title" : "DOC_PhaseTripInner",
          "$dssPropertyIndex" : 48,
          "$dssPropertyOrder" : 48
        },
        "DOC_TDPhaseInner" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for \"DOC_PhaseCurveInner\" TCC curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "DOC_TDPhaseInner",
          "$dssPropertyIndex" : 49,
          "$dssPropertyOrder" : 49
        },
        "DOC_P1Blocking" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes/True* | No/False} Blocking element that impedes relay from tripping if balanced net three-phase active power is in the forward direction (i.e., flowing into the monitored terminal). For a delayed trip, if at any given time the reverse power flow condition stops, the tripping is reset. Default=True.",
          "title" : "DOC_P1Blocking",
          "$dssPropertyIndex" : 50,
          "$dssPropertyOrder" : 50
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 51,
          "$dssPropertyOrder" : 51
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 52,
          "$dssPropertyOrder" : 52
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 53,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "MonitoredObj"
      ],
      "$defs" : {
        "RelayType" : {
          "title" : "Relay: Type",
          "type" : "string",
          "enum" : [
            "Current",
            "Voltage",
            "ReversePower",
            "46",
            "47",
            "Generic",
            "Distance",
            "TD21",
            "DOC"
          ],
          "$dssFullEnum" : [
            [
              "Current",
              "Current",
              0
            ],
            [
              "Voltage",
              "Voltage",
              1
            ],
            [
              "ReversePower",
              "ReversePower",
              3
            ],
            [
              "F46",
              "46",
              4
            ],
            [
              "F47",
              "47",
              5
            ],
            [
              "Generic",
              "Generic",
              6
            ],
            [
              "Distance",
              "Distance",
              7
            ],
            [
              "TD21",
              "TD21",
              8
            ],
            [
              "DOC",
              "DOC",
              9
            ]
          ]
        },
        "RelayState" : {
          "title" : "Relay: State",
          "type" : "string",
          "enum" : [
            "closed",
            "open",
            "trip"
          ],
          "$dssFullEnum" : [
            [
              "closed",
              "closed",
              2
            ],
            [
              "open",
              "open",
              1
            ],
            [
              "trip",
              "trip",
              1
            ]
          ]
        }
      }
    },
    "RelayList" : {
      "title" : "RelayList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Relay"
      }
    },
    "RelayContainer" : {
      "default" : [
      ],
      "title" : "RelayContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/RelayList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Recloser" : {
      "title" : "Recloser",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "MonitoredObj" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line, transformer, load, or generator, to which the Recloser's PT and/or CT are connected. This is the \"monitored\" element. There is no default; must be specified.",
          "title" : "MonitoredObj",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "MonitoredTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the Recloser is connected. 1 or 2, typically.  Default is 1.",
          "title" : "MonitoredTerm",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "SwitchedObj" : {
          "type" : "string",
          "description" : "Name of circuit element switch that the Recloser controls. Specify the full object name.Defaults to the same as the Monitored element. This is the \"controlled\" element.",
          "title" : "SwitchedObj",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "SwitchedTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the controlled element in which the switch is controlled by the Recloser. 1 or 2, typically.  Default is 1.",
          "title" : "SwitchedTerm",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "NumFast" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of Fast (fuse saving) operations.  Default is 1. (See \"Shots\")",
          "title" : "NumFast",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "PhaseFast" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "a",
          "description" : "Name of the TCC Curve object that determines the Phase Fast trip.  Must have been previously defined as a TCC_Curve object. Default is \"A\". Multiplying the current values in the curve by the \"phasetrip\" value gives the actual current.",
          "title" : "PhaseFast",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "PhaseDelayed" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "d",
          "description" : "Name of the TCC Curve object that determines the Phase Delayed trip.  Must have been previously defined as a TCC_Curve object. Default is \"D\".Multiplying the current values in the curve by the \"phasetrip\" value gives the actual current.",
          "title" : "PhaseDelayed",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "GroundFast" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of the TCC Curve object that determines the Ground Fast trip.  Must have been previously defined as a TCC_Curve object. Default is none (ignored). Multiplying the current values in the curve by the \"groundtrip\" value gives the actual current.",
          "title" : "GroundFast",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "GroundDelayed" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of the TCC Curve object that determines the Ground Delayed trip.  Must have been previously defined as a TCC_Curve object. Default is none (ignored).Multiplying the current values in the curve by the \"groundtrip\" value gives the actual current.",
          "title" : "GroundDelayed",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "PhaseTrip" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Multiplier or actual phase amps for the phase TCC curve.  Defaults to 1.0.",
          "title" : "PhaseTrip",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "GroundTrip" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Multiplier or actual ground amps (3I0) for the ground TCC curve.  Defaults to 1.0.",
          "title" : "GroundTrip",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "PhaseInst" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Actual amps for instantaneous phase trip which is assumed to happen in 0.01 sec + Delay Time. Default is 0.0, which signifies no inst trip. ",
          "title" : "PhaseInst",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "GroundInst" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Actual amps for instantaneous ground trip which is assumed to happen in 0.01 sec + Delay Time.Default is 0.0, which signifies no inst trip.",
          "title" : "GroundInst",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Reset" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Reset time in sec for Recloser.  Default is 15. ",
          "units" : "s",
          "title" : "Reset",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "Shots" : {
          "type" : "integer",
          "default" : 4,
          "exclusiveMinimum" : 0,
          "description" : "Total Number of fast and delayed shots to lockout.  Default is 4. This is one more than the number of reclose intervals.",
          "title" : "Shots",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16,
          "$dssValueOffset" : -1.0000000000000000E+000
        },
        "RecloseIntervals" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            5.0000000000000000E-001,
            2.0000000000000000E+000,
            2.0000000000000000E+000
          ],
          "$dssLength" : "Shots",
          "description" : "Array of reclose intervals.  Default for Recloser is (0.5, 2.0, 2.0) seconds. A locked out Recloser must be closed manually (action=close).",
          "title" : "RecloseIntervals",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Delay" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Fixed delay time (sec) added to Recloser trip time. Default is 0.0. Used to represent breaker time or any other delay.",
          "units" : "s",
          "title" : "Delay",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "TDPhFast" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for Phase Fast trip curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "TDPhFast",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 19
        },
        "TDGrFast" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for Ground Fast trip curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "TDGrFast",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 20
        },
        "TDPhDelayed" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for Phase Delayed trip curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "TDPhDelayed",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 21
        },
        "TDGrDelayed" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Time dial for Ground Delayed trip curve. Multiplier on time axis of specified curve. Default=1.0.",
          "title" : "TDGrDelayed",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 22
        },
        "Normal" : {
          "$ref" : "#/$defs/Recloser/$defs/RecloserState",
          "default" : "closed",
          "description" : "{Open | Closed} Normal state of the recloser. The recloser reverts to this state for reset, change of mode, etc. Defaults to \"State\" if not specifically declared.",
          "title" : "Normal",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 23
        },
        "State" : {
          "$ref" : "#/$defs/Recloser/$defs/RecloserState",
          "default" : "closed",
          "description" : "{Open | Closed} Actual state of the recloser. Upon setting, immediately forces state of the recloser, overriding the Recloser control. Simulates manual control on recloser. Defaults to Closed. \"Open\" causes the controlled element to open and lock out. \"Closed\" causes the controlled element to close and the recloser to reset to its first operation.",
          "title" : "State",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 24
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 25
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 26
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "MonitoredObj"
      ],
      "$defs" : {
        "RecloserState" : {
          "title" : "Recloser: State",
          "type" : "string",
          "enum" : [
            "closed",
            "open",
            "trip"
          ],
          "$dssFullEnum" : [
            [
              "closed",
              "closed",
              2
            ],
            [
              "open",
              "open",
              1
            ],
            [
              "trip",
              "trip",
              1
            ]
          ]
        }
      }
    },
    "RecloserList" : {
      "title" : "RecloserList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Recloser"
      }
    },
    "RecloserContainer" : {
      "default" : [
      ],
      "title" : "RecloserContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/RecloserList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Fuse" : {
      "title" : "Fuse",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "MonitoredObj" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line, transformer, load, or generator, to which the Fuse is connected. This is the \"monitored\" element. There is no default; must be specified.",
          "title" : "MonitoredObj",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "MonitoredTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the Fuse is connected. 1 or 2, typically.  Default is 1.",
          "title" : "MonitoredTerm",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "SwitchedObj" : {
          "type" : "string",
          "description" : "Name of circuit element switch that the Fuse controls. Specify the full object name.Defaults to the same as the Monitored element. This is the \"controlled\" element.",
          "title" : "SwitchedObj",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "SwitchedTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the controlled element in which the switch is controlled by the Fuse. 1 or 2, typically.  Default is 1.  Assumes all phases of the element have a fuse of this type.",
          "title" : "SwitchedTerm",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "FuseCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "tlink",
          "description" : "Name of the TCC Curve object that determines the fuse blowing.  Must have been previously defined as a TCC_Curve object. Default is \"Tlink\". Multiplying the current values in the curve by the \"RatedCurrent\" value gives the actual current.",
          "title" : "FuseCurve",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "RatedCurrent" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Multiplier or actual phase amps for the phase TCC curve.  Defaults to 1.0.",
          "title" : "RatedCurrent",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Delay" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Fixed delay time (sec) added to Fuse blowing time determined from the TCC curve. Default is 0.0. Used to represent fuse clearing time or any other delay.",
          "units" : "s",
          "title" : "Delay",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Action" : {
          "$ref" : "#/$defs/Fuse/$defs/FuseAction",
          "description" : "DEPRECATED. See \"State\" property.",
          "deprecated" : true,
          "writeOnly" : true,
          "title" : "Action",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 13
        },
        "Normal" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/Fuse/$defs/FuseState"
          },
          "description" : "ARRAY of strings {Open | Closed} representing the Normal state of the fuse in each phase of the controlled element. The fuse reverts to this state for reset, change of mode, etc. Defaults to \"State\" if not specifically declared.",
          "title" : "Normal",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 9
        },
        "State" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/Fuse/$defs/FuseState"
          },
          "default" : [
            "closed",
            "closed",
            "closed"
          ],
          "description" : "ARRAY of strings {Open | Closed} representing the Actual state of the fuse in each phase of the controlled element. Upon setting, immediately forces state of fuse(s). Simulates manual control on Fuse. Defaults to Closed for all phases.",
          "title" : "State",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 10
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 11
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 12
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "MonitoredObj"
      ],
      "$defs" : {
        "FuseAction" : {
          "title" : "Fuse: Action",
          "type" : "string",
          "enum" : [
            "close",
            "open"
          ],
          "$dssFullEnum" : [
            [
              "close",
              "close",
              2
            ],
            [
              "open",
              "open",
              1
            ]
          ]
        },
        "FuseState" : {
          "title" : "Fuse: State",
          "type" : "string",
          "enum" : [
            "closed",
            "open"
          ],
          "$dssFullEnum" : [
            [
              "closed",
              "closed",
              2
            ],
            [
              "open",
              "open",
              1
            ]
          ]
        }
      }
    },
    "FuseList" : {
      "title" : "FuseList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Fuse"
      }
    },
    "FuseContainer" : {
      "default" : [
      ],
      "title" : "FuseContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/FuseList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "SwtControl" : {
      "title" : "SwtControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "SwitchedObj" : {
          "type" : "string",
          "description" : "Name of circuit element switch that the SwtControl operates. Specify the full object class and name.",
          "title" : "SwitchedObj",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "SwitchedTerm" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Terminal number of the controlled element switch. 1 or 2, typically.  Default is 1.",
          "title" : "SwitchedTerm",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Lock" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No} Delayed action. Sends CTRL_LOCK or CTRL_UNLOCK message to control queue. After delay time, controlled switch is locked in its present open / close state or unlocked. Switch will not respond to either manual (Action) or automatic (APIs) control or internal OpenDSS Reset when locked.",
          "title" : "Lock",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 4
        },
        "Delay" : {
          "type" : "number",
          "default" : 1.2000000000000000E+002,
          "description" : "Operating time delay (sec) of the switch. Defaults to 120.",
          "units" : "s",
          "title" : "Delay",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "Normal" : {
          "$ref" : "#/$defs/SwtControl/$defs/SwtControlState",
          "default" : "closed",
          "description" : "{Open | Closed] Normal state of the switch. If not Locked, the switch reverts to this state for reset, change of mode, etc. Defaults to first Action or State specified if not specifically declared.",
          "title" : "Normal",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 6
        },
        "State" : {
          "$ref" : "#/$defs/SwtControl/$defs/SwtControlState",
          "default" : null,
          "description" : "{Open | Closed] Present state of the switch. Upon setting, immediately forces state of switch.",
          "title" : "State",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 7
        },
        "Reset" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No} If Yes, forces Reset of switch to Normal state and removes Lock independently of any internal reset command for mode change, etc.",
          "writeOnly" : true,
          "title" : "Reset",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 10
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 8
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 9
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ],
      "$defs" : {
        "SwtControlState" : {
          "title" : "SwtControl: State",
          "type" : "string",
          "enum" : [
            "closed",
            "open"
          ],
          "$dssFullEnum" : [
            [
              "closed",
              "closed",
              2
            ],
            [
              "open",
              "open",
              1
            ]
          ]
        }
      }
    },
    "SwtControlList" : {
      "title" : "SwtControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/SwtControl"
      }
    },
    "SwtControlContainer" : {
      "default" : [
      ],
      "title" : "SwtControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/SwtControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "PVSystem" : {
      "title" : "PVSystem",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases, this PVSystem element.  Power is evenly divided among phases.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Bus to which the PVSystem element is connected.  May include specific node specification.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kV" : {
          "type" : "number",
          "default" : 1.2470000000000001E+001,
          "minimum" : 0,
          "description" : "Nominal rated (1.0 per unit) voltage, kV, for PVSystem element. For 2- and 3-phase PVSystem elements, specify phase-phase kV. Otherwise, specify actual kV across each branch of the PVSystem element. If 1-phase wye (star or LN), specify phase-neutral kV. If 1-phase delta or phase-phase connected, specify phase-phase kV.",
          "units" : "kV",
          "title" : "kV",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Irradiance" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Get/set the present irradiance value in kW/sq-m. Used as base value for shape multipliers. Generally entered as peak value for the time period of interest and the yearly, daily, and duty load shape objects are defined as per unit multipliers (just like Loads/Generators).",
          "title" : "Irradiance",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Pmpp" : {
          "type" : "number",
          "default" : 5.0000000000000000E+002,
          "description" : "Get/set the rated max power of the PV array for 1.0 kW/sq-m irradiance and a user-selected array temperature. The P-TCurve should be defined relative to the selected array temperature.",
          "title" : "Pmpp",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "pctPmpp" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Upper limit on active power as a percentage of Pmpp.",
          "title" : "%Pmpp",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Temperature" : {
          "type" : "number",
          "default" : 2.5000000000000000E+001,
          "description" : "Get/set the present Temperature. Used as fixed value corresponding to PTCurve property. A multiplier is obtained from the Pmpp-Temp curve and applied to the nominal Pmpp from the irradiance to determine the net array output.",
          "title" : "Temperature",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "={wye|LN|delta|LL}.  Default is wye.",
          "title" : "Conn",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "kVA" : {
          "type" : "number",
          "default" : 5.0000000000000000E+002,
          "description" : "kVA rating of inverter. Used as the base for Dynamics mode and Harmonics mode values.",
          "title" : "kVA",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "pctCutIn" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "% cut-in power -- % of kVA rating of inverter. When the inverter is OFF, the power from the array must be greater than this for the inverter to turn on.",
          "title" : "%CutIn",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "pctCutOut" : {
          "type" : "number",
          "default" : 2.0000000000000000E+001,
          "description" : "% cut-out power -- % of kVA rating of inverter. When the inverter is ON, the inverter turns OFF when the power from the array drops below this value.",
          "title" : "%CutOut",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "EffCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "An XYCurve object, previously defined, that describes the PER UNIT efficiency vs PER UNIT of rated kVA for the inverter. Inverter output power is discounted by the multiplier obtained from this curve.",
          "title" : "EffCurve",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "PTCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "An XYCurve object, previously defined, that describes the PV array PER UNIT Pmpp vs Temperature curve. Temperature units must agree with the Temperature property and the Temperature shapes used for simulations. The Pmpp values are specified in per unit of the Pmpp value for 1 kW/sq-m irradiance. The value for the temperature at which Pmpp is defined should be 1.0. The net array power is determined by the irradiance * Pmpp * f(Temperature)",
          "title" : "P-TCurve",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "pctR" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "description" : "Equivalent percent internal resistance, ohms. Default is 50%. Placed in series with internal voltage source for harmonics and dynamics modes. (Limits fault current to about 2 pu if not current limited -- see LimitCurrent) ",
          "title" : "%R",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "pctX" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Equivalent percent internal reactance, ohms. Default is 0%. Placed in series with internal voltage source for harmonics and dynamics modes. ",
          "title" : "%X",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "Model" : {
          "$ref" : "#/$defs/PVSystem/$defs/PVSystemModel",
          "default" : 1,
          "description" : "Integer code (default=1) for the model to use for power output variation with voltage. Valid values are:\n\n1:PVSystem element injects a CONSTANT kW at specified power factor.\n2:PVSystem element is modeled as a CONSTANT ADMITTANCE.\n3:Compute load injection from User-written Model.",
          "title" : "Model",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "VMinpu" : {
          "type" : "number",
          "default" : 9.0000000000000002E-001,
          "description" : "Default = 0.90.  Minimum per unit voltage for which the Model is assumed to apply. Below this value, the load model reverts to a constant impedance model except for Dynamics model. In Dynamics mode, the current magnitude is limited to the value the power flow would compute for this voltage.",
          "title" : "VMinpu",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "VMaxpu" : {
          "type" : "number",
          "default" : 1.1000000000000001E+000,
          "description" : "Default = 1.10.  Maximum per unit voltage for which the Model is assumed to apply. Above this value, the load model reverts to a constant impedance model.",
          "title" : "VMaxpu",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "Balanced" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No*} Default is No.  Force balanced current only for 3-phase PVSystems. Forces zero- and negative-sequence to zero. ",
          "title" : "Balanced",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "LimitCurrent" : {
          "type" : "boolean",
          "default" : false,
          "description" : "Limits current magnitude to Vminpu value for both 1-phase and 3-phase PVSystems similar to Generator Model 7. For 3-phase, limits the positive-sequence current but not the negative-sequence.",
          "title" : "LimitCurrent",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch shape to use for yearly simulations.  Must be previously defined as a Loadshape object. If this is not specified, the Daily dispatch shape, if any, is repeated during Yearly solution modes. In the default dispatch mode, the PVSystem element uses this loadshape to trigger State changes.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Dispatch shape to use for daily simulations.  Must be previously defined as a Loadshape object of 24 hrs, typically.  In the default dispatch mode, the PVSystem element uses this loadshape to trigger State changes.",
          "title" : "Daily",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Load shape to use for duty cycle dispatch simulations such as for solar ramp rate studies. Must be previously defined as a Loadshape object. Typically would have time intervals of 1-5 seconds. Designate the number of points to solve using the Set Number=xxxx command. If there are fewer points in the actual shape, the shape is assumed to repeat.",
          "title" : "Duty",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 26
        },
        "TYearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Temperature shape to use for yearly simulations.  Must be previously defined as a TShape object. If this is not specified, the Daily dispatch shape, if any, is repeated during Yearly solution modes. The PVSystem element uses this TShape to determine the Pmpp from the Pmpp vs T curve. Units must agree with the Pmpp vs T curve.",
          "title" : "TYearly",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 27
        },
        "TDaily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Temperature shape to use for daily simulations.  Must be previously defined as a TShape object of 24 hrs, typically.  The PVSystem element uses this TShape to determine the Pmpp from the Pmpp vs T curve. Units must agree with the Pmpp vs T curve.",
          "title" : "TDaily",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 28
        },
        "TDuty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Temperature shape to use for duty cycle dispatch simulations such as for solar ramp rate studies. Must be previously defined as a TShape object. Typically would have time intervals of 1-5 seconds. Designate the number of points to solve using the Set Number=xxxx command. If there are fewer points in the actual shape, the shape is assumed to repeat. The PVSystem model uses this TShape to determine the Pmpp from the Pmpp vs T curve. Units must agree with the Pmpp vs T curve.",
          "title" : "TDuty",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 29
        },
        "Class" : {
          "type" : "integer",
          "default" : 1,
          "description" : "An arbitrary integer number representing the class of PVSystem element so that PVSystem values may be segregated by class.",
          "title" : "Class",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 30
        },
        "UserModel" : {
          "type" : "string",
          "description" : "Name of DLL containing user-written model, which computes the terminal currents for Dynamics studies, overriding the default model.  Set to \"none\" to negate previous setting.",
          "title" : "UserModel",
          "format" : "file-path",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 31
        },
        "UserData" : {
          "type" : "string",
          "description" : "String (in quotes or parentheses) that gets passed to user-written model for defining the data required for that model.",
          "title" : "UserData",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 32
        },
        "DebugTrace" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No }  Default is no.  Turn this on to capture the progress of the PVSystem model for each iteration.  Creates a separate file for each PVSystem element named \"PVSystem_name.csv\".",
          "title" : "DebugTrace",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 33
        },
        "VarFollowInverter" : {
          "type" : "boolean",
          "default" : false,
          "description" : "Boolean variable (Yes|No) or (True|False). Defaults to False which indicates that the reactive power generation/absorption does not respect the inverter status.When set to True, the PVSystem reactive power generation/absorption will cease when the inverter status is off, due to panel kW dropping below %Cutout.  The reactive power generation/absorption will begin again when the panel kW is above %Cutin.  When set to False, the PVSystem will generate/absorb reactive power regardless of the status of the inverter.",
          "title" : "VarFollowInverter",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 34
        },
        "DutyStart" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "minimum" : 0,
          "description" : "Starting time offset [hours] into the duty cycle shape for this PVSystem, defaults to 0",
          "units" : "hour",
          "title" : "DutyStart",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 35
        },
        "WattPriority" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/No*/True/False} Set inverter to watt priority instead of the default var priority",
          "title" : "WattPriority",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 36
        },
        "PFPriority" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/No*/True/False} Set inverter to operate with PF priority when in constant PF mode. If \"Yes\", value assigned to \"WattPriority\" is neglected. If controlled by an InvControl with either Volt-Var or DRC or both functions activated, PF priority is neglected and \"WattPriority\" is considered. Default = No.",
          "title" : "PFPriority",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 37
        },
        "pctPMinNoVars" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Minimum active power as percentage of Pmpp under which there is no vars production/absorption.",
          "title" : "%PMinNoVars",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 38
        },
        "pctPMinkvarMax" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Minimum active power as percentage of Pmpp that allows the inverter to produce/absorb reactive power up to its kvarMax or kvarMaxAbs.",
          "title" : "%PMinkvarMax",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 39
        },
        "kvarMax" : {
          "type" : "number",
          "description" : "Indicates the maximum reactive power GENERATION (un-signed numerical variable in kvar) for the inverter (as an un-signed value). Defaults to kVA rating of the inverter.",
          "title" : "kvarMax",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 40
        },
        "kvarMaxAbs" : {
          "type" : "number",
          "description" : "Indicates the maximum reactive power ABSORPTION (un-signed numerical variable in kvar) for the inverter (as an un-signed value). Defaults to kVA rating of the inverter.",
          "title" : "kvarMaxAbs",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 41
        },
        "kVDC" : {
          "type" : "number",
          "default" : 8.0000000000000000E+000,
          "description" : "Indicates the rated voltage (kV) at the input of the inverter at the peak of PV energy production. The value is normally greater or equal to the kV base of the PV system. It is used for dynamics simulation ONLY.",
          "title" : "kVDC",
          "$dssPropertyIndex" : 41,
          "$dssPropertyOrder" : 42
        },
        "Kp" : {
          "type" : "number",
          "default" : 1.0000000000000000E-002,
          "description" : "It is the proportional gain for the PI controller within the inverter. Use it to modify the controller response in dynamics simulation mode.",
          "title" : "Kp",
          "$dssPropertyIndex" : 42,
          "$dssPropertyOrder" : 43
        },
        "PITol" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "It is the tolerance (%) for the closed loop controller of the inverter. For dynamics simulation mode.",
          "title" : "PITol",
          "$dssPropertyIndex" : 43,
          "$dssPropertyOrder" : 44
        },
        "SafeVoltage" : {
          "type" : "number",
          "default" : 8.0000000000000000E+001,
          "description" : "Indicates the voltage level (%) respect to the base voltage level for which the Inverter will operate. If this threshold is violated, the Inverter will enter safe mode (OFF). For dynamic simulation. By default is 80%",
          "title" : "SafeVoltage",
          "$dssPropertyIndex" : 44,
          "$dssPropertyOrder" : 45
        },
        "SafeMode" : {
          "type" : "boolean",
          "description" : "(Read only) Indicates whether the inverter entered (Yes) or not (No) into Safe Mode.",
          "readOnly" : true,
          "title" : "SafeMode",
          "$dssPropertyIndex" : 45,
          "$dssPropertyOrder" : 46
        },
        "DynamicEq" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "The name of the dynamic equation (DynamicExp) that will be used for defining the dynamic behavior of the generator. If not defined, the generator dynamics will follow the built-in dynamic equation.",
          "title" : "DynamicEq",
          "$dssPropertyIndex" : 46,
          "$dssPropertyOrder" : 47
        },
        "DynOut" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "The name of the variables within the Dynamic equation that will be used to govern the PVSystem dynamics. This PVsystem model requires 1 output from the dynamic equation:\n\n    1. Current.\n\nThe output variables need to be defined in the same order.",
          "title" : "DynOut",
          "$dssPropertyIndex" : 47,
          "$dssPropertyOrder" : 48
        },
        "ControlMode" : {
          "$ref" : "#/$defs/InverterControlMode",
          "default" : "GFL",
          "description" : "Defines the control mode for the inverter. It can be one of {GFM | GFL*}. By default it is GFL (Grid Following Inverter). Use GFM (Grid Forming Inverter) for energizing islanded microgrids, but, if the device is connected to the grid, it is highly recommended to use GFL.\n\nGFM control mode disables any control action set by the InvControl device.",
          "title" : "ControlMode",
          "$dssPropertyIndex" : 48,
          "$dssPropertyOrder" : 49
        },
        "AmpLimit" : {
          "type" : "number",
          "description" : "The current limiter per phase for the IBR when operating in GFM mode. This limit is imposed to prevent the IBR to enter into Safe Mode when reaching the IBR power ratings.\nOnce the IBR reaches this value, it remains there without moving into Safe Mode. This value needs to be set lower than the IBR Amps rating.",
          "title" : "AmpLimit",
          "$dssPropertyIndex" : 49,
          "$dssPropertyOrder" : 50
        },
        "AmpLimitGain" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "Use it for fine tunning the current limiter when active, by default is 0.8, it has to be a value between 0.1 and 1. This value allows users to fine tune the IBRs current limiter to match with the user requirements.",
          "title" : "AmpLimitGain",
          "$dssPropertyIndex" : 50,
          "$dssPropertyOrder" : 51
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of harmonic voltage or current spectrum for this PVSystem element. A harmonic voltage source is assumed for the inverter. Default value is \"default\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 51,
          "$dssPropertyOrder" : 52
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 52,
          "$dssPropertyOrder" : 53
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 53,
          "$dssPropertyOrder" : 54
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 54,
          "$dssPropertyOrder" : 1
        },
        "DynInit" : {
          "$ref" : "#/$defs/DynInitType",
          "$dssPropertyOrder" : 55
        }
      },
      "oneOf" : [
        {
          "title" : "PF",
          "type" : "object",
          "properties" : {
            "PF" : {
              "type" : "number",
              "default" : 1.0000000000000000E+000,
              "minimum" : -1,
              "maximum" : 1,
              "description" : "Nominally, the power factor for the output power. Default is 1.0. Setting this property will cause the inverter to operate in constant power factor mode.Enter negative when kW and kvar have opposite signs.\nA positive power factor signifies that the PVSystem element produces vars \nas is typical for a generator.  ",
              "title" : "PF",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 9
            }
          },
          "required" : [
            "PF"
          ]
        },
        {
          "title" : "kvar",
          "type" : "object",
          "properties" : {
            "kvar" : {
              "type" : "number",
              "description" : "Get/set the present kvar value.  Setting this property forces the inverter to operate in constant kvar mode.",
              "title" : "kvar",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 11
            }
          },
          "required" : [
            "kvar"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1",
        "kV"
      ],
      "$defs" : {
        "PVSystemModel" : {
          "title" : "PVSystem: Model",
          "type" : "integer",
          "enum" : [
            1,
            2,
            3
          ],
          "$dssFullEnum" : [
            [
              "ConstantP_PF",
              "Constant P, PF",
              1
            ],
            [
              "ConstantY",
              "Constant Y",
              2
            ],
            [
              "UserModel",
              "User model",
              3
            ]
          ]
        }
      }
    },
    "PVSystemList" : {
      "title" : "PVSystemList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/PVSystem"
      }
    },
    "PVSystemContainer" : {
      "default" : [
      ],
      "title" : "PVSystemContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/PVSystemList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "UPFC" : {
      "title" : "UPFC",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which the input terminal (1) is connected.\nbus1=busname.1.3\nbus1=busname.1.2.3",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which the output terminal (2) is connected.\nbus2=busname.1.2\nbus2=busname.1.2.3",
          "title" : "Bus2",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "RefkV" : {
          "type" : "number",
          "default" : 2.3999999999999999E-001,
          "description" : "Base Voltage expected at the output of the UPFC\n\n\"refkv=0.24\"",
          "title" : "RefkV",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "PF" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "minimum" : -1,
          "maximum" : 1,
          "description" : "Power factor target at the input terminal.",
          "title" : "PF",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Frequency" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "UPFC working frequency.  Defaults to system default base frequency.",
          "units" : "Hz",
          "title" : "Frequency",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Phases" : {
          "type" : "integer",
          "default" : 1,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.  Defaults to 1 phase (2 terminals, 1 conductor per terminal).",
          "title" : "Phases",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "Xs" : {
          "type" : "number",
          "default" : 7.5400000000000000E-001,
          "description" : "Reactance of the series transformer of the UPFC, ohms (default=0.7540 ... 2 mH)",
          "title" : "Xs",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "Tol1" : {
          "type" : "number",
          "default" : 2.0000000000000000E-002,
          "description" : "Tolerance in pu for the series PI controller\nTol1=0.02 is the format used to define 2% tolerance (Default=2%)",
          "title" : "Tol1",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "Mode" : {
          "$ref" : "#/$defs/UPFC/$defs/UPFCMode",
          "default" : 1,
          "description" : "Integer used to define the control mode of the UPFC: \n\n0 = Off, \n1 = Voltage regulator, \n2 = Phase angle regulator, \n3 = Dual mode\n4 = It is a control mode where the user can set two different set points to create a secure GAP, these references must be defined in the parameters RefkV and RefkV2. The only restriction when setting these values is that RefkV must be higher than RefkV2. \n5 = In this mode the user can define the same GAP using two set points as in control mode 4. The only difference between mode 5 and mode 4 is that in mode 5, the UPFC controller performs dual control actions just as in control mode 3",
          "title" : "Mode",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "VpqMax" : {
          "type" : "number",
          "default" : 2.4000000000000000E+001,
          "description" : "Maximum voltage (in volts) delivered by the series voltage source (Default = 24 V)",
          "title" : "VpqMax",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "LossCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Name of the XYCurve for describing the losses behavior as a function of the voltage at the input of the UPFC",
          "title" : "LossCurve",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "VHLimit" : {
          "type" : "number",
          "default" : 3.0000000000000000E+002,
          "description" : "High limit for the voltage at the input of the UPFC, if the voltage is above this value the UPFC turns off. This value is specified in Volts (default 300 V)",
          "title" : "VHLimit",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "VLLimit" : {
          "type" : "number",
          "default" : 1.2500000000000000E+002,
          "description" : "low limit for the voltage at the input of the UPFC, if voltage is below this value the UPFC turns off. This value is specified in Volts (default 125 V)",
          "title" : "VLLimit",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "CLimit" : {
          "type" : "number",
          "default" : 2.6500000000000000E+002,
          "description" : "Current Limit for the UPFC, if the current passing through the UPFC is higher than this value the UPFC turns off. This value is specified in Amps (Default 265 A)",
          "title" : "CLimit",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "refkV2" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Base Voltage expected at the output of the UPFC for control modes 4 and 5.\n\nThis reference must be lower than refkv, see control modes 4 and 5 for details",
          "title" : "refkV2",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "kvarLimit" : {
          "type" : "number",
          "default" : 5.0000000000000000E+000,
          "description" : "Maximum amount of reactive power (kvar) that can be absorbed by the UPFC (Default = 5)",
          "units" : "kvar",
          "title" : "kvarLimit",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Element" : {
          "type" : "string",
          "description" : "The name of the PD element monitored when operating with reactive power compensation. Normally, it should be the PD element immediately upstream the UPFC. The element must be defined including the class, e.g. Line.myline.",
          "title" : "Element",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "default",
          "description" : "Name of harmonic spectrum for this source.  Default is \"defaultUPFC\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Bus1",
        "Bus2"
      ],
      "$defs" : {
        "UPFCMode" : {
          "title" : "UPFC: Mode",
          "type" : "integer",
          "enum" : [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "$dssFullEnum" : [
            [
              "Off",
              "Off",
              0
            ],
            [
              "VoltageRegulator",
              "Voltage Regulator",
              1
            ],
            [
              "PhaseAngleRegulator",
              "Phase Angle Regulator",
              2
            ],
            [
              "DualRegulator",
              "Dual Regulator",
              3
            ],
            [
              "DoubleReference_Voltage",
              "Double Reference (Voltage)",
              4
            ],
            [
              "DoubleReference_Dual",
              "Double Reference (Dual)",
              5
            ]
          ]
        }
      }
    },
    "UPFCList" : {
      "title" : "UPFCList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/UPFC"
      }
    },
    "UPFCContainer" : {
      "default" : [
      ],
      "title" : "UPFCContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/UPFCList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "UPFCControl" : {
      "title" : "UPFCControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "UPFCList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "The list of all the UPFC devices to be controlled by this controller, If left empty, this control will apply for all UPFCs in the model.",
          "title" : "UPFCList",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "UPFCControlList" : {
      "title" : "UPFCControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/UPFCControl"
      }
    },
    "UPFCControlContainer" : {
      "default" : [
      ],
      "title" : "UPFCControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/UPFCControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "ESPVLControl" : {
      "title" : "ESPVLControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "description" : "Full object name of the circuit element, typically a line or transformer, which the control is monitoring. There is no default; must be specified.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the ESPVLControl control is connected. 1 or 2, typically.  Default is 1. Make sure you have the direction on the power matching the sign of kWLimit.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Type" : {
          "$ref" : "#/$defs/ESPVLControl/$defs/ESPVLControlType",
          "default" : null,
          "description" : "Type of controller.  1= System Controller; 2= Local controller. ",
          "title" : "Type",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "kWBand" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Bandwidth (kW) of the dead band around the target limit.No dispatch changes are attempted if the power in the monitored terminal stays within this band.",
          "title" : "kWBand",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "kvarLimit" : {
          "type" : "number",
          "default" : 4.0000000000000000E+003,
          "description" : "Max kvar to be delivered through the element.  Uses same dead band as kW.",
          "title" : "kvarLimit",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "LocalControlList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of ESPVLControl local controller objects to be dispatched by System Controller. If not specified, all ESPVLControl devices with type=local in the circuit not attached to another controller are assumed to be part of this controller's fleet.",
          "title" : "LocalControlList",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "LocalControlWeights" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "LocalControlList",
          "description" : "Array of proportional weights corresponding to each ESPVLControl local controller in the LocalControlList.",
          "title" : "LocalControlWeights",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "PVSystemList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of PVSystem objects to be dispatched by a Local Controller. ",
          "title" : "PVSystemList",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "PVSystemWeights" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "PVSystemList",
          "description" : "Array of proportional weights corresponding to each PVSystem in the PVSystemList.",
          "title" : "PVSystemWeights",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "StorageList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of Storage objects to be dispatched by Local Controller. ",
          "title" : "StorageList",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "StorageWeights" : {
          "$ref" : "#/$defs/ArrayOrFilePath",
          "$dssLength" : "StorageList",
          "description" : "Array of proportional weights corresponding to each Storage object in the StorageControlList.",
          "title" : "StorageWeights",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Element"
      ],
      "$defs" : {
        "ESPVLControlType" : {
          "title" : "ESPVLControl: Type",
          "type" : "string",
          "enum" : [
            "SystemController",
            "LocalController"
          ],
          "$dssFullEnum" : [
            [
              "SystemController",
              "SystemController",
              1
            ],
            [
              "LocalController",
              "LocalController",
              2
            ]
          ]
        }
      }
    },
    "ESPVLControlList" : {
      "title" : "ESPVLControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/ESPVLControl"
      }
    },
    "ESPVLControlContainer" : {
      "default" : [
      ],
      "title" : "ESPVLControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/ESPVLControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "IndMach012" : {
      "title" : "IndMach012",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases, this Induction Machine.  ",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Bus to which the Induction Machine is connected.  May include specific node specification.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kV" : {
          "type" : "number",
          "default" : 1.2470000000000001E+001,
          "minimum" : 0,
          "description" : "Nominal rated (1.0 per unit) voltage, kV. For 2- and 3-phase machines, specify phase-phase kV. Otherwise, specify actual kV across each branch of the machine. If wye (star), specify phase-neutral kV. If delta or phase-phase connected, specify phase-phase kV.",
          "units" : "kV",
          "title" : "kV",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "kW" : {
          "type" : "number",
          "default" : 1.0000000000000000E+003,
          "description" : "Shaft Power, kW, for the Induction Machine.  A positive value denotes power for a load. \nNegative value denotes an induction generator. ",
          "title" : "kW",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "PF" : {
          "type" : "number",
          "description" : "[Read Only] Present power factor for the machine. ",
          "readOnly" : true,
          "title" : "PF",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Delta",
          "description" : "Connection of stator: Delta or Wye. Default is Delta.",
          "title" : "Conn",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "kVA" : {
          "type" : "number",
          "default" : 1.2000000000000000E+003,
          "description" : "Rated kVA for the machine.",
          "title" : "kVA",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "H" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Per unit mass constant of the machine.  MW-sec/MVA.  Default is 1.0.",
          "title" : "H",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "D" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Damping constant.  Usual range is 0 to 4. Default is 1.0.  Adjust to get damping in Dynamics mode,",
          "title" : "D",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "puRs" : {
          "type" : "number",
          "default" : 5.3000000000000000E-003,
          "description" : "Per unit stator resistance. Default is 0.0053.",
          "title" : "puRs",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "puXs" : {
          "type" : "number",
          "default" : 1.0600000000000000E-001,
          "description" : "Per unit stator leakage reactance. Default is 0.106.",
          "title" : "puXs",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "puRr" : {
          "type" : "number",
          "default" : 7.0000000000000001E-003,
          "description" : "Per unit rotor  resistance. Default is 0.007.",
          "title" : "puRr",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "puXr" : {
          "type" : "number",
          "default" : 1.2000000000000000E-001,
          "description" : "Per unit rotor leakage reactance. Default is 0.12.",
          "title" : "puXr",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "puXm" : {
          "type" : "number",
          "default" : 4.0000000000000000E+000,
          "description" : "Per unit magnetizing reactance.Default is 4.0.",
          "title" : "puXm",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "Slip" : {
          "type" : "number",
          "default" : 7.0000000000000001E-003,
          "description" : "Initial slip value. Default is 0.007",
          "title" : "Slip",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "MaxSlip" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Max slip value to allow. Default is 0.1. Set this before setting slip.",
          "title" : "MaxSlip",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "SlipOption" : {
          "$ref" : "#/$defs/IndMach012/$defs/IndMach012SlipOption",
          "default" : "VariableSlip",
          "description" : "Option for slip model. One of {fixedslip | variableslip*  }",
          "title" : "SlipOption",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "Yearly" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for yearly simulations.  Must be previously defined as a Loadshape object. Is set to the Daily load shape  when Daily is defined.  The daily load shape is repeated in this case. Set Status=Fixed to ignore Loadshape designation. Set to NONE to reset to no loadshape. The default is no variation.",
          "title" : "Yearly",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "Daily" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for daily simulations.  Must be previously defined as a Loadshape object of 24 hrs, typically. Set Status=Fixed to ignore Loadshape designation. Set to NONE to reset to no loadshape. Default is no variation (constant) if not defined. Side effect: Sets Yearly load shape if not already defined.",
          "title" : "Daily",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "Duty" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "LOADSHAPE object to use for duty cycle simulations.  Must be previously defined as a Loadshape object.  Typically would have time intervals less than 1 hr. Designate the number of points to solve using the Set Number=xxxx command. If there are fewer points in the actual shape, the shape is assumed to repeat.Set to NONE to reset to no loadshape. Set Status=Fixed to ignore Loadshape designation.  Defaults to Daily curve If not specified.",
          "title" : "Duty",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "DebugTrace" : {
          "type" : "boolean",
          "default" : false,
          "description" : "[Yes | No*] Write DebugTrace file.",
          "title" : "DebugTrace",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "default",
          "description" : "Name of harmonic voltage or current spectrum for this IndMach012. Voltage behind Xd\" for machine - default. Current injection for inverter. Default value is \"default\", which is defined when the DSS starts.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Bus1",
        "kV",
        "kW",
        "kVA"
      ],
      "$defs" : {
        "IndMach012SlipOption" : {
          "title" : "IndMach012: Slip Option",
          "type" : "string",
          "enum" : [
            "VariableSlip",
            "FixedSlip"
          ],
          "$dssFullEnum" : [
            [
              "VariableSlip",
              "VariableSlip",
              0
            ],
            [
              "FixedSlip",
              "FixedSlip",
              1
            ]
          ]
        }
      }
    },
    "IndMach012List" : {
      "title" : "IndMach012List",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/IndMach012"
      }
    },
    "IndMach012Container" : {
      "default" : [
      ],
      "title" : "IndMach012Container",
      "oneOf" : [
        {
          "$ref" : "#/$defs/IndMach012List"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "GICsource" : {
      "title" : "GICsource",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Frequency" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "exclusiveMinimum" : 0,
          "description" : "Source frequency.  Defaults to  0.1 Hz. So GICSource=0 at power frequency.",
          "units" : "Hz",
          "title" : "Frequency",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.  Defaults to 3. All three phases are assumed in phase (zero sequence)",
          "title" : "Phases",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Not used.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Not used.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Volts, Angle",
          "type" : "object",
          "properties" : {
            "Volts" : {
              "type" : "number",
              "description" : "Voltage magnitude, in volts, of the GIC voltage induced across the associated line. When specified, induced voltage is assumed defined by Voltage and Angle properties. \n\nSpecify this value\n\nOR\n\nEN, EE, lat1, lon1, lat2, lon2. \n\nNot both!!  Last one entered will take precedence. Assumed identical in each phase of the Line object.",
              "title" : "Volts",
              "$dssPropertyIndex" : 1,
              "$dssPropertyOrder" : 2
            },
            "Angle" : {
              "type" : "number",
              "default" : 0.0000000000000000E+000,
              "description" : "Phase angle in degrees of first phase. Default=0.0.  See Voltage property",
              "units" : "°",
              "title" : "Angle",
              "$dssPropertyIndex" : 2,
              "$dssPropertyOrder" : 3
            }
          },
          "required" : [
            "Volts"
          ]
        },
        {
          "title" : "EN, EE, Lat1, Lon1, Lat2, Lon2",
          "type" : "object",
          "properties" : {
            "EN" : {
              "type" : "number",
              "description" : "Northward Electric field (V/km). If specified, Voltage and Angle are computed from EN, EE, lat and lon values.",
              "units" : "V/km",
              "title" : "EN",
              "$dssPropertyIndex" : 5,
              "$dssPropertyOrder" : 6
            },
            "EE" : {
              "type" : "number",
              "description" : "Eastward Electric field (V/km).  If specified, Voltage and Angle are computed from EN, EE, lat and lon values.",
              "units" : "V/km",
              "title" : "EE",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 7
            },
            "Lat1" : {
              "type" : "number",
              "description" : "Latitude of Bus1 of the line(degrees)",
              "units" : "°",
              "title" : "Lat1",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            },
            "Lon1" : {
              "type" : "number",
              "description" : "Longitude of Bus1 of the line (degrees)",
              "units" : "°",
              "title" : "Lon1",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 9
            },
            "Lat2" : {
              "type" : "number",
              "description" : "Latitude of Bus2 of the line (degrees)",
              "units" : "°",
              "title" : "Lat2",
              "$dssPropertyIndex" : 9,
              "$dssPropertyOrder" : 10
            },
            "Lon2" : {
              "type" : "number",
              "description" : "Longitude of Bus2 of the line (degrees)",
              "units" : "°",
              "title" : "Lon2",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 11
            }
          },
          "required" : [
            "EN",
            "EE",
            "Lat1",
            "Lon1",
            "Lat2",
            "Lon2"
          ]
        }
      ],
      "required" : [
        "Name"
      ]
    },
    "GICsourceList" : {
      "title" : "GICsourceList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/GICsource"
      }
    },
    "GICsourceContainer" : {
      "default" : [
      ],
      "title" : "GICsourceContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/GICsourceList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "AutoTrans" : {
      "title" : "AutoTrans",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases this AutoTrans. Default is 3.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/BusConnection"
          },
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Bus",
          "$dssArrayProperty" : "Buses",
          "description" : "Use this to specify all the bus connections at once using an array. Example:\n\nNew AutoTrans.T1 buses=[Hbus, Xbus]",
          "title" : "Bus",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 3
        },
        "Conn" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/$defs/AutoTrans/$defs/AutoTransConnection"
          },
          "default" : [
            "Series",
            "Wye"
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Conn",
          "$dssArrayProperty" : "Conns",
          "description" : "Use this to specify all the Winding connections at once using an array. Example:\n\nNew AutoTrans.T1 buses=[Hbus, Xbus] ~ conns=(series, wye)",
          "title" : "Conn",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 4
        },
        "kV" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.1500000000000000E+002,
            1.2470000000000001E+001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "kV",
          "$dssArrayProperty" : "kVs",
          "description" : "Use this to specify the kV ratings of all windings at once using an array. Example:\n\nNew AutoTrans.T1 buses=[Hbus, Xbus] \n~ conns=(series, wye)\n~ kvs=(115, 12.47)\n\nSee kV= property for voltage rules.",
          "title" : "kV",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 5
        },
        "kVA" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+003,
            1.0000000000000000E+003
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "kVA",
          "$dssArrayProperty" : "kVAs",
          "description" : "Use this to specify the kVA ratings of all windings at once using an array.",
          "title" : "kVA",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 6
        },
        "Tap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+000,
            1.0000000000000000E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "Tap",
          "$dssArrayProperty" : "Taps",
          "description" : "Use this to specify the p.u. tap of all windings at once using an array.",
          "title" : "Tap",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 7
        },
        "pctR" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            2.0000000000000001E-001,
            2.0000000000000001E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "$dssScalarProperty" : "%R",
          "$dssArrayProperty" : "%Rs",
          "description" : "Use this property to specify all the winding ac %resistances using an array. Example:\n\nNew AutoTrans.T1 buses=[Hibus, lowbus] ~ %Rs=(0.2  0.3)",
          "title" : "%R",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 8
        },
        "RDCOhms" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            5.9570271766666689E+000,
            8.8117176666666699E-002
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Winding dc resistance in OHMS. Specify this for GIC analysis. From transformer test report (divide by number of phases). Defaults to 85% of %R property (the ac value that includes stray losses).",
          "title" : "RDCOhms",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 9
        },
        "Core" : {
          "$ref" : "#/$defs/CoreType",
          "default" : "shell",
          "description" : "{Shell*|5-leg|3-Leg|1-phase|core-1-phase|4-leg} Core Type. Used for GIC analysis in auxiliary programs. Not used inside OpenDSS.",
          "title" : "Core",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 10
        },
        "Thermal" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Thermal time constant of the AutoTrans in hours.  Typically about 2.",
          "units" : "hour",
          "title" : "Thermal",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 15
        },
        "n" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "n Exponent for thermal properties in IEEE C57.  Typically 0.8.",
          "title" : "n",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 16
        },
        "m" : {
          "type" : "number",
          "default" : 8.0000000000000004E-001,
          "description" : "m Exponent for thermal properties in IEEE C57.  Typically 0.9 - 1.0",
          "title" : "m",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 17
        },
        "FLRise" : {
          "type" : "number",
          "default" : 6.5000000000000000E+001,
          "description" : "Temperature rise, deg C, for full load.  Default is 65.",
          "units" : "°C",
          "title" : "FLRise",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 18
        },
        "HSRise" : {
          "type" : "number",
          "default" : 1.5000000000000000E+001,
          "description" : "Hot spot temperature rise, deg C.  Default is 15.",
          "units" : "°C",
          "title" : "HSRise",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 19
        },
        "pctLoadLoss" : {
          "type" : "number",
          "default" : 4.0000000000000002E-001,
          "description" : "Percent load loss at full load. The %R of the High and Low windings (1 and 2) are adjusted to agree at rated kVA loading.",
          "title" : "%LoadLoss",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 20
        },
        "pctNoLoadLoss" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent no load losses at rated excitation voltage. Default is 0. Converts to a resistance in parallel with the magnetizing impedance in each winding.",
          "title" : "%NoLoadLoss",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 21
        },
        "NormHkVA" : {
          "type" : "number",
          "description" : "Normal maximum kVA rating of H winding (winding 1+2).  Usually 100% - 110% of maximum nameplate rating, depending on load shape. Defaults to 110% of kVA rating of Winding 1.",
          "units" : "kVA",
          "title" : "NormHkVA",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 22
        },
        "EmergHkVA" : {
          "type" : "number",
          "description" : "Emergency (contingency)  kVA rating of H winding (winding 1+2).  Usually 140% - 150% of maximum nameplate rating, depending on load shape. Defaults to 150% of kVA rating of Winding 1.",
          "units" : "kVA",
          "title" : "EmergHkVA",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 23
        },
        "Sub" : {
          "type" : "boolean",
          "default" : false,
          "description" : "={Yes|No}  Designates whether this AutoTrans is to be considered a substation.Default is No.",
          "title" : "Sub",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 24
        },
        "MaxTap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.1000000000000001E+000,
            1.1000000000000001E+000
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Max per unit tap for the active winding.  Default is 1.10",
          "title" : "MaxTap",
          "$dssPropertyIndex" : 31,
          "$dssPropertyOrder" : 25
        },
        "MinTap" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            9.0000000000000002E-001,
            9.0000000000000002E-001
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Min per unit tap for the active winding.  Default is 0.90",
          "title" : "MinTap",
          "$dssPropertyIndex" : 32,
          "$dssPropertyOrder" : 26
        },
        "NumTaps" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          },
          "default" : [
            32,
            32
          ],
          "$dssLength" : "Windings",
          "$dssIterator" : "Wdg",
          "description" : "Total number of taps between min and max tap.  Default is 32 (16 raise and 16 lower taps about the neutral position). The neutral position is not counted.",
          "title" : "NumTaps",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 27
        },
        "SubName" : {
          "type" : "string",
          "description" : "Substation Name. Optional. Default is null. If specified, printed on plots",
          "title" : "SubName",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 28
        },
        "pctIMag" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent magnetizing current. Default=0.0. Magnetizing branch is in parallel with windings in each phase. Also, see \"ppm_antifloat\".",
          "title" : "%IMag",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 29
        },
        "ppm_Antifloat" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Default=1 ppm.  Parts per million of AutoTrans winding VA rating connected to ground to protect against accidentally floating a winding without a reference. If positive then the effect is adding a very large reactance to ground.  If negative, then a capacitor.",
          "title" : "ppm_Antifloat",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 30
        },
        "Bank" : {
          "type" : "string",
          "description" : "Name of the bank this transformer is part of, for CIM, MultiSpeak, and other interfaces.",
          "title" : "Bank",
          "$dssPropertyIndex" : 38,
          "$dssPropertyOrder" : 31
        },
        "XRConst" : {
          "type" : "boolean",
          "default" : false,
          "description" : "={Yes|No} Default is NO. Signifies whether or not the X/R is assumed constant for harmonic studies.",
          "title" : "XRConst",
          "$dssPropertyIndex" : 39,
          "$dssPropertyOrder" : 32
        },
        "LeadLag" : {
          "$ref" : "#/$defs/PhaseSequence",
          "default" : "Lag",
          "description" : "{Lead | Lag (default) | ANSI (default) | Euro } Designation in mixed Delta-wye connections the relationship between HV to LV winding. Default is ANSI 30 deg lag, e.g., Dy1 of Yd1 vector group. To get typical European Dy11 connection, specify either \"lead\" or \"Euro\"",
          "title" : "LeadLag",
          "$dssPropertyIndex" : 40,
          "$dssPropertyOrder" : 33
        },
        "WdgCurrents" : {
          "type" : "string",
          "$comment" : "TODO: use array instead of string",
          "description" : "(Read only) Makes winding currents available via return on query (? AutoTrans.TX.WdgCurrents). Order: Phase 1, Wdg 1, Wdg 2, ..., Phase 2 ...\n\nWARNING: If the transformer has open terminal(s), results may be wrong, i.e. avoid using this in those situations. For more information, see https://github.com/dss-extensions/dss-extensions/issues/24",
          "readOnly" : true,
          "title" : "WdgCurrents",
          "$dssPropertyIndex" : 41,
          "$dssPropertyOrder" : 34
        },
        "NormAmps" : {
          "type" : "number",
          "default" : 6.1941411890040801E+000,
          "description" : "Normal rated current.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 42,
          "$dssPropertyOrder" : 35
        },
        "EmergAmps" : {
          "type" : "number",
          "default" : 8.4465561668237452E+000,
          "description" : "Maximum or emerg current.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 43,
          "$dssPropertyOrder" : 36
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 7.0000000000000001E-003,
          "description" : "Failure rate per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 44,
          "$dssPropertyOrder" : 37
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Percent of failures that become permanent.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 45,
          "$dssPropertyOrder" : 38
        },
        "Repair" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 46,
          "$dssPropertyOrder" : 39
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 47,
          "$dssPropertyOrder" : 40
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 48,
          "$dssPropertyOrder" : 41
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 49,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "XHX, XHT, XXT",
          "type" : "object",
          "properties" : {
            "XHX" : {
              "type" : "number",
              "default" : 1.0000000000000000E+001,
              "exclusiveMinimum" : 0,
              "description" : "Use this to specify the percent reactance, H-L (winding 1 to winding 2).  Use for 2- or 3-winding AutoTranss. On the kVA base of winding 1(H-X). ",
              "title" : "XHX",
              "$dssPropertyIndex" : 17,
              "$dssPropertyOrder" : 11
            },
            "XHT" : {
              "type" : "number",
              "default" : 3.5000000000000000E+001,
              "exclusiveMinimum" : 0,
              "description" : "Use this to specify the percent reactance, H-T (winding 1 to winding 3).  Use for 3-winding AutoTranss only. On the kVA base of winding 1(H-X). ",
              "title" : "XHT",
              "$dssPropertyIndex" : 18,
              "$dssPropertyOrder" : 12
            },
            "XXT" : {
              "type" : "number",
              "default" : 3.0000000000000000E+001,
              "exclusiveMinimum" : 0,
              "description" : "Use this to specify the percent reactance, L-T (winding 2 to winding 3).  Use for 3-winding AutoTranss only. On the kVA base of winding 1(H-X).  ",
              "title" : "XXT",
              "$dssPropertyIndex" : 19,
              "$dssPropertyOrder" : 13
            }
          },
          "required" : [
            "XHX"
          ]
        },
        {
          "title" : "XscArray",
          "type" : "object",
          "properties" : {
            "XSCArray" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "default" : [
                1.0000000000000000E+001
              ],
              "description" : "Use this to specify the percent reactance between all pairs of windings as an array. All values are on the kVA base of winding 1.  The order of the values is as follows:\n\n(x12 13 14... 23 24.. 34 ..)  \n\nThere will be n(n-1)/2 values, where n=number of windings.",
              "title" : "XSCArray",
              "$dssPropertyIndex" : 20,
              "$dssPropertyOrder" : 14
            }
          },
          "required" : [
            "XSCArray"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus",
        "kV"
      ],
      "$defs" : {
        "AutoTransConnection" : {
          "title" : "AutoTrans: Connection",
          "type" : "string",
          "enum" : [
            "Wye",
            "Delta",
            "Series"
          ],
          "$dssFullEnum" : [
            [
              "Wye",
              "wye",
              0
            ],
            [
              "Delta",
              "delta",
              1
            ],
            [
              "Series",
              "series",
              2
            ]
          ]
        }
      }
    },
    "AutoTransList" : {
      "title" : "AutoTransList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/AutoTrans"
      }
    },
    "AutoTransContainer" : {
      "default" : [
      ],
      "title" : "AutoTransContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/AutoTransList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "InvControl" : {
      "title" : "InvControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "DERList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of PVSystem and/or Storage elements to be controlled. If not specified, all PVSystem and Storage in the circuit are assumed to be controlled by this control. \n\nNo capability of hierarchical control between two controls for a single element is implemented at this time.",
          "title" : "DERList",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Mode" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlControlMode",
          "default" : null,
          "description" : "Smart inverter function in which the InvControl will control the PC elements specified in DERList, according to the options below:\n\nMust be one of: {VOLTVAR | VOLTWATT | DYNAMICREACCURR | WATTPF | WATTVAR | GFM} \nif the user desires to use modes simultaneously, then set the CombiMode property. Setting the Mode to any valid value disables combination mode.\n\nIn volt-var mode. This mode attempts to CONTROL the vars, according to one or two volt-var curves, depending on the monitored voltages, present active power output, and the capabilities of the PVSystem/Storage. \n\nIn volt-watt mode. This mode attempts to LIMIT the watts, according to one defined volt-watt curve, depending on the monitored voltages and the capabilities of the PVSystem/Storage. \n\nIn dynamic reactive current mode. This mode attempts to increasingly counter deviations by CONTROLLING vars, depending on the monitored voltages, present active power output, and the capabilities of the of the PVSystem/Storage.\n\nIn watt-pf mode. This mode attempts to CONTROL the vars, according to a watt-pf curve, depending on the present active power output, and the capabilities of the PVSystem/Storage. \n\nIn watt-var mode. This mode attempts to CONTROL the vars, according to a watt-var curve, depending on the present active power output, and the capabilities of the PVSystem/Storage. \n\nIn GFM mode this control will trigger the GFM control routine for the DERs within the DERList. The GFM actiosn will only take place if the pointed DERs are in GFM mode. The controller parameters are locally setup at the DER.\n\n\nNO DEFAULT",
          "title" : "Mode",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "CombiMode" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlCombiMode",
          "default" : null,
          "description" : "Combination of smart inverter functions in which the InvControl will control the PC elements in DERList, according to the options below: \n\nMust be a combination of the following: {VV_VW | VV_DRC}. Default is to not set this property, in which case the single control mode in Mode is active.  \n\nIn combined VV_VW mode, both volt-var and volt-watt control modes are active simultaneously.  See help individually for volt-var mode and volt-watt mode in Mode property.\nNote that the PVSystem/Storage will attempt to achieve both the volt-watt and volt-var set-points based on the capabilities of the inverter in the PVSystem/Storage (kVA rating, etc), any limits set on maximum active power,\n\nIn combined VV_DRC, both the volt-var and the dynamic reactive current modes are simultaneously active.",
          "title" : "CombiMode",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "VVC_Curve1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Required for VOLTVAR mode. \n\nName of the XYCurve object containing the volt-var curve. The positive values of the y-axis of the volt-var curve represent values in pu of the provided base reactive power. The negative values of the y-axis are values in pu of the absorbed base reactive power. \nProvided and absorbed base reactive power values are defined in the RefReactivePower property\n\nUnits for the x-axis are per-unit voltage, which may be in per unit of the rated voltage for the PVSystem/Storage, or may be in per unit of the average voltage at the terminals over a user-defined number of prior solutions. ",
          "title" : "VVC_Curve1",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Hysteresis_Offset" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Required for VOLTVAR mode, and defaults to 0. \n\nfor the times when the terminal voltage is decreasing, this is the off-set in per-unit voltage of a curve whose shape is the same as vvc_curve. It is offset by a certain negative value of per-unit voltage, which is defined by the base quantity for the x-axis of the volt-var curve (see help for voltage_curvex_ref)\n\nif the PVSystem/Storage terminal voltage has been increasing, and has not changed directions, utilize vvc_curve1 for the volt-var response. \n\nif the PVSystem/Storage terminal voltage has been increasing and changes directions and begins to decrease, then move from utilizing vvc_curve1 to a volt-var curve of the same shape, but offset by a certain per-unit voltage value. \n\nMaintain the same per-unit available var output level (unless head-room has changed due to change in active power or kva rating of PVSystem/Storage).  Per-unit var values remain the same for this internally constructed second curve (hysteresis curve). \n\nif the terminal voltage has been decreasing and changes directions and begins to increase , then move from utilizing the offset curve, back to the vvc_curve1 for volt-var response, but stay at the same per-unit available vars output level.",
          "title" : "Hysteresis_Offset",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Voltage_CurveX_Ref" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlVoltageCurveXRef",
          "default" : "Rated",
          "description" : "Required for VOLTVAR and VOLTWATT modes, and defaults to rated.  Possible values are: {rated|avg|ravg}.  \n\nDefines whether the x-axis values (voltage in per unit) for vvc_curve1 and the volt-watt curve corresponds to:\n\nrated. The rated voltage for the PVSystem/Storage object (1.0 in the volt-var curve equals rated voltage).\n\navg. The average terminal voltage recorded over a certain number of prior power-flow solutions.\nwith the avg setting, 1.0 per unit on the x-axis of the volt-var curve(s) corresponds to the average voltage.\nfrom a certain number of prior intervals.  See avgwindowlen parameter.\n\nravg. Same as avg, with the exception that the avgerage terminal voltage is divided by the rated voltage.",
          "title" : "Voltage_CurveX_Ref",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "AvgWindowLen" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Required for VOLTVAR mode and VOLTWATT mode, and defaults to 0 seconds (0s). \n\nSets the length of the averaging window over which the average PVSystem/Storage terminal voltage is calculated. \n\nUnits are indicated by appending s, m, or h to the integer value. \n\nThe averaging window will calculate the average PVSystem/Storage terminal voltage over the specified period of time, up to and including the last power flow solution. \n\nNote, if the solution stepsize is larger than the window length, then the voltage will be assumed to have been constant over the time-frame specified by the window length.",
          "title" : "AvgWindowLen",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "VoltWatt_Curve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Required for VOLTWATT mode. \n\nName of the XYCurve object containing the volt-watt curve. \n\nUnits for the x-axis are per-unit voltage, which may be in per unit of the rated voltage for the PVSystem/Storage, or may be in per unit of the average voltage at the terminals over a user-defined number of prior solutions. \n\nUnits for the y-axis are either in one of the options described in the VoltwattYAxis property. ",
          "title" : "VoltWatt_Curve",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "DbVMin" : {
          "type" : "number",
          "default" : 9.4999999999999996E-001,
          "description" : "Required for the dynamic reactive current mode (DYNAMICREACCURR), and defaults to 0.95 per-unit voltage (referenced to the PVSystem/Storage object rated voltage or a windowed average value). \n\nThis parameter is the minimum voltage that defines the voltage dead-band within which no reactive power is allowed to be generated. ",
          "title" : "DbVMin",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "DbVMax" : {
          "type" : "number",
          "default" : 1.0500000000000000E+000,
          "description" : "Required for the dynamic reactive current mode (DYNAMICREACCURR), and defaults to 1.05 per-unit voltage (referenced to the PVSystem object rated voltage or a windowed average value). \n\nThis parameter is the maximum voltage that defines the voltage dead-band within which no reactive power is allowed to be generated. ",
          "title" : "DbVMax",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "ArGraLowV" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Required for the dynamic reactive current mode (DYNAMICREACCURR), and defaults to 0.1  \n\nThis is a gradient, expressed in unit-less terms of %/%, to establish the ratio by which percentage capacitive reactive power production is increased as the  percent delta-voltage decreases below DbVMin. \n\nPercent delta-voltage is defined as the present PVSystem/Storage terminal voltage minus the moving average voltage, expressed as a percentage of the rated voltage for the PVSystem/Storage object. \n\nNote, the moving average voltage for the dynamic reactive current mode is different than the moving average voltage for the volt-watt and volt-var modes.",
          "title" : "ArGraLowV",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "ArGraHiV" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Required for the dynamic reactive current mode (DYNAMICREACCURR), and defaults to 0.1  \n\nThis is a gradient, expressed in unit-less terms of %/%, to establish the ratio by which percentage inductive reactive power production is increased as the  percent delta-voltage decreases above DbVMax. \n\nPercent delta-voltage is defined as the present PVSystem/Storage terminal voltage minus the moving average voltage, expressed as a percentage of the rated voltage for the PVSystem/Storage object. \n\nNote, the moving average voltage for the dynamic reactive current mode is different than the mmoving average voltage for the volt-watt and volt-var modes.",
          "title" : "ArGraHiV",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "DynReacAvgWindowLen" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Required for the dynamic reactive current mode (DYNAMICREACCURR), and defaults to 1 seconds (1s). do not use a value smaller than 1.0 \n\nSets the length of the averaging window over which the average PVSystem/Storage terminal voltage is calculated for the dynamic reactive current mode. \n\nUnits are indicated by appending s, m, or h to the integer value. \n\nTypically this will be a shorter averaging window than the volt-var and volt-watt averaging window.\n\nThe averaging window will calculate the average PVSystem/Storage terminal voltage over the specified period of time, up to and including the last power flow solution.  Note, if the solution stepsize is larger than the window length, then the voltage will be assumed to have been constant over the time-frame specified by the window length.",
          "title" : "DynReacAvgWindowLen",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "DeltaQ_Factor" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Required for the VOLTVAR and DYNAMICREACCURR modes.  Defaults to -1.0. \n\nDefining -1.0, OpenDSS takes care internally of delta_Q itself. It tries to improve convergence as well as speed up process\n\nSets the maximum change (in per unit) from the prior var output level to the desired var output level during each control iteration. \n\n\nif numerical instability is noticed in solutions such as var sign changing from one control iteration to the next and voltages oscillating between two values with some separation, this is an indication of numerical instability (use the EventLog to diagnose). \n\nif the maximum control iterations are exceeded, and no numerical instability is seen in the EventLog of via monitors, then try increasing the value of this parameter to reduce the number of control iterations needed to achieve the control criteria, and move to the power flow solution. \n\nWhen operating the controller using exponential control model (see CtrlModel), this parameter represents the sampling time gain of the controller, which is used for accelrating the controller response in terms of control iterations required.",
          "title" : "DeltaQ_Factor",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "VoltageChangeTolerance" : {
          "type" : "number",
          "default" : 1.0000000000000000E-004,
          "description" : "Defaults to 0.0001 per-unit voltage.  This parameter should only be modified by advanced users of the InvControl.  \n\nTolerance in pu of the control loop convergence associated to the monitored voltage in pu. This value is compared with the difference of the monitored voltage in pu of the current and previous control iterations of the control loop\n\nThis voltage tolerance value plus the var/watt tolerance value (VarChangeTolerance/ActivePChangeTolerance) determine, together, when to stop control iterations by the InvControl. \n\nIf an InvControl is controlling more than one PVSystem/Storage, each PVSystem/Storage has this quantity calculated independently, and so an individual PVSystem/Storage may reach the tolerance within different numbers of control iterations.",
          "title" : "VoltageChangeTolerance",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "VarChangeTolerance" : {
          "type" : "number",
          "default" : 2.5000000000000001E-002,
          "description" : "Required for VOLTVAR and DYNAMICREACCURR modes.  Defaults to 0.025 per unit of the base provided or absorbed reactive power described in the RefReactivePower property This parameter should only be modified by advanced users of the InvControl. \n\nTolerance in pu of the convergence of the control loop associated with reactive power. For the same control iteration, this value is compared to the difference, as an absolute value (without sign), between the desired reactive power value in pu and the output reactive power in pu of the controlled element.\n\nThis reactive power tolerance value plus the voltage tolerance value (VoltageChangeTolerance) determine, together, when to stop control iterations by the InvControl.  \n\nIf an InvControl is controlling more than one PVSystem/Storage, each PVSystem/Storage has this quantity calculated independently, and so an individual PVSystem/Storage may reach the tolerance within different numbers of control iterations.",
          "title" : "VarChangeTolerance",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "VoltWattYAxis" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlVoltWattYAxis",
          "default" : "PMPPPU",
          "description" : "Required for VOLTWATT mode.  Must be one of: {PMPPPU* | PAVAILABLEPU| PCTPMPPPU | KVARATINGPU}.  The default is PMPPPU.  \n\nUnits for the y-axis of the volt-watt curve while in volt-watt mode. \n\nWhen set to PMPPPU. The y-axis corresponds to the value in pu of Pmpp property of the PVSystem. \n\nWhen set to PAVAILABLEPU. The y-axis corresponds to the value in pu of the available active power of the PVSystem. \n\nWhen set to PCTPMPPPU. The y-axis corresponds to the value in pu of the power Pmpp multiplied by 1/100 of the %Pmpp property of the PVSystem.\n\nWhen set to KVARATINGPU. The y-axis corresponds to the value in pu of the kVA property of the PVSystem.",
          "title" : "VoltWattYAxis",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "RateOfChangeMode" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlRateOfChangeMode",
          "default" : "Inactive",
          "description" : "Required for VOLTWATT and VOLTVAR mode.  Must be one of: {INACTIVE* | LPF | RISEFALL }.  The default is INACTIVE.  \n\nAuxiliary option that aims to limit the changes of the desired reactive power and the active power limit between time steps, the alternatives are listed below: \n\nINACTIVE. It indicates there is no limit on rate of change imposed for either active or reactive power output. \n\nLPF. A low-pass RC filter is applied to the desired reactive power and/or the active power limit to determine the output power as a function of a time constant defined in the LPFTau property. \n\nRISEFALL. A rise and fall limit in the change of active and/or reactive power expressed in terms of pu power per second, defined in the RiseFallLimit, is applied to the desired reactive power and/or the active power limit. ",
          "title" : "RateOfChangeMode",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "LPFTau" : {
          "type" : "number",
          "default" : 1.0000000000000000E-003,
          "description" : "Not required. Defaults to 0 seconds. \n\nFilter time constant of the LPF option of the RateofChangeMode property. The time constant will cause the low-pass filter to achieve 95% of the target value in 3 time constants.",
          "units" : "s",
          "title" : "LPFTau",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "RiseFallLimit" : {
          "type" : "number",
          "default" : 1.0000000000000000E-003,
          "description" : "Not required.  Defaults to no limit (-1). Must be -1 (no limit) or a positive value.  \n\nLimit in power in pu per second used by the RISEFALL option of the RateofChangeMode property.The base value for this ramp is defined in the RefReactivePower property and/or in VoltwattYAxis.",
          "title" : "RiseFallLimit",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "DeltaP_Factor" : {
          "type" : "number",
          "default" : -1.0000000000000000E+000,
          "description" : "Required for the VOLTWATT modes.  Defaults to -1.0. \n\nDefining -1.0, OpenDSS takes care internally of delta_P itself. It tries to improve convergence as well as speed up process\n\nDefining between 0.05 and 1.0, it sets the maximum change (in unit of the y-axis) from the prior active power output level to the desired active power output level during each control iteration. \n\n\nIf numerical instability is noticed in solutions such as active power changing substantially from one control iteration to the next and/or voltages oscillating between two values with some separation, this is an indication of numerical instability (use the EventLog to diagnose). \n\nIf the maximum control iterations are exceeded, and no numerical instability is seen in the EventLog of via monitors, then try increasing the value of this parameter to reduce the number of control iterations needed to achieve the control criteria, and move to the power flow solution.",
          "title" : "DeltaP_Factor",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "EventLog" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True | No/False*} Default is NO for InvControl. Log control actions to Eventlog.",
          "title" : "EventLog",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "RefReactivePower" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlReactivePowerReference",
          "default" : "VARAVAL",
          "description" : "Required for any mode that has VOLTVAR, DYNAMICREACCURR and WATTVAR. Defaults to VARAVAL.\n\nDefines the base reactive power for both the provided and absorbed reactive power, according to one of the following options: \n\nVARAVAL. The base values for the provided and absorbed reactive power are equal to the available reactive power.\n\nVARMAX: The base values of the provided and absorbed reactive power are equal to the value defined in the kvarMax and kvarMaxAbs properties, respectively.",
          "title" : "RefReactivePower",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 24
        },
        "ActivePChangeTolerance" : {
          "type" : "number",
          "default" : 1.0000000000000000E-002,
          "description" : "Required for VOLTWATT. Default is 0.01\n\nTolerance in pu of the convergence of the control loop associated with active power. For the same control iteration, this value is compared to the difference between the active power limit in pu resulted from the convergence process and the one resulted from the volt-watt function.\n\nThis reactive power tolerance value plus the voltage tolerance value (VoltageChangeTolerance) determine, together, when to stop control iterations by the InvControl.  \n\nIf an InvControl is controlling more than one PVSystem/Storage, each PVSystem/Storage has this quantity calculated independently, and so an individual PVSystem/Storage may reach the tolerance within different numbers of control iterations.",
          "title" : "ActivePChangeTolerance",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 25
        },
        "MonVoltageCalc" : {
          "$ref" : "#/$defs/MonitoredPhase",
          "default" : "avg",
          "description" : "Number of the phase being monitored or one of {AVG | MAX | MIN} for all phases. Default=AVG. ",
          "title" : "MonVoltageCalc",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 26
        },
        "MonBus" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Name of monitored bus used by the voltage-dependent control modes. Default is bus of the controlled PVSystem/Storage or Storage.",
          "title" : "MonBus",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 27
        },
        "MonBusesVBase" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "description" : "Array list of rated voltages of the buses and their nodes presented in the monBus property. This list may have different line-to-line and/or line-to-ground voltages.",
          "title" : "MonBusesVBase",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 28
        },
        "VoltWattCH_Curve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Required for VOLTWATT mode for Storage element in CHARGING state. \n\nThe name of an XYCurve object that describes the variation in active power output (in per unit of maximum active power output for the Storage). \n\nUnits for the x-axis are per-unit voltage, which may be in per unit of the rated voltage for the Storage, or may be in per unit of the average voltage at the terminals over a user-defined number of prior solutions. \n\nUnits for the y-axis are either in: (1) per unit of maximum active power output capability of the Storage, or (2) maximum available active power output capability (defined by the parameter: VoltwattYAxis), corresponding to the terminal voltage (x-axis value in per unit). \n\nNo default -- must be specified for VOLTWATT mode for Storage element in CHARGING state.",
          "title" : "VoltWattCH_Curve",
          "$dssPropertyIndex" : 28,
          "$dssPropertyOrder" : 29
        },
        "WattPF_Curve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Required for WATTPF mode.\n\nName of the XYCurve object containing the watt-pf curve.\nThe positive values of the y-axis are positive power factor values. The negative values of the the y-axis are negative power factor values. When positive, the output reactive power has the same direction of the output active power, and when negative, it has the opposite direction.\nUnits for the x-axis are per-unit output active power, and the base active power is the Pmpp for PVSystem and kWrated for Storage.\n\nThe y-axis represents the power factor and the reference is power factor equal to 0. \n\nFor example, if the user wants to define the following XY coordinates: (0, 0.9); (0.2, 0.9); (0.5, -0.9); (1, -0.9).\nTry to plot them considering the y-axis reference equal to unity power factor.\n\nThe user needs to translate this curve into a plot in which the y-axis reference is equal to 0 power factor.It means that two new XY coordinates need to be included, in this case they are: (0.35, 1); (0.35, -1).\nTry to plot them considering the y-axis reference equal to 0 power factor.\nThe discontinuity in 0.35pu is not a problem since var is zero for either power factor equal to 1 or -1.",
          "title" : "WattPF_Curve",
          "$dssPropertyIndex" : 29,
          "$dssPropertyOrder" : 30
        },
        "WattVar_Curve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Required for WATTVAR mode. \n\nName of the XYCurve object containing the watt-var curve. The positive values of the y-axis of the watt-var curve represent values in pu of the provided base reactive power. The negative values of the y-axis are values in pu of the absorbed base reactive power. \nProvided and absorbed base reactive power values are defined in the RefReactivePower property.\n\nUnits for the x-axis are per-unit output active power, and the base active power is the Pmpp for PVSystem and kWrated for Storage.",
          "title" : "WattVar_Curve",
          "$dssPropertyIndex" : 30,
          "$dssPropertyOrder" : 31
        },
        "VSetPoint" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Required for Active Voltage Regulation (AVR).",
          "title" : "VSetPoint",
          "$dssPropertyIndex" : 33,
          "$dssPropertyOrder" : 32
        },
        "ControlModel" : {
          "$ref" : "#/$defs/InvControl/$defs/InvControlControlModel",
          "default" : 0,
          "description" : "Integer defining the method for moving across the control curve. It can be one of the following:\n\n0 = Linear mode (default)\n1 = Exponential\n\nUse this property for better tunning your controller and improve the controller response in terms of control iterations needed to reach the target.\nThis property alters the meaning of deltaQ_factor and deltaP_factor properties according to its value (Check help). The method can also be combined with the controller tolerance for improving performance.",
          "title" : "ControlModel",
          "$dssPropertyIndex" : 34,
          "$dssPropertyOrder" : 33
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 35,
          "$dssPropertyOrder" : 34
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 36,
          "$dssPropertyOrder" : 35
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 37,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ],
      "$defs" : {
        "InvControlControlMode" : {
          "title" : "InvControl: Control Mode",
          "type" : "string",
          "enum" : [
            "Voltvar",
            "VoltWatt",
            "DynamicReaccurr",
            "WattPF",
            "Wattvar",
            "AVR",
            "GFM"
          ],
          "$dssFullEnum" : [
            [
              "Voltvar",
              "Voltvar",
              1
            ],
            [
              "VoltWatt",
              "VoltWatt",
              2
            ],
            [
              "DynamicReaccurr",
              "DynamicReaccurr",
              3
            ],
            [
              "WattPF",
              "WattPF",
              4
            ],
            [
              "Wattvar",
              "Wattvar",
              5
            ],
            [
              "AVR",
              "AVR",
              6
            ],
            [
              "GFM",
              "GFM",
              7
            ]
          ]
        },
        "InvControlCombiMode" : {
          "title" : "InvControl: Combi Mode",
          "type" : "string",
          "enum" : [
            "VV_VW",
            "VV_DRC"
          ],
          "$dssFullEnum" : [
            [
              "VV_VW",
              "VV_VW",
              1
            ],
            [
              "VV_DRC",
              "VV_DRC",
              2
            ]
          ]
        },
        "InvControlVoltageCurveXRef" : {
          "title" : "InvControl: Voltage Curve X Ref",
          "type" : "string",
          "enum" : [
            "Rated",
            "Avg",
            "RAvg"
          ],
          "$dssFullEnum" : [
            [
              "Rated",
              "Rated",
              0
            ],
            [
              "Avg",
              "Avg",
              1
            ],
            [
              "RAvg",
              "RAvg",
              2
            ]
          ]
        },
        "InvControlVoltWattYAxis" : {
          "title" : "InvControl: Volt-Watt Y-Axis",
          "type" : "string",
          "enum" : [
            "PAvailablePU",
            "PMPPPU",
            "PctPMPPPU",
            "KVARatingPU"
          ],
          "$dssFullEnum" : [
            [
              "PAvailablePU",
              "PAvailablePU",
              0
            ],
            [
              "PMPPPU",
              "PMPPPU",
              1
            ],
            [
              "PctPMPPPU",
              "PctPMPPPU",
              2
            ],
            [
              "KVARatingPU",
              "KVARatingPU",
              3
            ]
          ]
        },
        "InvControlRateOfChangeMode" : {
          "title" : "InvControl: Rate-of-change Mode",
          "type" : "string",
          "enum" : [
            "Inactive",
            "LPF",
            "RiseFall"
          ],
          "$dssFullEnum" : [
            [
              "Inactive",
              "Inactive",
              0
            ],
            [
              "LPF",
              "LPF",
              1
            ],
            [
              "RiseFall",
              "RiseFall",
              2
            ]
          ]
        },
        "InvControlReactivePowerReference" : {
          "title" : "InvControl: Reactive Power Reference",
          "type" : "string",
          "enum" : [
            "VARAVAL",
            "VARMAX"
          ],
          "$dssFullEnum" : [
            [
              "VARAVAL",
              "VARAVAL",
              0
            ],
            [
              "VARMAX",
              "VARMAX",
              1
            ]
          ]
        },
        "InvControlControlModel" : {
          "title" : "InvControl: Control Model",
          "type" : "integer",
          "enum" : [
            0,
            1
          ],
          "$dssFullEnum" : [
            [
              "Linear",
              "Linear",
              0
            ],
            [
              "Exponential",
              "Exponential",
              1
            ]
          ]
        }
      }
    },
    "InvControlList" : {
      "title" : "InvControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/InvControl"
      }
    },
    "InvControlContainer" : {
      "default" : [
      ],
      "title" : "InvControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/InvControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "ExpControl" : {
      "title" : "ExpControl",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "PVSystemList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Array list of PVSystems to be controlled.\n\nIf not specified, all PVSystems in the circuit are assumed to be controlled by this ExpControl.",
          "title" : "PVSystemList",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "VReg" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "minimum" : 0,
          "description" : "Per-unit voltage at which reactive power is zero; defaults to 1.0.\n\nThis may dynamically self-adjust when VregTau > 0, limited by VregMin and VregMax.If input as 0, Vreg will be initialized from a snapshot solution with no inverter Q.The equilibrium point of reactive power is also affected by Qbias",
          "title" : "VReg",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Slope" : {
          "type" : "number",
          "default" : 5.0000000000000000E+001,
          "exclusiveMinimum" : 0,
          "description" : "Per-unit reactive power injection / per-unit voltage deviation from Vreg; defaults to 50.\n\nUnlike InvControl, base reactive power is constant at the inverter kva rating.",
          "title" : "Slope",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "VRegTau" : {
          "type" : "number",
          "default" : 1.2000000000000000E+003,
          "minimum" : 0,
          "description" : "Time constant for adaptive Vreg. Defaults to 1200 seconds.\n\nWhen the control injects or absorbs reactive power due to a voltage deviation from the Q=0 crossing of the volt-var curve, the Q=0 crossing will move toward the actual terminal voltage with this time constant. Over time, the effect is to gradually bring inverter reactive power to zero as the grid voltage changes due to non-solar effects. If zero, then Vreg stays fixed. IEEE1547-2018 requires adjustability from 300s to 5000s",
          "units" : "s",
          "title" : "VRegTau",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "QBias" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Equilibrium per-unit reactive power when V=Vreg; defaults to 0.\n\nEnter > 0 for lagging (capacitive) bias, < 0 for leading (inductive) bias.",
          "title" : "QBias",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "VRegMin" : {
          "type" : "number",
          "default" : 9.4999999999999996E-001,
          "minimum" : 0,
          "description" : "Lower limit on adaptive Vreg; defaults to 0.95 per-unit",
          "title" : "VRegMin",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "VRegMax" : {
          "type" : "number",
          "default" : 1.0500000000000000E+000,
          "minimum" : 0,
          "description" : "Upper limit on adaptive Vreg; defaults to 1.05 per-unit",
          "title" : "VRegMax",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "QMaxLead" : {
          "type" : "number",
          "default" : 4.4000000000000000E-001,
          "exclusiveMinimum" : 0,
          "description" : "Limit on leading (inductive) reactive power injection, in per-unit of base kva; defaults to 0.44.For Category A inverters per P1547/D7, set this value to 0.25.\n\nRegardless of QmaxLead, the reactive power injection is still limited by dynamic headroom when actual real power output exceeds 0%",
          "title" : "QMaxLead",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "QMaxLag" : {
          "type" : "number",
          "default" : 4.4000000000000000E-001,
          "exclusiveMinimum" : 0,
          "description" : "Limit on lagging (capacitive) reactive power injection, in per-unit of base kva; defaults to 0.44.\n\nFor Category A inverters per P1547/D7, set this value to 0.25.Regardless of QmaxLag, the reactive power injection is still limited by dynamic headroom when actual real power output exceeds 0%",
          "title" : "QMaxLag",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "EventLog" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True* | No/False} Default is No for ExpControl. Log control actions to Eventlog.",
          "title" : "EventLog",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "DeltaQ_Factor" : {
          "type" : "number",
          "default" : 6.9999999999999996E-001,
          "description" : "Convergence parameter; Defaults to 0.7. \n\nSets the maximum change (in per unit) from the prior var output level to the desired var output level during each control iteration. If numerical instability is noticed in solutions such as var sign changing from one control iteration to the next and voltages oscillating between two values with some separation, this is an indication of numerical instability (use the EventLog to diagnose). If the maximum control iterations are exceeded, and no numerical instability is seen in the EventLog of via monitors, then try increasing the value of this parameter to reduce the number of control iterations needed to achieve the control criteria, and move to the power flow solution.",
          "title" : "DeltaQ_Factor",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "PreferQ" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True* | No/False} Default is No for ExpControl.\n\nCurtails real power output as needed to meet the reactive power requirement. IEEE1547-2018 requires Yes, but the default is No for backward compatibility of OpenDSS models.",
          "title" : "PreferQ",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "TResponse" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "exclusiveMinimum" : 0,
          "description" : "Open-loop response time for changes in Q.\n\nThe value of Q reaches 90% of the target change within Tresponse, which corresponds to a low-pass filter having tau = Tresponse / 2.3026. The behavior is similar to LPFTAU in InvControl, but here the response time is input instead of the time constant. IEEE1547-2018 default is 10s for Category A and 5s for Category B, adjustable from 1s to 90s for both categories. However, the default is 0 for backward compatibility of OpenDSS models.",
          "title" : "TResponse",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "DERList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "Alternative to PVSystemList for CIM export and import.\n\nHowever, storage is not actually implemented yet. Use fully qualified PVSystem names.",
          "title" : "DERList",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ]
    },
    "ExpControlList" : {
      "title" : "ExpControlList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/ExpControl"
      }
    },
    "ExpControlContainer" : {
      "default" : [
      ],
      "title" : "ExpControlContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/ExpControlList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "GICLine" : {
      "title" : "GICLine",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which the main terminal (1) is connected.\nbus1=busname\nbus1=busname.1.2.3",
          "title" : "Bus1",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus2" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of bus to which 2nd terminal is connected.\nbus2=busname\nbus2=busname.1.2.3\n\nNo Default; must be specified.",
          "title" : "Bus2",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Frequency" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "exclusiveMinimum" : 0,
          "description" : "Source frequency.  Defaults to 0.1 Hz.",
          "units" : "Hz",
          "title" : "Frequency",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of phases.  Defaults to 3.",
          "title" : "Phases",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "R" : {
          "type" : "number",
          "description" : "Resistance of line, ohms of impedance in series with GIC voltage source. ",
          "units" : "Ω",
          "title" : "R",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "X" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Reactance at base frequency, ohms. Default = 0.0. This value is generally not important for GIC studies but may be used if desired.",
          "units" : "Ω",
          "title" : "X",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "C" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Value of line blocking capacitance in microfarads. Default = 0.0, implying that there is no line blocking capacitor.",
          "units" : "μF",
          "title" : "C",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "Volts, Angle",
          "type" : "object",
          "properties" : {
            "Volts" : {
              "type" : "number",
              "description" : "Voltage magnitude, in volts, of the GIC voltage induced across this line. When specified, voltage source is assumed defined by Voltage and Angle properties. \n\nSpecify this value\n\nOR\n\nEN, EE, lat1, lon1, lat2, lon2. \n\nNot both!!  Last one entered will take precedence. Assumed identical in each phase of the Line object.",
              "units" : "V",
              "title" : "Volts",
              "$dssPropertyIndex" : 3,
              "$dssPropertyOrder" : 4
            },
            "Angle" : {
              "type" : "number",
              "default" : 0.0000000000000000E+000,
              "description" : "Phase angle in degrees of first phase. Default=0.0.  See Voltage property",
              "title" : "Angle",
              "$dssPropertyIndex" : 4,
              "$dssPropertyOrder" : 5
            }
          },
          "required" : [
            "Volts"
          ]
        },
        {
          "title" : "EN, EE, Lat1, Lon1, Lat2, Lon2",
          "type" : "object",
          "properties" : {
            "EN" : {
              "type" : "number",
              "description" : "Northward Electric field (V/km). If specified, Voltage and Angle are computed from EN, EE, lat and lon values.",
              "units" : "V/km",
              "title" : "EN",
              "$dssPropertyIndex" : 10,
              "$dssPropertyOrder" : 11
            },
            "EE" : {
              "type" : "number",
              "description" : "Eastward Electric field (V/km).  If specified, Voltage and Angle are computed from EN, EE, lat and lon values.",
              "units" : "V/km",
              "title" : "EE",
              "$dssPropertyIndex" : 11,
              "$dssPropertyOrder" : 12
            },
            "Lat1" : {
              "type" : "number",
              "description" : "Latitude of Bus1 (degrees)",
              "units" : "°",
              "title" : "Lat1",
              "$dssPropertyIndex" : 12,
              "$dssPropertyOrder" : 13
            },
            "Lon1" : {
              "type" : "number",
              "description" : "Longitude of Bus1 (degrees)",
              "units" : "°",
              "title" : "Lon1",
              "$dssPropertyIndex" : 13,
              "$dssPropertyOrder" : 14
            },
            "Lat2" : {
              "type" : "number",
              "description" : "Latitude of Bus2 (degrees)",
              "units" : "°",
              "title" : "Lat2",
              "$dssPropertyIndex" : 14,
              "$dssPropertyOrder" : 15
            },
            "Lon2" : {
              "type" : "number",
              "description" : "Longitude of Bus2 (degrees)",
              "units" : "°",
              "title" : "Lon2",
              "$dssPropertyIndex" : 15,
              "$dssPropertyOrder" : 16
            }
          },
          "required" : [
            "EN",
            "EE",
            "Lat1",
            "Lon1",
            "Lat2",
            "Lon2"
          ]
        }
      ],
      "required" : [
        "Name",
        "Bus1"
      ]
    },
    "GICLineList" : {
      "title" : "GICLineList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/GICLine"
      }
    },
    "GICLineContainer" : {
      "default" : [
      ],
      "title" : "GICLineContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/GICLineList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "GICTransformer" : {
      "title" : "GICTransformer",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "BusH" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of High-side(H) bus. Examples:\nBusH=busname\nBusH=busname.1.2.3",
          "title" : "BusH",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "BusNH" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of Neutral bus for H, or first, winding. Defaults to all phases connected to H-side bus, node 0, if not specified and transformer type is either GSU or YY. (Shunt Wye Connection to ground reference)For Auto, this is automatically set to the X bus.",
          "title" : "BusNH",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "BusX" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of Low-side(X) bus, if type=Auto or YY. ",
          "title" : "BusX",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "BusNX" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of Neutral bus for X, or Second, winding. Defaults to all phases connected to X-side bus, node 0, if not specified. (Shunt Wye Connection to ground reference)",
          "title" : "BusNX",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "Phases" : {
          "type" : "integer",
          "default" : 3,
          "exclusiveMinimum" : 0,
          "description" : "Number of Phases. Default is 3.",
          "title" : "Phases",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "Type" : {
          "$ref" : "#/$defs/GICTransformer/$defs/GICTransformerType",
          "default" : "GSU",
          "description" : "Type of transformer: {GSU* | Auto | YY}. Default is GSU.",
          "title" : "Type",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "kVLL1" : {
          "type" : "number",
          "default" : 5.0000000000000000E+002,
          "description" : "Optional. kV LL rating for H winding (winding 1). Default is 500. Required if you are going to export vars for power flow analysis or enter winding resistances in percent.",
          "units" : "kV",
          "title" : "kVLL1",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "kVLL2" : {
          "type" : "number",
          "default" : 1.3800000000000000E+002,
          "description" : "Optional. kV LL rating for X winding (winding 2). Default is 138. Required if you are going to export vars for power flow analysis or enter winding resistances in percent..",
          "units" : "kV",
          "title" : "kVLL2",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "MVA" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Optional. MVA Rating assumed Transformer. Default is 100. Used for computing vars due to GIC and winding resistances if kV and MVA ratings are specified.",
          "units" : "MVA",
          "title" : "MVA",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "VarCurve" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "description" : "Optional. XYCurve object name. Curve is expected as TOTAL pu vars vs pu GIC amps/phase. Vars are in pu of the MVA property. No Default value. Required only if you are going to export vars for power flow analysis. See K property.",
          "title" : "VarCurve",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "K" : {
          "type" : "number",
          "default" : 2.2000000000000002E+000,
          "description" : "Mvar K factor. Default way to convert GIC Amps in H winding (winding 1) to Mvar. Default is 2.2. Commonly-used simple multiplier for estimating Mvar losses for power flow analysis. \n\nMvar = K * kvLL * GIC per phase / 1000 \n\nMutually exclusive with using the VarCurve property and pu curves.If you specify this (default), VarCurve is ignored.",
          "title" : "K",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "NormAmps" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Normal rated current.",
          "title" : "NormAmps",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "EmergAmps" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Maximum or emerg current.",
          "title" : "EmergAmps",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "FaultRate" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Failure rate per year.",
          "title" : "FaultRate",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "pctPerm" : {
          "type" : "number",
          "default" : 1.0000000000000000E+002,
          "description" : "Percent of failures that become permanent.",
          "title" : "pctPerm",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "Repair" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Hours to repair.",
          "title" : "Repair",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "R1, R2",
          "type" : "object",
          "properties" : {
            "R1" : {
              "type" : "number",
              "default" : 5.0000000000000000E+000,
              "description" : "Resistance, each phase, ohms for H winding, (Series winding, if Auto). Default is 0.0001. If ",
              "units" : "Ω",
              "title" : "R1",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 8
            },
            "R2" : {
              "type" : "number",
              "default" : 3.8088000000000005E-001,
              "description" : "Resistance, each phase, ohms for X winding, (Common winding, if Auto). Default is 0.0001. ",
              "units" : "Ω",
              "title" : "R2",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 9
            }
          },
          "required" : [
            "R1"
          ]
        },
        {
          "title" : "pctR1, pctR2",
          "type" : "object",
          "properties" : {
            "pctR1" : {
              "type" : "number",
              "description" : "Optional. Percent Resistance, each phase, for H winding (1), (Series winding, if Auto). Default is 0.2. \n\nAlternative way to enter R1 value. It is the actual resistances in ohmns that matter. MVA and kV should be specified.",
              "title" : "%R1",
              "$dssPropertyIndex" : 13,
              "$dssPropertyOrder" : 14
            },
            "pctR2" : {
              "type" : "number",
              "description" : "Optional. Percent Resistance, each phase, for X winding (2), (Common winding, if Auto). Default is 0.2. \n\nAlternative way to enter R2 value. It is the actual resistances in ohms that matter. MVA and kV should be specified.",
              "title" : "%R2",
              "$dssPropertyIndex" : 14,
              "$dssPropertyOrder" : 15
            }
          },
          "required" : [
            "pctR1"
          ]
        }
      ],
      "required" : [
        "Name"
      ],
      "$defs" : {
        "GICTransformerType" : {
          "title" : "GICTransformer: Type",
          "type" : "string",
          "enum" : [
            "GSU",
            "Auto",
            "YY"
          ],
          "$dssFullEnum" : [
            [
              "GSU",
              "GSU",
              1
            ],
            [
              "Auto",
              "Auto",
              2
            ],
            [
              "YY",
              "YY",
              3
            ]
          ]
        }
      }
    },
    "GICTransformerList" : {
      "title" : "GICTransformerList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/GICTransformer"
      }
    },
    "GICTransformerContainer" : {
      "default" : [
      ],
      "title" : "GICTransformerContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/GICTransformerList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "VSConverter" : {
      "title" : "VSConverter",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Phases" : {
          "type" : "integer",
          "default" : 4,
          "exclusiveMinimum" : 0,
          "description" : "Number of AC plus DC conductors. Default is 4. AC phases numbered before DC conductors.",
          "title" : "Phases",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Bus1" : {
          "$ref" : "#/$defs/BusConnection",
          "description" : "Name of converter bus, containing both AC and DC conductors. Bus2 is always ground.",
          "title" : "Bus1",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kVAC" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Nominal AC line-neutral voltage in kV. Must be specified > 0.",
          "title" : "kVAC",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "kVDC" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Nominal DC voltage in kV. Must be specified > 0.",
          "title" : "kVDC",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 5
        },
        "kW" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Nominal converter power in kW. Must be specified > 0.",
          "title" : "kW",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 6
        },
        "NDC" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of DC conductors. Default is 1. DC conductors numbered after AC phases.",
          "title" : "NDC",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 7
        },
        "RAC" : {
          "type" : "number",
          "default" : 9.9999999999999998E-013,
          "description" : "AC resistance (ohms) for the converter transformer, plus any series reactors. Default is 0.\nMust be 0 for Vac control mode.",
          "units" : "Ω",
          "title" : "RAC",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 8
        },
        "XAC" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "AC reactance (ohms) for the converter transformer, plus any series reactors. Default is 0.\nMust be 0 for Vac control mode. Must be >0 for PacVac, PacQac or VacVdc control mode.",
          "units" : "Ω",
          "title" : "XAC",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 9
        },
        "M0" : {
          "type" : "number",
          "default" : 5.0000000000000000E-001,
          "description" : "Fixed or initial value of the modulation index. Default is 0.5.",
          "title" : "M0",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 10
        },
        "d0" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Fixed or initial value of the power angle in degrees. Default is 0.",
          "title" : "d0",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 11
        },
        "MMin" : {
          "type" : "number",
          "default" : 1.0000000000000001E-001,
          "description" : "Minimum value of modulation index. Default is 0.1.",
          "title" : "MMin",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 12
        },
        "MMax" : {
          "type" : "number",
          "default" : 9.0000000000000002E-001,
          "description" : "Maximum value of modulation index. Default is 0.9.",
          "title" : "MMax",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 13
        },
        "IACMax" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Maximum value of AC line current, per-unit of nominal. Default is 2.",
          "title" : "IACMax",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 14
        },
        "IDCMax" : {
          "type" : "number",
          "default" : 2.0000000000000000E+000,
          "description" : "Maximum value of DC current, per-unit of nominal. Default is 2.",
          "title" : "IDCMax",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 15
        },
        "VACRef" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Reference AC line-to-neutral voltage, RMS Volts. Default is 0.\nApplies to PacVac and VdcVac control modes, influencing m.",
          "title" : "VACRef",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 16
        },
        "PACRef" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Reference total AC real power, Watts. Default is 0.\nApplies to PacVac and PacQac control modes, influencing d.",
          "title" : "PACRef",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 17
        },
        "QACRef" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Reference total AC reactive power, Vars. Default is 0.\nApplies to PacQac and VdcQac control modes, influencing m.",
          "title" : "QACRef",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 18
        },
        "VDCRef" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Reference DC voltage, Volts. Default is 0.\nApplies to VdcVac control mode, influencing d.",
          "title" : "VDCRef",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 19
        },
        "VSCMode" : {
          "$ref" : "#/$defs/VSConverter/$defs/VSConverterControlMode",
          "default" : "Fixed",
          "description" : "Control Mode (Fixed|PacVac|PacQac|VdcVac|VdcQac). Default is Fixed.",
          "title" : "VSCMode",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 20
        },
        "Spectrum" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "default" : "default",
          "description" : "Name of harmonic spectrum for this device.",
          "title" : "Spectrum",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 21
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 22
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 23
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name",
        "Bus1"
      ],
      "$defs" : {
        "VSConverterControlMode" : {
          "title" : "VSConverter: Control Mode",
          "type" : "string",
          "enum" : [
            "Fixed",
            "PacVac",
            "PacQac",
            "VdcVac",
            "VdcQac"
          ],
          "$dssFullEnum" : [
            [
              "Fixed",
              "Fixed",
              0
            ],
            [
              "PacVac",
              "PacVac",
              1
            ],
            [
              "PacQac",
              "PacQac",
              2
            ],
            [
              "VdcVac",
              "VdcVac",
              3
            ],
            [
              "VdcQac",
              "VdcQac",
              4
            ]
          ]
        }
      }
    },
    "VSConverterList" : {
      "title" : "VSConverterList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/VSConverter"
      }
    },
    "VSConverterContainer" : {
      "default" : [
      ],
      "title" : "VSConverterContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/VSConverterList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Monitor" : {
      "title" : "Monitor",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "default" : "Vsource.source",
          "description" : "Name (Full Object name) of element to which the monitor is connected.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the monitor is connected. 1 or 2, typically. For monitoring states, attach monitor to terminal 1.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Mode" : {
          "type" : "integer",
          "default" : 0,
          "description" : "Bitmask integer designating the values the monitor is to capture: \n0 = Voltages and currents at designated terminal\n1 = Powers at designated terminal\n2 = Tap Position (Transformer Device only)\n3 = State Variables (PCElements only)\n4 = Flicker level and severity index (Pst) for voltages. No adders apply.\n    Flicker level at simulation time step, Pst at 10-minute time step.\n5 = Solution variables (Iterations, etc).\nNormally, these would be actual phasor quantities from solution.\n6 = Capacitor Switching (Capacitors only)\n7 = Storage state vars (Storage device only)\n8 = All winding currents (Transformer device only)\n9 = Losses, watts and var (of monitored device)\n10 = All Winding voltages (Transformer device only)\nNormally, these would be actual phasor quantities from solution.\n11 = All terminal node voltages and line currents of monitored device\n12 = All terminal node voltages LL and line currents of monitored device\nCombine mode with adders below to achieve other results for terminal quantities:\n+16 = Sequence quantities\n+32 = Magnitude only\n+64 = Positive sequence only or avg of all phases\n\nMix adder to obtain desired results. For example:\nMode=112 will save positive sequence voltage and current magnitudes only\nMode=48 will save all sequence voltages and currents, but magnitude only.",
          "title" : "Mode",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Action" : {
          "$ref" : "#/$defs/Monitor/$defs/MonitorAction",
          "description" : "{Clear | Save | Take | Process}\n(C)lears or (S)aves current buffer.\n(T)ake action takes a sample.\n(P)rocesses the data taken so far (e.g. Pst for mode 4).\n\nNote that monitors are automatically reset (cleared) when the Set Mode= command is issued. Otherwise, the user must explicitly reset all monitors (reset monitors command) or individual monitors with the Clear action.",
          "writeOnly" : true,
          "title" : "Action",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 10
        },
        "Residual" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes/True | No/False} Default = No.  Include Residual cbannel (sum of all phases) for voltage and current. Does not apply to sequence quantity modes or power modes.",
          "title" : "Residual",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "VIPolar" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes/True | No/False} Default = YES. Report voltage and current in polar form (Mag/Angle). (default)  Otherwise, it will be real and imaginary.",
          "title" : "VIPolar",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 6
        },
        "PPolar" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes/True | No/False} Default = YES. Report power in Apparent power, S, in polar form (Mag/Angle).(default)  Otherwise, is P and Q",
          "title" : "PPolar",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 7
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 8
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 9
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ],
      "$defs" : {
        "MonitorAction" : {
          "title" : "Monitor: Action",
          "type" : "string",
          "enum" : [
            "Clear",
            "Save",
            "TakeSample",
            "Process",
            "Reset"
          ],
          "$dssFullEnum" : [
            [
              "Clear",
              "Clear",
              0
            ],
            [
              "Save",
              "Save",
              1
            ],
            [
              "TakeSample",
              "TakeSample",
              2
            ],
            [
              "Process",
              "Process",
              3
            ],
            [
              "Reset",
              "Reset",
              0
            ]
          ]
        }
      }
    },
    "MonitorList" : {
      "title" : "MonitorList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Monitor"
      }
    },
    "MonitorContainer" : {
      "default" : [
      ],
      "title" : "MonitorContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/MonitorList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "EnergyMeter" : {
      "title" : "EnergyMeter",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "default" : "Vsource.source",
          "description" : "Name (Full Object name) of element to which the monitor is connected.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the monitor is connected. 1 or 2, typically.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "Action" : {
          "$ref" : "#/$defs/EnergyMeter/$defs/EnergyMeterAction",
          "description" : "{Clear (reset) | Save | Take | Zonedump | Allocate | Reduce} \n\n(A)llocate = Allocate loads on the meter zone to match PeakCurrent.\n(C)lear = reset all registers to zero\n(R)educe = reduces zone by merging lines (see Set Keeplist & ReduceOption)\n(S)ave = saves the current register values to a file.\n   File name is \"MTR_metername.csv\".\n(T)ake = Takes a sample at present solution\n(Z)onedump = Dump names of elements in meter zone to a file\n   File name is \"Zone_metername.csv\".",
          "writeOnly" : true,
          "title" : "Action",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 27
        },
        "Option" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "default" : [
            "E",
            "R",
            "C"
          ],
          "description" : "Enter a string ARRAY of any combination of the following. Options processed left-to-right:\n\n(E)xcess : (default) UE/EEN is estimate of energy over capacity \n(T)otal : UE/EEN is total energy after capacity exceeded\n(R)adial : (default) Treats zone as a radial circuit\n(M)esh : Treats zone as meshed network (not radial).\n(C)ombined : (default) Load UE/EEN computed from combination of overload and undervoltage.\n(V)oltage : Load UE/EEN computed based on voltage only.\n\nExample: option=(E, R)",
          "title" : "Option",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 4
        },
        "kVANormal" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Upper limit on kVA load in the zone, Normal configuration. Default is 0.0 (ignored). Overrides limits on individual lines for overload EEN. With \"LocalOnly=Yes\" option, uses only load in metered branch.",
          "title" : "kVANormal",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "kVAEmerg" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Upper limit on kVA load in the zone, Emergency configuration. Default is 0.0 (ignored). Overrides limits on individual lines for overload UE. With \"LocalOnly=Yes\" option, uses only load in metered branch.",
          "title" : "kVAEmerg",
          "$dssPropertyIndex" : 6,
          "$dssPropertyOrder" : 6
        },
        "PeakCurrent" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            4.0000000000000000E+002,
            4.0000000000000000E+002,
            4.0000000000000000E+002
          ],
          "description" : "ARRAY of current magnitudes representing the peak currents measured at this location for the load allocation function.  Default is (400, 400, 400). Enter one current for each phase",
          "title" : "PeakCurrent",
          "$dssPropertyIndex" : 7,
          "$dssPropertyOrder" : 7
        },
        "ZoneList" : {
          "$ref" : "#/$defs/StringArrayOrFilePath",
          "description" : "ARRAY of full element names for this meter's zone.  Default is for meter to find it's own zone. If specified, DSS uses this list instead.  Can access the names in a single-column text file.  Examples: \n\nzonelist=[line.L1, transformer.T1, Line.L3] \nzonelist=(file=branchlist.txt)",
          "title" : "ZoneList",
          "$dssPropertyIndex" : 8,
          "$dssPropertyOrder" : 8
        },
        "LocalOnly" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No}  Default is NO.  If Yes, meter considers only the monitored element for EEN and UE calcs.  Uses whole zone for losses.",
          "title" : "LocalOnly",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 9
        },
        "Mask" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "default" : [
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000,
            1.0000000000000000E+000
          ],
          "minItems" : 67,
          "maxItems" : 67,
          "description" : "Mask for adding registers whenever all meters are totalized.  Array of floating point numbers representing the multiplier to be used for summing each register from this meter. Default = (1, 1, 1, 1, ... ).  You only have to enter as many as are changed (positional). Useful when two meters monitor same energy, etc.",
          "title" : "Mask",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 10
        },
        "Losses" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes | No}  Default is YES. Compute Zone losses. If NO, then no losses at all are computed.",
          "title" : "Losses",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 11
        },
        "LineLosses" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes | No}  Default is YES. Compute Line losses. If NO, then none of the losses are computed.",
          "title" : "LineLosses",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 12
        },
        "XfmrLosses" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes | No}  Default is YES. Compute Transformer losses. If NO, transformers are ignored in loss calculations.",
          "title" : "XfmrLosses",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 13
        },
        "SeqLosses" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes | No}  Default is YES. Compute Sequence losses in lines and segregate by line mode losses and zero mode losses.",
          "title" : "SeqLosses",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 14
        },
        "ThreePhaseLosses" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes | No}  Default is YES. Compute Line losses and segregate by 3-phase and other (1- and 2-phase) line losses. ",
          "title" : "3PhaseLosses",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 15
        },
        "VBaseLosses" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes | No}  Default is YES. Compute losses and segregate by voltage base. If NO, then voltage-based tabulation is not reported.",
          "title" : "VBaseLosses",
          "$dssPropertyIndex" : 16,
          "$dssPropertyOrder" : 16
        },
        "PhaseVoltageReport" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{Yes | No}  Default is NO.  Report min, max, and average phase voltages for the zone and tabulate by voltage base. Demand Intervals must be turned on (Set Demand=true) and voltage bases must be defined for this property to take effect. Result is in a separate report file.",
          "title" : "PhaseVoltageReport",
          "$dssPropertyIndex" : 17,
          "$dssPropertyOrder" : 17
        },
        "Int_Rate" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Average number of annual interruptions for head of the meter zone (source side of zone or feeder).",
          "title" : "Int_Rate",
          "$dssPropertyIndex" : 18,
          "$dssPropertyOrder" : 18
        },
        "Int_Duration" : {
          "type" : "number",
          "default" : 0.0000000000000000E+000,
          "description" : "Average annual duration, in hr, of interruptions for head of the meter zone (source side of zone or feeder).",
          "title" : "Int_Duration",
          "$dssPropertyIndex" : 19,
          "$dssPropertyOrder" : 19
        },
        "SAIFI" : {
          "type" : "number",
          "description" : "(Read only) Makes SAIFI result available via return on query (? energymeter.myMeter.SAIFI.",
          "readOnly" : true,
          "title" : "SAIFI",
          "$dssPropertyIndex" : 20,
          "$dssPropertyOrder" : 20
        },
        "SAIFIkW" : {
          "type" : "number",
          "description" : "(Read only) Makes SAIFIkW result available via return on query (? energymeter.myMeter.SAIFIkW.",
          "readOnly" : true,
          "title" : "SAIFIkW",
          "$dssPropertyIndex" : 21,
          "$dssPropertyOrder" : 21
        },
        "SAIDI" : {
          "type" : "number",
          "description" : "(Read only) Makes SAIDI result available via return on query (? energymeter.myMeter.SAIDI.",
          "readOnly" : true,
          "title" : "SAIDI",
          "$dssPropertyIndex" : 22,
          "$dssPropertyOrder" : 22
        },
        "CAIDI" : {
          "type" : "number",
          "description" : "(Read only) Makes CAIDI result available via return on query (? energymeter.myMeter.CAIDI.",
          "readOnly" : true,
          "title" : "CAIDI",
          "$dssPropertyIndex" : 23,
          "$dssPropertyOrder" : 23
        },
        "CustInterrupts" : {
          "type" : "number",
          "description" : "(Read only) Makes Total Customer Interrupts value result available via return on query (? energymeter.myMeter.CustInterrupts.",
          "readOnly" : true,
          "title" : "CustInterrupts",
          "$dssPropertyIndex" : 24,
          "$dssPropertyOrder" : 24
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 25,
          "$dssPropertyOrder" : 25
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 26,
          "$dssPropertyOrder" : 26
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 27,
          "$dssPropertyOrder" : 1
        }
      },
      "required" : [
        "Name"
      ],
      "$defs" : {
        "EnergyMeterAction" : {
          "title" : "EnergyMeter: Action",
          "type" : "string",
          "enum" : [
            "Allocate",
            "Clear",
            "Reduce",
            "Save",
            "TakeSample",
            "ZoneDump"
          ],
          "$dssFullEnum" : [
            [
              "Allocate",
              "Allocate",
              0
            ],
            [
              "Clear",
              "Clear",
              1
            ],
            [
              "Reduce",
              "Reduce",
              2
            ],
            [
              "Save",
              "Save",
              3
            ],
            [
              "TakeSample",
              "TakeSample",
              4
            ],
            [
              "ZoneDump",
              "ZoneDump",
              5
            ]
          ]
        }
      }
    },
    "EnergyMeterList" : {
      "title" : "EnergyMeterList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/EnergyMeter"
      }
    },
    "EnergyMeterContainer" : {
      "default" : [
      ],
      "title" : "EnergyMeterContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/EnergyMeterList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    },
    "Sensor" : {
      "title" : "Sensor",
      "type" : "object",
      "properties" : {
        "Name" : {
          "title" : "Name",
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 255,
          "$dssPropertyOrder" : 0,
          "$dssPropertyIndex" : 0
        },
        "Element" : {
          "type" : "string",
          "description" : "Name (Full Object name) of element to which the Sensor is connected.",
          "title" : "Element",
          "$dssPropertyIndex" : 1,
          "$dssPropertyOrder" : 2
        },
        "Terminal" : {
          "type" : "integer",
          "default" : 1,
          "description" : "Number of the terminal of the circuit element to which the Sensor is connected. 1 or 2, typically. Default is 1.",
          "title" : "Terminal",
          "$dssPropertyIndex" : 2,
          "$dssPropertyOrder" : 3
        },
        "kVBase" : {
          "type" : "number",
          "default" : 1.2470000000000001E+001,
          "description" : "Voltage base for the sensor, in kV. If connected to a 2- or 3-phase terminal, \nspecify L-L voltage. For 1-phase devices specify L-N or actual 1-phase voltage. Like many other DSS devices, default is 12.47kV.",
          "units" : "kV",
          "title" : "kVBase",
          "$dssPropertyIndex" : 3,
          "$dssPropertyOrder" : 4
        },
        "Clear" : {
          "type" : "boolean",
          "default" : false,
          "description" : "{ Yes | No }. Clear=Yes clears sensor values. Should be issued before putting in a new set of measurements.",
          "writeOnly" : true,
          "title" : "Clear",
          "$dssPropertyIndex" : 4,
          "$dssPropertyOrder" : 15
        },
        "kVs" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          },
          "description" : "Array of Voltages (kV) measured by the voltage sensor. For Delta-connected sensors, Line-Line voltages are expected. For Wye, Line-Neutral are expected.",
          "title" : "kVs",
          "$dssPropertyIndex" : 5,
          "$dssPropertyOrder" : 5
        },
        "Conn" : {
          "$ref" : "#/$defs/Connection",
          "default" : "Wye",
          "description" : "Voltage sensor Connection: { wye | delta | LN | LL }.  Default is wye. Applies to voltage measurement only. \nCurrents are always assumed to be line currents.\nIf wye or LN, voltage is assumed measured line-neutral; otherwise, line-line.",
          "title" : "Conn",
          "$dssPropertyIndex" : 9,
          "$dssPropertyOrder" : 9
        },
        "DeltaDirection" : {
          "type" : "integer",
          "default" : 1,
          "description" : "{1 or -1}  Default is 1:  1-2, 2-3, 3-1.  For reverse rotation, enter -1. Any positive or negative entry will suffice.",
          "title" : "DeltaDirection",
          "$dssPropertyIndex" : 10,
          "$dssPropertyOrder" : 10
        },
        "pctError" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Assumed percent error in the measurement. Default is 1.",
          "title" : "%Error",
          "$dssPropertyIndex" : 11,
          "$dssPropertyOrder" : 11
        },
        "Weight" : {
          "type" : "number",
          "default" : 1.0000000000000000E+000,
          "description" : "Weighting factor: Default is 1.",
          "title" : "Weight",
          "$dssPropertyIndex" : 12,
          "$dssPropertyOrder" : 12
        },
        "BaseFreq" : {
          "type" : "number",
          "exclusiveMinimum" : 0,
          "description" : "Base Frequency for ratings.",
          "units" : "Hz",
          "title" : "BaseFreq",
          "$dssPropertyIndex" : 13,
          "$dssPropertyOrder" : 13
        },
        "Enabled" : {
          "type" : "boolean",
          "default" : true,
          "description" : "{Yes|No or True|False} Indicates whether this element is enabled.",
          "title" : "Enabled",
          "$dssPropertyIndex" : 14,
          "$dssPropertyOrder" : 14
        },
        "Like" : {
          "type" : "string",
          "description" : "Make like another object, e.g.:\n\nNew Capacitor.C2 like=c1  ...",
          "writeOnly" : true,
          "title" : "Like",
          "$dssPropertyIndex" : 15,
          "$dssPropertyOrder" : 1
        }
      },
      "oneOf" : [
        {
          "title" : "kWs, kvars",
          "type" : "object",
          "properties" : {
            "kWs" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "description" : "Array of Active power (kW) measurements at the sensor. Is converted into Currents along with q=[...]\nWill override any currents=[...] specification.",
              "title" : "kWs",
              "$dssPropertyIndex" : 7,
              "$dssPropertyOrder" : 7
            },
            "kvars" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "description" : "Array of Reactive power (kvar) measurements at the sensor. Is converted into Currents along with p=[...]",
              "title" : "kvars",
              "$dssPropertyIndex" : 8,
              "$dssPropertyOrder" : 8
            }
          },
          "required" : [
            "kWs"
          ]
        },
        {
          "title" : "currents",
          "type" : "object",
          "properties" : {
            "Currents" : {
              "type" : "array",
              "items" : {
                "type" : "number"
              },
              "description" : "Array of Currents (amps) measured by the current sensor. Specify this or power quantities; not both.",
              "title" : "Currents",
              "$dssPropertyIndex" : 6,
              "$dssPropertyOrder" : 6
            }
          },
          "required" : [
            "Currents"
          ]
        }
      ],
      "required" : [
        "Name",
        "Element",
        "kVBase"
      ]
    },
    "SensorList" : {
      "title" : "SensorList",
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Sensor"
      }
    },
    "SensorContainer" : {
      "default" : [
      ],
      "title" : "SensorContainer",
      "oneOf" : [
        {
          "$ref" : "#/$defs/SensorList"
        },
        {
          "$ref" : "#/$defs/JSONFilePath"
        },
        {
          "$ref" : "#/$defs/JSONLinesFilePath"
        }
      ]
    }
  },
  "type" : "object",
  "properties" : {
    "Name" : {
      "title" : "Name",
      "type" : "string",
      "minLength" : 1,
      "maxLength" : 255
    },
    "DefaultBaseFreq" : {
      "title" : "DefaultBaseFreq",
      "type" : "number",
      "exclusiveMinimum" : 0,
      "$comment" : "Dynamic default."
    },
    "PreCommands" : {
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "PostCommands" : {
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "Bus" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/$defs/Bus"
      },
      "default" : [
      ]
    },
    "LineCode" : {
      "$ref" : "#/$defs/LineCodeContainer"
    },
    "LoadShape" : {
      "$ref" : "#/$defs/LoadShapeContainer"
    },
    "TShape" : {
      "$ref" : "#/$defs/TShapeContainer"
    },
    "PriceShape" : {
      "$ref" : "#/$defs/PriceShapeContainer"
    },
    "XYcurve" : {
      "$ref" : "#/$defs/XYcurveContainer"
    },
    "GrowthShape" : {
      "$ref" : "#/$defs/GrowthShapeContainer"
    },
    "TCC_Curve" : {
      "$ref" : "#/$defs/TCC_CurveContainer"
    },
    "Spectrum" : {
      "$ref" : "#/$defs/SpectrumContainer"
    },
    "WireData" : {
      "$ref" : "#/$defs/WireDataContainer"
    },
    "CNData" : {
      "$ref" : "#/$defs/CNDataContainer"
    },
    "TSData" : {
      "$ref" : "#/$defs/TSDataContainer"
    },
    "LineSpacing" : {
      "$ref" : "#/$defs/LineSpacingContainer"
    },
    "LineGeometry" : {
      "$ref" : "#/$defs/LineGeometryContainer"
    },
    "XfmrCode" : {
      "$ref" : "#/$defs/XfmrCodeContainer"
    },
    "Line" : {
      "$ref" : "#/$defs/LineContainer"
    },
    "Vsource" : {
      "$ref" : "#/$defs/VsourceContainer"
    },
    "Isource" : {
      "$ref" : "#/$defs/IsourceContainer"
    },
    "VCCS" : {
      "$ref" : "#/$defs/VCCSContainer"
    },
    "Load" : {
      "$ref" : "#/$defs/LoadContainer"
    },
    "Transformer" : {
      "$ref" : "#/$defs/TransformerContainer"
    },
    "RegControl" : {
      "$ref" : "#/$defs/RegControlContainer"
    },
    "Capacitor" : {
      "$ref" : "#/$defs/CapacitorContainer"
    },
    "Reactor" : {
      "$ref" : "#/$defs/ReactorContainer"
    },
    "CapControl" : {
      "$ref" : "#/$defs/CapControlContainer"
    },
    "Fault" : {
      "$ref" : "#/$defs/FaultContainer"
    },
    "DynamicExp" : {
      "$ref" : "#/$defs/DynamicExpContainer"
    },
    "Generator" : {
      "$ref" : "#/$defs/GeneratorContainer"
    },
    "GenDispatcher" : {
      "$ref" : "#/$defs/GenDispatcherContainer"
    },
    "Storage" : {
      "$ref" : "#/$defs/StorageContainer"
    },
    "StorageController" : {
      "$ref" : "#/$defs/StorageControllerContainer"
    },
    "Relay" : {
      "$ref" : "#/$defs/RelayContainer"
    },
    "Recloser" : {
      "$ref" : "#/$defs/RecloserContainer"
    },
    "Fuse" : {
      "$ref" : "#/$defs/FuseContainer"
    },
    "SwtControl" : {
      "$ref" : "#/$defs/SwtControlContainer"
    },
    "PVSystem" : {
      "$ref" : "#/$defs/PVSystemContainer"
    },
    "UPFC" : {
      "$ref" : "#/$defs/UPFCContainer"
    },
    "UPFCControl" : {
      "$ref" : "#/$defs/UPFCControlContainer"
    },
    "ESPVLControl" : {
      "$ref" : "#/$defs/ESPVLControlContainer"
    },
    "IndMach012" : {
      "$ref" : "#/$defs/IndMach012Container"
    },
    "GICsource" : {
      "$ref" : "#/$defs/GICsourceContainer"
    },
    "AutoTrans" : {
      "$ref" : "#/$defs/AutoTransContainer"
    },
    "InvControl" : {
      "$ref" : "#/$defs/InvControlContainer"
    },
    "ExpControl" : {
      "$ref" : "#/$defs/ExpControlContainer"
    },
    "GICLine" : {
      "$ref" : "#/$defs/GICLineContainer"
    },
    "GICTransformer" : {
      "$ref" : "#/$defs/GICTransformerContainer"
    },
    "VSConverter" : {
      "$ref" : "#/$defs/VSConverterContainer"
    },
    "Monitor" : {
      "$ref" : "#/$defs/MonitorContainer"
    },
    "EnergyMeter" : {
      "$ref" : "#/$defs/EnergyMeterContainer"
    },
    "Sensor" : {
      "$ref" : "#/$defs/SensorContainer"
    }
  },
  "required" : [
    "Vsource"
  ]
}